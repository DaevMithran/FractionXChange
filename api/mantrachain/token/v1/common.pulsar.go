// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package tokenv1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_TokenOption           protoreflect.MessageDescriptor
	fd_TokenOption_type      protoreflect.FieldDescriptor
	fd_TokenOption_value     protoreflect.FieldDescriptor
	fd_TokenOption_sub_value protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_token_v1_common_proto_init()
	md_TokenOption = File_mantrachain_token_v1_common_proto.Messages().ByName("TokenOption")
	fd_TokenOption_type = md_TokenOption.Fields().ByName("type")
	fd_TokenOption_value = md_TokenOption.Fields().ByName("value")
	fd_TokenOption_sub_value = md_TokenOption.Fields().ByName("sub_value")
}

var _ protoreflect.Message = (*fastReflection_TokenOption)(nil)

type fastReflection_TokenOption TokenOption

func (x *TokenOption) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TokenOption)(x)
}

func (x *TokenOption) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_token_v1_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TokenOption_messageType fastReflection_TokenOption_messageType
var _ protoreflect.MessageType = fastReflection_TokenOption_messageType{}

type fastReflection_TokenOption_messageType struct{}

func (x fastReflection_TokenOption_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TokenOption)(nil)
}
func (x fastReflection_TokenOption_messageType) New() protoreflect.Message {
	return new(fastReflection_TokenOption)
}
func (x fastReflection_TokenOption_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TokenOption
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TokenOption) Descriptor() protoreflect.MessageDescriptor {
	return md_TokenOption
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TokenOption) Type() protoreflect.MessageType {
	return _fastReflection_TokenOption_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TokenOption) New() protoreflect.Message {
	return new(fastReflection_TokenOption)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TokenOption) Interface() protoreflect.ProtoMessage {
	return (*TokenOption)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TokenOption) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Type_ != "" {
		value := protoreflect.ValueOfString(x.Type_)
		if !f(fd_TokenOption_type, value) {
			return
		}
	}
	if x.Value != "" {
		value := protoreflect.ValueOfString(x.Value)
		if !f(fd_TokenOption_value, value) {
			return
		}
	}
	if x.SubValue != "" {
		value := protoreflect.ValueOfString(x.SubValue)
		if !f(fd_TokenOption_sub_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TokenOption) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenOption.type":
		return x.Type_ != ""
	case "mantrachain.token.v1.TokenOption.value":
		return x.Value != ""
	case "mantrachain.token.v1.TokenOption.sub_value":
		return x.SubValue != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenOption"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenOption does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenOption) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenOption.type":
		x.Type_ = ""
	case "mantrachain.token.v1.TokenOption.value":
		x.Value = ""
	case "mantrachain.token.v1.TokenOption.sub_value":
		x.SubValue = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenOption"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenOption does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TokenOption) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.token.v1.TokenOption.type":
		value := x.Type_
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.TokenOption.value":
		value := x.Value
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.TokenOption.sub_value":
		value := x.SubValue
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenOption"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenOption does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenOption) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenOption.type":
		x.Type_ = value.Interface().(string)
	case "mantrachain.token.v1.TokenOption.value":
		x.Value = value.Interface().(string)
	case "mantrachain.token.v1.TokenOption.sub_value":
		x.SubValue = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenOption"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenOption does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenOption) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenOption.type":
		panic(fmt.Errorf("field type of message mantrachain.token.v1.TokenOption is not mutable"))
	case "mantrachain.token.v1.TokenOption.value":
		panic(fmt.Errorf("field value of message mantrachain.token.v1.TokenOption is not mutable"))
	case "mantrachain.token.v1.TokenOption.sub_value":
		panic(fmt.Errorf("field sub_value of message mantrachain.token.v1.TokenOption is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenOption"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenOption does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TokenOption) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenOption.type":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.TokenOption.value":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.TokenOption.sub_value":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenOption"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenOption does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TokenOption) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.token.v1.TokenOption", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TokenOption) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenOption) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TokenOption) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TokenOption) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TokenOption)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Type_)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Value)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SubValue)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TokenOption)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SubValue) > 0 {
			i -= len(x.SubValue)
			copy(dAtA[i:], x.SubValue)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SubValue)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Value) > 0 {
			i -= len(x.Value)
			copy(dAtA[i:], x.Value)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Value)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Type_) > 0 {
			i -= len(x.Type_)
			copy(dAtA[i:], x.Type_)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Type_)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TokenOption)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TokenOption: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TokenOption: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Type_", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Type_ = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Value = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubValue", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubValue = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TokenAttribute           protoreflect.MessageDescriptor
	fd_TokenAttribute_type      protoreflect.FieldDescriptor
	fd_TokenAttribute_value     protoreflect.FieldDescriptor
	fd_TokenAttribute_sub_value protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_token_v1_common_proto_init()
	md_TokenAttribute = File_mantrachain_token_v1_common_proto.Messages().ByName("TokenAttribute")
	fd_TokenAttribute_type = md_TokenAttribute.Fields().ByName("type")
	fd_TokenAttribute_value = md_TokenAttribute.Fields().ByName("value")
	fd_TokenAttribute_sub_value = md_TokenAttribute.Fields().ByName("sub_value")
}

var _ protoreflect.Message = (*fastReflection_TokenAttribute)(nil)

type fastReflection_TokenAttribute TokenAttribute

func (x *TokenAttribute) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TokenAttribute)(x)
}

func (x *TokenAttribute) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_token_v1_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TokenAttribute_messageType fastReflection_TokenAttribute_messageType
var _ protoreflect.MessageType = fastReflection_TokenAttribute_messageType{}

type fastReflection_TokenAttribute_messageType struct{}

func (x fastReflection_TokenAttribute_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TokenAttribute)(nil)
}
func (x fastReflection_TokenAttribute_messageType) New() protoreflect.Message {
	return new(fastReflection_TokenAttribute)
}
func (x fastReflection_TokenAttribute_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TokenAttribute
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TokenAttribute) Descriptor() protoreflect.MessageDescriptor {
	return md_TokenAttribute
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TokenAttribute) Type() protoreflect.MessageType {
	return _fastReflection_TokenAttribute_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TokenAttribute) New() protoreflect.Message {
	return new(fastReflection_TokenAttribute)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TokenAttribute) Interface() protoreflect.ProtoMessage {
	return (*TokenAttribute)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TokenAttribute) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Type_ != "" {
		value := protoreflect.ValueOfString(x.Type_)
		if !f(fd_TokenAttribute_type, value) {
			return
		}
	}
	if x.Value != "" {
		value := protoreflect.ValueOfString(x.Value)
		if !f(fd_TokenAttribute_value, value) {
			return
		}
	}
	if x.SubValue != "" {
		value := protoreflect.ValueOfString(x.SubValue)
		if !f(fd_TokenAttribute_sub_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TokenAttribute) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenAttribute.type":
		return x.Type_ != ""
	case "mantrachain.token.v1.TokenAttribute.value":
		return x.Value != ""
	case "mantrachain.token.v1.TokenAttribute.sub_value":
		return x.SubValue != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenAttribute"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenAttribute does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenAttribute) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenAttribute.type":
		x.Type_ = ""
	case "mantrachain.token.v1.TokenAttribute.value":
		x.Value = ""
	case "mantrachain.token.v1.TokenAttribute.sub_value":
		x.SubValue = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenAttribute"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenAttribute does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TokenAttribute) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.token.v1.TokenAttribute.type":
		value := x.Type_
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.TokenAttribute.value":
		value := x.Value
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.TokenAttribute.sub_value":
		value := x.SubValue
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenAttribute"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenAttribute does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenAttribute) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenAttribute.type":
		x.Type_ = value.Interface().(string)
	case "mantrachain.token.v1.TokenAttribute.value":
		x.Value = value.Interface().(string)
	case "mantrachain.token.v1.TokenAttribute.sub_value":
		x.SubValue = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenAttribute"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenAttribute does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenAttribute) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenAttribute.type":
		panic(fmt.Errorf("field type of message mantrachain.token.v1.TokenAttribute is not mutable"))
	case "mantrachain.token.v1.TokenAttribute.value":
		panic(fmt.Errorf("field value of message mantrachain.token.v1.TokenAttribute is not mutable"))
	case "mantrachain.token.v1.TokenAttribute.sub_value":
		panic(fmt.Errorf("field sub_value of message mantrachain.token.v1.TokenAttribute is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenAttribute"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenAttribute does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TokenAttribute) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenAttribute.type":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.TokenAttribute.value":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.TokenAttribute.sub_value":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenAttribute"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenAttribute does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TokenAttribute) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.token.v1.TokenAttribute", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TokenAttribute) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenAttribute) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TokenAttribute) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TokenAttribute) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TokenAttribute)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Type_)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Value)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SubValue)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TokenAttribute)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SubValue) > 0 {
			i -= len(x.SubValue)
			copy(dAtA[i:], x.SubValue)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SubValue)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Value) > 0 {
			i -= len(x.Value)
			copy(dAtA[i:], x.Value)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Value)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Type_) > 0 {
			i -= len(x.Type_)
			copy(dAtA[i:], x.Type_)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Type_)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TokenAttribute)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TokenAttribute: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TokenAttribute: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Type_", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Type_ = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Value = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubValue", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubValue = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TokenImage      protoreflect.MessageDescriptor
	fd_TokenImage_type protoreflect.FieldDescriptor
	fd_TokenImage_url  protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_token_v1_common_proto_init()
	md_TokenImage = File_mantrachain_token_v1_common_proto.Messages().ByName("TokenImage")
	fd_TokenImage_type = md_TokenImage.Fields().ByName("type")
	fd_TokenImage_url = md_TokenImage.Fields().ByName("url")
}

var _ protoreflect.Message = (*fastReflection_TokenImage)(nil)

type fastReflection_TokenImage TokenImage

func (x *TokenImage) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TokenImage)(x)
}

func (x *TokenImage) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_token_v1_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TokenImage_messageType fastReflection_TokenImage_messageType
var _ protoreflect.MessageType = fastReflection_TokenImage_messageType{}

type fastReflection_TokenImage_messageType struct{}

func (x fastReflection_TokenImage_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TokenImage)(nil)
}
func (x fastReflection_TokenImage_messageType) New() protoreflect.Message {
	return new(fastReflection_TokenImage)
}
func (x fastReflection_TokenImage_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TokenImage
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TokenImage) Descriptor() protoreflect.MessageDescriptor {
	return md_TokenImage
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TokenImage) Type() protoreflect.MessageType {
	return _fastReflection_TokenImage_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TokenImage) New() protoreflect.Message {
	return new(fastReflection_TokenImage)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TokenImage) Interface() protoreflect.ProtoMessage {
	return (*TokenImage)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TokenImage) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Type_ != "" {
		value := protoreflect.ValueOfString(x.Type_)
		if !f(fd_TokenImage_type, value) {
			return
		}
	}
	if x.Url != "" {
		value := protoreflect.ValueOfString(x.Url)
		if !f(fd_TokenImage_url, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TokenImage) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenImage.type":
		return x.Type_ != ""
	case "mantrachain.token.v1.TokenImage.url":
		return x.Url != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenImage"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenImage does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenImage) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenImage.type":
		x.Type_ = ""
	case "mantrachain.token.v1.TokenImage.url":
		x.Url = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenImage"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenImage does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TokenImage) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.token.v1.TokenImage.type":
		value := x.Type_
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.TokenImage.url":
		value := x.Url
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenImage"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenImage does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenImage) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenImage.type":
		x.Type_ = value.Interface().(string)
	case "mantrachain.token.v1.TokenImage.url":
		x.Url = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenImage"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenImage does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenImage) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenImage.type":
		panic(fmt.Errorf("field type of message mantrachain.token.v1.TokenImage is not mutable"))
	case "mantrachain.token.v1.TokenImage.url":
		panic(fmt.Errorf("field url of message mantrachain.token.v1.TokenImage is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenImage"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenImage does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TokenImage) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenImage.type":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.TokenImage.url":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenImage"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenImage does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TokenImage) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.token.v1.TokenImage", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TokenImage) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenImage) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TokenImage) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TokenImage) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TokenImage)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Type_)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Url)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TokenImage)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Url) > 0 {
			i -= len(x.Url)
			copy(dAtA[i:], x.Url)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Url)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Type_) > 0 {
			i -= len(x.Type_)
			copy(dAtA[i:], x.Type_)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Type_)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TokenImage)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TokenImage: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TokenImage: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Type_", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Type_ = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Url = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TokenLink      protoreflect.MessageDescriptor
	fd_TokenLink_type protoreflect.FieldDescriptor
	fd_TokenLink_url  protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_token_v1_common_proto_init()
	md_TokenLink = File_mantrachain_token_v1_common_proto.Messages().ByName("TokenLink")
	fd_TokenLink_type = md_TokenLink.Fields().ByName("type")
	fd_TokenLink_url = md_TokenLink.Fields().ByName("url")
}

var _ protoreflect.Message = (*fastReflection_TokenLink)(nil)

type fastReflection_TokenLink TokenLink

func (x *TokenLink) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TokenLink)(x)
}

func (x *TokenLink) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_token_v1_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TokenLink_messageType fastReflection_TokenLink_messageType
var _ protoreflect.MessageType = fastReflection_TokenLink_messageType{}

type fastReflection_TokenLink_messageType struct{}

func (x fastReflection_TokenLink_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TokenLink)(nil)
}
func (x fastReflection_TokenLink_messageType) New() protoreflect.Message {
	return new(fastReflection_TokenLink)
}
func (x fastReflection_TokenLink_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TokenLink
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TokenLink) Descriptor() protoreflect.MessageDescriptor {
	return md_TokenLink
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TokenLink) Type() protoreflect.MessageType {
	return _fastReflection_TokenLink_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TokenLink) New() protoreflect.Message {
	return new(fastReflection_TokenLink)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TokenLink) Interface() protoreflect.ProtoMessage {
	return (*TokenLink)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TokenLink) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Type_ != "" {
		value := protoreflect.ValueOfString(x.Type_)
		if !f(fd_TokenLink_type, value) {
			return
		}
	}
	if x.Url != "" {
		value := protoreflect.ValueOfString(x.Url)
		if !f(fd_TokenLink_url, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TokenLink) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenLink.type":
		return x.Type_ != ""
	case "mantrachain.token.v1.TokenLink.url":
		return x.Url != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenLink"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenLink does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenLink) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenLink.type":
		x.Type_ = ""
	case "mantrachain.token.v1.TokenLink.url":
		x.Url = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenLink"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenLink does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TokenLink) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.token.v1.TokenLink.type":
		value := x.Type_
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.TokenLink.url":
		value := x.Url
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenLink"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenLink does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenLink) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenLink.type":
		x.Type_ = value.Interface().(string)
	case "mantrachain.token.v1.TokenLink.url":
		x.Url = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenLink"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenLink does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenLink) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenLink.type":
		panic(fmt.Errorf("field type of message mantrachain.token.v1.TokenLink is not mutable"))
	case "mantrachain.token.v1.TokenLink.url":
		panic(fmt.Errorf("field url of message mantrachain.token.v1.TokenLink is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenLink"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenLink does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TokenLink) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.TokenLink.type":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.TokenLink.url":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.TokenLink"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.TokenLink does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TokenLink) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.token.v1.TokenLink", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TokenLink) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenLink) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TokenLink) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TokenLink) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TokenLink)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Type_)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Url)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TokenLink)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Url) > 0 {
			i -= len(x.Url)
			copy(dAtA[i:], x.Url)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Url)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Type_) > 0 {
			i -= len(x.Type_)
			copy(dAtA[i:], x.Type_)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Type_)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TokenLink)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TokenLink: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TokenLink: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Type_", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Type_ = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Url = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgNftImageMetadata       protoreflect.MessageDescriptor
	fd_MsgNftImageMetadata_image protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_token_v1_common_proto_init()
	md_MsgNftImageMetadata = File_mantrachain_token_v1_common_proto.Messages().ByName("MsgNftImageMetadata")
	fd_MsgNftImageMetadata_image = md_MsgNftImageMetadata.Fields().ByName("image")
}

var _ protoreflect.Message = (*fastReflection_MsgNftImageMetadata)(nil)

type fastReflection_MsgNftImageMetadata MsgNftImageMetadata

func (x *MsgNftImageMetadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNftImageMetadata)(x)
}

func (x *MsgNftImageMetadata) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_token_v1_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNftImageMetadata_messageType fastReflection_MsgNftImageMetadata_messageType
var _ protoreflect.MessageType = fastReflection_MsgNftImageMetadata_messageType{}

type fastReflection_MsgNftImageMetadata_messageType struct{}

func (x fastReflection_MsgNftImageMetadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNftImageMetadata)(nil)
}
func (x fastReflection_MsgNftImageMetadata_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNftImageMetadata)
}
func (x fastReflection_MsgNftImageMetadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftImageMetadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNftImageMetadata) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftImageMetadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNftImageMetadata) Type() protoreflect.MessageType {
	return _fastReflection_MsgNftImageMetadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNftImageMetadata) New() protoreflect.Message {
	return new(fastReflection_MsgNftImageMetadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNftImageMetadata) Interface() protoreflect.ProtoMessage {
	return (*MsgNftImageMetadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNftImageMetadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Image != nil {
		value := protoreflect.ValueOfMessage(x.Image.ProtoReflect())
		if !f(fd_MsgNftImageMetadata_image, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNftImageMetadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftImageMetadata.image":
		return x.Image != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftImageMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftImageMetadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftImageMetadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftImageMetadata.image":
		x.Image = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftImageMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftImageMetadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNftImageMetadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.token.v1.MsgNftImageMetadata.image":
		value := x.Image
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftImageMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftImageMetadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftImageMetadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftImageMetadata.image":
		x.Image = value.Message().Interface().(*TokenImage)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftImageMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftImageMetadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftImageMetadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftImageMetadata.image":
		if x.Image == nil {
			x.Image = new(TokenImage)
		}
		return protoreflect.ValueOfMessage(x.Image.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftImageMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftImageMetadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNftImageMetadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftImageMetadata.image":
		m := new(TokenImage)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftImageMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftImageMetadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNftImageMetadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.token.v1.MsgNftImageMetadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNftImageMetadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftImageMetadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNftImageMetadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNftImageMetadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNftImageMetadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Image != nil {
			l = options.Size(x.Image)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftImageMetadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Image != nil {
			encoded, err := options.Marshal(x.Image)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftImageMetadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftImageMetadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftImageMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Image == nil {
					x.Image = &TokenImage{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Image); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgNftsImagesMetadata_1_list)(nil)

type _MsgNftsImagesMetadata_1_list struct {
	list *[]*TokenImage
}

func (x *_MsgNftsImagesMetadata_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNftsImagesMetadata_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNftsImagesMetadata_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenImage)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNftsImagesMetadata_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenImage)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNftsImagesMetadata_1_list) AppendMutable() protoreflect.Value {
	v := new(TokenImage)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftsImagesMetadata_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNftsImagesMetadata_1_list) NewElement() protoreflect.Value {
	v := new(TokenImage)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftsImagesMetadata_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNftsImagesMetadata_2_list)(nil)

type _MsgNftsImagesMetadata_2_list struct {
	list *[]string
}

func (x *_MsgNftsImagesMetadata_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNftsImagesMetadata_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgNftsImagesMetadata_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgNftsImagesMetadata_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNftsImagesMetadata_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgNftsImagesMetadata at list field NftsIds as it is not of Message kind"))
}

func (x *_MsgNftsImagesMetadata_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgNftsImagesMetadata_2_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgNftsImagesMetadata_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNftsImagesMetadata_3_list)(nil)

type _MsgNftsImagesMetadata_3_list struct {
	list *[]uint64
}

func (x *_MsgNftsImagesMetadata_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNftsImagesMetadata_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_MsgNftsImagesMetadata_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgNftsImagesMetadata_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNftsImagesMetadata_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgNftsImagesMetadata at list field ImagesIndexes as it is not of Message kind"))
}

func (x *_MsgNftsImagesMetadata_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgNftsImagesMetadata_3_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_MsgNftsImagesMetadata_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgNftsImagesMetadata                protoreflect.MessageDescriptor
	fd_MsgNftsImagesMetadata_images         protoreflect.FieldDescriptor
	fd_MsgNftsImagesMetadata_nfts_ids       protoreflect.FieldDescriptor
	fd_MsgNftsImagesMetadata_images_indexes protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_token_v1_common_proto_init()
	md_MsgNftsImagesMetadata = File_mantrachain_token_v1_common_proto.Messages().ByName("MsgNftsImagesMetadata")
	fd_MsgNftsImagesMetadata_images = md_MsgNftsImagesMetadata.Fields().ByName("images")
	fd_MsgNftsImagesMetadata_nfts_ids = md_MsgNftsImagesMetadata.Fields().ByName("nfts_ids")
	fd_MsgNftsImagesMetadata_images_indexes = md_MsgNftsImagesMetadata.Fields().ByName("images_indexes")
}

var _ protoreflect.Message = (*fastReflection_MsgNftsImagesMetadata)(nil)

type fastReflection_MsgNftsImagesMetadata MsgNftsImagesMetadata

func (x *MsgNftsImagesMetadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNftsImagesMetadata)(x)
}

func (x *MsgNftsImagesMetadata) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_token_v1_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNftsImagesMetadata_messageType fastReflection_MsgNftsImagesMetadata_messageType
var _ protoreflect.MessageType = fastReflection_MsgNftsImagesMetadata_messageType{}

type fastReflection_MsgNftsImagesMetadata_messageType struct{}

func (x fastReflection_MsgNftsImagesMetadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNftsImagesMetadata)(nil)
}
func (x fastReflection_MsgNftsImagesMetadata_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNftsImagesMetadata)
}
func (x fastReflection_MsgNftsImagesMetadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftsImagesMetadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNftsImagesMetadata) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftsImagesMetadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNftsImagesMetadata) Type() protoreflect.MessageType {
	return _fastReflection_MsgNftsImagesMetadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNftsImagesMetadata) New() protoreflect.Message {
	return new(fastReflection_MsgNftsImagesMetadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNftsImagesMetadata) Interface() protoreflect.ProtoMessage {
	return (*MsgNftsImagesMetadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNftsImagesMetadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Images) != 0 {
		value := protoreflect.ValueOfList(&_MsgNftsImagesMetadata_1_list{list: &x.Images})
		if !f(fd_MsgNftsImagesMetadata_images, value) {
			return
		}
	}
	if len(x.NftsIds) != 0 {
		value := protoreflect.ValueOfList(&_MsgNftsImagesMetadata_2_list{list: &x.NftsIds})
		if !f(fd_MsgNftsImagesMetadata_nfts_ids, value) {
			return
		}
	}
	if len(x.ImagesIndexes) != 0 {
		value := protoreflect.ValueOfList(&_MsgNftsImagesMetadata_3_list{list: &x.ImagesIndexes})
		if !f(fd_MsgNftsImagesMetadata_images_indexes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNftsImagesMetadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesMetadata.images":
		return len(x.Images) != 0
	case "mantrachain.token.v1.MsgNftsImagesMetadata.nfts_ids":
		return len(x.NftsIds) != 0
	case "mantrachain.token.v1.MsgNftsImagesMetadata.images_indexes":
		return len(x.ImagesIndexes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesMetadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsImagesMetadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesMetadata.images":
		x.Images = nil
	case "mantrachain.token.v1.MsgNftsImagesMetadata.nfts_ids":
		x.NftsIds = nil
	case "mantrachain.token.v1.MsgNftsImagesMetadata.images_indexes":
		x.ImagesIndexes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesMetadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNftsImagesMetadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesMetadata.images":
		if len(x.Images) == 0 {
			return protoreflect.ValueOfList(&_MsgNftsImagesMetadata_1_list{})
		}
		listValue := &_MsgNftsImagesMetadata_1_list{list: &x.Images}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.token.v1.MsgNftsImagesMetadata.nfts_ids":
		if len(x.NftsIds) == 0 {
			return protoreflect.ValueOfList(&_MsgNftsImagesMetadata_2_list{})
		}
		listValue := &_MsgNftsImagesMetadata_2_list{list: &x.NftsIds}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.token.v1.MsgNftsImagesMetadata.images_indexes":
		if len(x.ImagesIndexes) == 0 {
			return protoreflect.ValueOfList(&_MsgNftsImagesMetadata_3_list{})
		}
		listValue := &_MsgNftsImagesMetadata_3_list{list: &x.ImagesIndexes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesMetadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsImagesMetadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesMetadata.images":
		lv := value.List()
		clv := lv.(*_MsgNftsImagesMetadata_1_list)
		x.Images = *clv.list
	case "mantrachain.token.v1.MsgNftsImagesMetadata.nfts_ids":
		lv := value.List()
		clv := lv.(*_MsgNftsImagesMetadata_2_list)
		x.NftsIds = *clv.list
	case "mantrachain.token.v1.MsgNftsImagesMetadata.images_indexes":
		lv := value.List()
		clv := lv.(*_MsgNftsImagesMetadata_3_list)
		x.ImagesIndexes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesMetadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsImagesMetadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesMetadata.images":
		if x.Images == nil {
			x.Images = []*TokenImage{}
		}
		value := &_MsgNftsImagesMetadata_1_list{list: &x.Images}
		return protoreflect.ValueOfList(value)
	case "mantrachain.token.v1.MsgNftsImagesMetadata.nfts_ids":
		if x.NftsIds == nil {
			x.NftsIds = []string{}
		}
		value := &_MsgNftsImagesMetadata_2_list{list: &x.NftsIds}
		return protoreflect.ValueOfList(value)
	case "mantrachain.token.v1.MsgNftsImagesMetadata.images_indexes":
		if x.ImagesIndexes == nil {
			x.ImagesIndexes = []uint64{}
		}
		value := &_MsgNftsImagesMetadata_3_list{list: &x.ImagesIndexes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesMetadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNftsImagesMetadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesMetadata.images":
		list := []*TokenImage{}
		return protoreflect.ValueOfList(&_MsgNftsImagesMetadata_1_list{list: &list})
	case "mantrachain.token.v1.MsgNftsImagesMetadata.nfts_ids":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgNftsImagesMetadata_2_list{list: &list})
	case "mantrachain.token.v1.MsgNftsImagesMetadata.images_indexes":
		list := []uint64{}
		return protoreflect.ValueOfList(&_MsgNftsImagesMetadata_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesMetadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNftsImagesMetadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.token.v1.MsgNftsImagesMetadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNftsImagesMetadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsImagesMetadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNftsImagesMetadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNftsImagesMetadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNftsImagesMetadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Images) > 0 {
			for _, e := range x.Images {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.NftsIds) > 0 {
			for _, s := range x.NftsIds {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ImagesIndexes) > 0 {
			l = 0
			for _, e := range x.ImagesIndexes {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftsImagesMetadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ImagesIndexes) > 0 {
			var pksize2 int
			for _, num := range x.ImagesIndexes {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.ImagesIndexes {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.NftsIds) > 0 {
			for iNdEx := len(x.NftsIds) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.NftsIds[iNdEx])
				copy(dAtA[i:], x.NftsIds[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NftsIds[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Images) > 0 {
			for iNdEx := len(x.Images) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Images[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftsImagesMetadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftsImagesMetadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftsImagesMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Images", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Images = append(x.Images, &TokenImage{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Images[len(x.Images)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NftsIds", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NftsIds = append(x.NftsIds, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 3:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.ImagesIndexes = append(x.ImagesIndexes, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.ImagesIndexes) == 0 {
						x.ImagesIndexes = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.ImagesIndexes = append(x.ImagesIndexes, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ImagesIndexes", wireType)
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgNftsImagesIndexes_1_list)(nil)

type _MsgNftsImagesIndexes_1_list struct {
	list *[]uint64
}

func (x *_MsgNftsImagesIndexes_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNftsImagesIndexes_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_MsgNftsImagesIndexes_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgNftsImagesIndexes_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNftsImagesIndexes_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgNftsImagesIndexes at list field Indexes as it is not of Message kind"))
}

func (x *_MsgNftsImagesIndexes_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgNftsImagesIndexes_1_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_MsgNftsImagesIndexes_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgNftsImagesIndexes         protoreflect.MessageDescriptor
	fd_MsgNftsImagesIndexes_indexes protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_token_v1_common_proto_init()
	md_MsgNftsImagesIndexes = File_mantrachain_token_v1_common_proto.Messages().ByName("MsgNftsImagesIndexes")
	fd_MsgNftsImagesIndexes_indexes = md_MsgNftsImagesIndexes.Fields().ByName("indexes")
}

var _ protoreflect.Message = (*fastReflection_MsgNftsImagesIndexes)(nil)

type fastReflection_MsgNftsImagesIndexes MsgNftsImagesIndexes

func (x *MsgNftsImagesIndexes) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNftsImagesIndexes)(x)
}

func (x *MsgNftsImagesIndexes) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_token_v1_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNftsImagesIndexes_messageType fastReflection_MsgNftsImagesIndexes_messageType
var _ protoreflect.MessageType = fastReflection_MsgNftsImagesIndexes_messageType{}

type fastReflection_MsgNftsImagesIndexes_messageType struct{}

func (x fastReflection_MsgNftsImagesIndexes_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNftsImagesIndexes)(nil)
}
func (x fastReflection_MsgNftsImagesIndexes_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNftsImagesIndexes)
}
func (x fastReflection_MsgNftsImagesIndexes_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftsImagesIndexes
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNftsImagesIndexes) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftsImagesIndexes
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNftsImagesIndexes) Type() protoreflect.MessageType {
	return _fastReflection_MsgNftsImagesIndexes_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNftsImagesIndexes) New() protoreflect.Message {
	return new(fastReflection_MsgNftsImagesIndexes)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNftsImagesIndexes) Interface() protoreflect.ProtoMessage {
	return (*MsgNftsImagesIndexes)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNftsImagesIndexes) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Indexes) != 0 {
		value := protoreflect.ValueOfList(&_MsgNftsImagesIndexes_1_list{list: &x.Indexes})
		if !f(fd_MsgNftsImagesIndexes_indexes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNftsImagesIndexes) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesIndexes.indexes":
		return len(x.Indexes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesIndexes"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesIndexes does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsImagesIndexes) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesIndexes.indexes":
		x.Indexes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesIndexes"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesIndexes does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNftsImagesIndexes) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesIndexes.indexes":
		if len(x.Indexes) == 0 {
			return protoreflect.ValueOfList(&_MsgNftsImagesIndexes_1_list{})
		}
		listValue := &_MsgNftsImagesIndexes_1_list{list: &x.Indexes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesIndexes"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesIndexes does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsImagesIndexes) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesIndexes.indexes":
		lv := value.List()
		clv := lv.(*_MsgNftsImagesIndexes_1_list)
		x.Indexes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesIndexes"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesIndexes does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsImagesIndexes) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesIndexes.indexes":
		if x.Indexes == nil {
			x.Indexes = []uint64{}
		}
		value := &_MsgNftsImagesIndexes_1_list{list: &x.Indexes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesIndexes"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesIndexes does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNftsImagesIndexes) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesIndexes.indexes":
		list := []uint64{}
		return protoreflect.ValueOfList(&_MsgNftsImagesIndexes_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesIndexes"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesIndexes does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNftsImagesIndexes) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.token.v1.MsgNftsImagesIndexes", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNftsImagesIndexes) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsImagesIndexes) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNftsImagesIndexes) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNftsImagesIndexes) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNftsImagesIndexes)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Indexes) > 0 {
			l = 0
			for _, e := range x.Indexes {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftsImagesIndexes)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Indexes) > 0 {
			var pksize2 int
			for _, num := range x.Indexes {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.Indexes {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftsImagesIndexes)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftsImagesIndexes: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftsImagesIndexes: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.Indexes = append(x.Indexes, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.Indexes) == 0 {
						x.Indexes = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.Indexes = append(x.Indexes, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Indexes", wireType)
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgNftsImagesGroupedMetadata_1_list)(nil)

type _MsgNftsImagesGroupedMetadata_1_list struct {
	list *[]*TokenImage
}

func (x *_MsgNftsImagesGroupedMetadata_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNftsImagesGroupedMetadata_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNftsImagesGroupedMetadata_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenImage)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNftsImagesGroupedMetadata_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenImage)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNftsImagesGroupedMetadata_1_list) AppendMutable() protoreflect.Value {
	v := new(TokenImage)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftsImagesGroupedMetadata_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNftsImagesGroupedMetadata_1_list) NewElement() protoreflect.Value {
	v := new(TokenImage)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftsImagesGroupedMetadata_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNftsImagesGroupedMetadata_2_list)(nil)

type _MsgNftsImagesGroupedMetadata_2_list struct {
	list *[]*MsgNftsIds
}

func (x *_MsgNftsImagesGroupedMetadata_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNftsImagesGroupedMetadata_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNftsImagesGroupedMetadata_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MsgNftsIds)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNftsImagesGroupedMetadata_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MsgNftsIds)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNftsImagesGroupedMetadata_2_list) AppendMutable() protoreflect.Value {
	v := new(MsgNftsIds)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftsImagesGroupedMetadata_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNftsImagesGroupedMetadata_2_list) NewElement() protoreflect.Value {
	v := new(MsgNftsIds)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftsImagesGroupedMetadata_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNftsImagesGroupedMetadata_3_list)(nil)

type _MsgNftsImagesGroupedMetadata_3_list struct {
	list *[]*MsgNftsImagesIndexes
}

func (x *_MsgNftsImagesGroupedMetadata_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNftsImagesGroupedMetadata_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNftsImagesGroupedMetadata_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MsgNftsImagesIndexes)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNftsImagesGroupedMetadata_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MsgNftsImagesIndexes)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNftsImagesGroupedMetadata_3_list) AppendMutable() protoreflect.Value {
	v := new(MsgNftsImagesIndexes)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftsImagesGroupedMetadata_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNftsImagesGroupedMetadata_3_list) NewElement() protoreflect.Value {
	v := new(MsgNftsImagesIndexes)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftsImagesGroupedMetadata_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgNftsImagesGroupedMetadata                  protoreflect.MessageDescriptor
	fd_MsgNftsImagesGroupedMetadata_images           protoreflect.FieldDescriptor
	fd_MsgNftsImagesGroupedMetadata_nfts_ids_grouped protoreflect.FieldDescriptor
	fd_MsgNftsImagesGroupedMetadata_images_indexes   protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_token_v1_common_proto_init()
	md_MsgNftsImagesGroupedMetadata = File_mantrachain_token_v1_common_proto.Messages().ByName("MsgNftsImagesGroupedMetadata")
	fd_MsgNftsImagesGroupedMetadata_images = md_MsgNftsImagesGroupedMetadata.Fields().ByName("images")
	fd_MsgNftsImagesGroupedMetadata_nfts_ids_grouped = md_MsgNftsImagesGroupedMetadata.Fields().ByName("nfts_ids_grouped")
	fd_MsgNftsImagesGroupedMetadata_images_indexes = md_MsgNftsImagesGroupedMetadata.Fields().ByName("images_indexes")
}

var _ protoreflect.Message = (*fastReflection_MsgNftsImagesGroupedMetadata)(nil)

type fastReflection_MsgNftsImagesGroupedMetadata MsgNftsImagesGroupedMetadata

func (x *MsgNftsImagesGroupedMetadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNftsImagesGroupedMetadata)(x)
}

func (x *MsgNftsImagesGroupedMetadata) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_token_v1_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNftsImagesGroupedMetadata_messageType fastReflection_MsgNftsImagesGroupedMetadata_messageType
var _ protoreflect.MessageType = fastReflection_MsgNftsImagesGroupedMetadata_messageType{}

type fastReflection_MsgNftsImagesGroupedMetadata_messageType struct{}

func (x fastReflection_MsgNftsImagesGroupedMetadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNftsImagesGroupedMetadata)(nil)
}
func (x fastReflection_MsgNftsImagesGroupedMetadata_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNftsImagesGroupedMetadata)
}
func (x fastReflection_MsgNftsImagesGroupedMetadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftsImagesGroupedMetadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftsImagesGroupedMetadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) Type() protoreflect.MessageType {
	return _fastReflection_MsgNftsImagesGroupedMetadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) New() protoreflect.Message {
	return new(fastReflection_MsgNftsImagesGroupedMetadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) Interface() protoreflect.ProtoMessage {
	return (*MsgNftsImagesGroupedMetadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Images) != 0 {
		value := protoreflect.ValueOfList(&_MsgNftsImagesGroupedMetadata_1_list{list: &x.Images})
		if !f(fd_MsgNftsImagesGroupedMetadata_images, value) {
			return
		}
	}
	if len(x.NftsIdsGrouped) != 0 {
		value := protoreflect.ValueOfList(&_MsgNftsImagesGroupedMetadata_2_list{list: &x.NftsIdsGrouped})
		if !f(fd_MsgNftsImagesGroupedMetadata_nfts_ids_grouped, value) {
			return
		}
	}
	if len(x.ImagesIndexes) != 0 {
		value := protoreflect.ValueOfList(&_MsgNftsImagesGroupedMetadata_3_list{list: &x.ImagesIndexes})
		if !f(fd_MsgNftsImagesGroupedMetadata_images_indexes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images":
		return len(x.Images) != 0
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.nfts_ids_grouped":
		return len(x.NftsIdsGrouped) != 0
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images_indexes":
		return len(x.ImagesIndexes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesGroupedMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesGroupedMetadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images":
		x.Images = nil
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.nfts_ids_grouped":
		x.NftsIdsGrouped = nil
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images_indexes":
		x.ImagesIndexes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesGroupedMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesGroupedMetadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images":
		if len(x.Images) == 0 {
			return protoreflect.ValueOfList(&_MsgNftsImagesGroupedMetadata_1_list{})
		}
		listValue := &_MsgNftsImagesGroupedMetadata_1_list{list: &x.Images}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.nfts_ids_grouped":
		if len(x.NftsIdsGrouped) == 0 {
			return protoreflect.ValueOfList(&_MsgNftsImagesGroupedMetadata_2_list{})
		}
		listValue := &_MsgNftsImagesGroupedMetadata_2_list{list: &x.NftsIdsGrouped}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images_indexes":
		if len(x.ImagesIndexes) == 0 {
			return protoreflect.ValueOfList(&_MsgNftsImagesGroupedMetadata_3_list{})
		}
		listValue := &_MsgNftsImagesGroupedMetadata_3_list{list: &x.ImagesIndexes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesGroupedMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesGroupedMetadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images":
		lv := value.List()
		clv := lv.(*_MsgNftsImagesGroupedMetadata_1_list)
		x.Images = *clv.list
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.nfts_ids_grouped":
		lv := value.List()
		clv := lv.(*_MsgNftsImagesGroupedMetadata_2_list)
		x.NftsIdsGrouped = *clv.list
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images_indexes":
		lv := value.List()
		clv := lv.(*_MsgNftsImagesGroupedMetadata_3_list)
		x.ImagesIndexes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesGroupedMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesGroupedMetadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images":
		if x.Images == nil {
			x.Images = []*TokenImage{}
		}
		value := &_MsgNftsImagesGroupedMetadata_1_list{list: &x.Images}
		return protoreflect.ValueOfList(value)
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.nfts_ids_grouped":
		if x.NftsIdsGrouped == nil {
			x.NftsIdsGrouped = []*MsgNftsIds{}
		}
		value := &_MsgNftsImagesGroupedMetadata_2_list{list: &x.NftsIdsGrouped}
		return protoreflect.ValueOfList(value)
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images_indexes":
		if x.ImagesIndexes == nil {
			x.ImagesIndexes = []*MsgNftsImagesIndexes{}
		}
		value := &_MsgNftsImagesGroupedMetadata_3_list{list: &x.ImagesIndexes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesGroupedMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesGroupedMetadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images":
		list := []*TokenImage{}
		return protoreflect.ValueOfList(&_MsgNftsImagesGroupedMetadata_1_list{list: &list})
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.nfts_ids_grouped":
		list := []*MsgNftsIds{}
		return protoreflect.ValueOfList(&_MsgNftsImagesGroupedMetadata_2_list{list: &list})
	case "mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images_indexes":
		list := []*MsgNftsImagesIndexes{}
		return protoreflect.ValueOfList(&_MsgNftsImagesGroupedMetadata_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsImagesGroupedMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsImagesGroupedMetadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.token.v1.MsgNftsImagesGroupedMetadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNftsImagesGroupedMetadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNftsImagesGroupedMetadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Images) > 0 {
			for _, e := range x.Images {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.NftsIdsGrouped) > 0 {
			for _, e := range x.NftsIdsGrouped {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ImagesIndexes) > 0 {
			for _, e := range x.ImagesIndexes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftsImagesGroupedMetadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ImagesIndexes) > 0 {
			for iNdEx := len(x.ImagesIndexes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ImagesIndexes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.NftsIdsGrouped) > 0 {
			for iNdEx := len(x.NftsIdsGrouped) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.NftsIdsGrouped[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Images) > 0 {
			for iNdEx := len(x.Images) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Images[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftsImagesGroupedMetadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftsImagesGroupedMetadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftsImagesGroupedMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Images", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Images = append(x.Images, &TokenImage{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Images[len(x.Images)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NftsIdsGrouped", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NftsIdsGrouped = append(x.NftsIdsGrouped, &MsgNftsIds{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NftsIdsGrouped[len(x.NftsIdsGrouped)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ImagesIndexes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ImagesIndexes = append(x.ImagesIndexes, &MsgNftsImagesIndexes{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ImagesIndexes[len(x.ImagesIndexes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgNftsIds_1_list)(nil)

type _MsgNftsIds_1_list struct {
	list *[]string
}

func (x *_MsgNftsIds_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNftsIds_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgNftsIds_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgNftsIds_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNftsIds_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgNftsIds at list field NftsIds as it is not of Message kind"))
}

func (x *_MsgNftsIds_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgNftsIds_1_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgNftsIds_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgNftsIds          protoreflect.MessageDescriptor
	fd_MsgNftsIds_nfts_ids protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_token_v1_common_proto_init()
	md_MsgNftsIds = File_mantrachain_token_v1_common_proto.Messages().ByName("MsgNftsIds")
	fd_MsgNftsIds_nfts_ids = md_MsgNftsIds.Fields().ByName("nfts_ids")
}

var _ protoreflect.Message = (*fastReflection_MsgNftsIds)(nil)

type fastReflection_MsgNftsIds MsgNftsIds

func (x *MsgNftsIds) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNftsIds)(x)
}

func (x *MsgNftsIds) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_token_v1_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNftsIds_messageType fastReflection_MsgNftsIds_messageType
var _ protoreflect.MessageType = fastReflection_MsgNftsIds_messageType{}

type fastReflection_MsgNftsIds_messageType struct{}

func (x fastReflection_MsgNftsIds_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNftsIds)(nil)
}
func (x fastReflection_MsgNftsIds_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNftsIds)
}
func (x fastReflection_MsgNftsIds_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftsIds
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNftsIds) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftsIds
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNftsIds) Type() protoreflect.MessageType {
	return _fastReflection_MsgNftsIds_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNftsIds) New() protoreflect.Message {
	return new(fastReflection_MsgNftsIds)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNftsIds) Interface() protoreflect.ProtoMessage {
	return (*MsgNftsIds)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNftsIds) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.NftsIds) != 0 {
		value := protoreflect.ValueOfList(&_MsgNftsIds_1_list{list: &x.NftsIds})
		if !f(fd_MsgNftsIds_nfts_ids, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNftsIds) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsIds.nfts_ids":
		return len(x.NftsIds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsIds"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsIds does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsIds) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsIds.nfts_ids":
		x.NftsIds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsIds"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsIds does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNftsIds) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.token.v1.MsgNftsIds.nfts_ids":
		if len(x.NftsIds) == 0 {
			return protoreflect.ValueOfList(&_MsgNftsIds_1_list{})
		}
		listValue := &_MsgNftsIds_1_list{list: &x.NftsIds}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsIds"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsIds does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsIds) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsIds.nfts_ids":
		lv := value.List()
		clv := lv.(*_MsgNftsIds_1_list)
		x.NftsIds = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsIds"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsIds does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsIds) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsIds.nfts_ids":
		if x.NftsIds == nil {
			x.NftsIds = []string{}
		}
		value := &_MsgNftsIds_1_list{list: &x.NftsIds}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsIds"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsIds does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNftsIds) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsIds.nfts_ids":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgNftsIds_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsIds"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsIds does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNftsIds) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.token.v1.MsgNftsIds", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNftsIds) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsIds) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNftsIds) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNftsIds) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNftsIds)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.NftsIds) > 0 {
			for _, s := range x.NftsIds {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftsIds)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.NftsIds) > 0 {
			for iNdEx := len(x.NftsIds) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.NftsIds[iNdEx])
				copy(dAtA[i:], x.NftsIds[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NftsIds[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftsIds)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftsIds: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftsIds: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NftsIds", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NftsIds = append(x.NftsIds, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgNftsMetadata_1_list)(nil)

type _MsgNftsMetadata_1_list struct {
	list *[]*MsgNftMetadata
}

func (x *_MsgNftsMetadata_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNftsMetadata_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNftsMetadata_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MsgNftMetadata)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNftsMetadata_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MsgNftMetadata)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNftsMetadata_1_list) AppendMutable() protoreflect.Value {
	v := new(MsgNftMetadata)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftsMetadata_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNftsMetadata_1_list) NewElement() protoreflect.Value {
	v := new(MsgNftMetadata)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftsMetadata_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgNftsMetadata      protoreflect.MessageDescriptor
	fd_MsgNftsMetadata_nfts protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_token_v1_common_proto_init()
	md_MsgNftsMetadata = File_mantrachain_token_v1_common_proto.Messages().ByName("MsgNftsMetadata")
	fd_MsgNftsMetadata_nfts = md_MsgNftsMetadata.Fields().ByName("nfts")
}

var _ protoreflect.Message = (*fastReflection_MsgNftsMetadata)(nil)

type fastReflection_MsgNftsMetadata MsgNftsMetadata

func (x *MsgNftsMetadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNftsMetadata)(x)
}

func (x *MsgNftsMetadata) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_token_v1_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNftsMetadata_messageType fastReflection_MsgNftsMetadata_messageType
var _ protoreflect.MessageType = fastReflection_MsgNftsMetadata_messageType{}

type fastReflection_MsgNftsMetadata_messageType struct{}

func (x fastReflection_MsgNftsMetadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNftsMetadata)(nil)
}
func (x fastReflection_MsgNftsMetadata_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNftsMetadata)
}
func (x fastReflection_MsgNftsMetadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftsMetadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNftsMetadata) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftsMetadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNftsMetadata) Type() protoreflect.MessageType {
	return _fastReflection_MsgNftsMetadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNftsMetadata) New() protoreflect.Message {
	return new(fastReflection_MsgNftsMetadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNftsMetadata) Interface() protoreflect.ProtoMessage {
	return (*MsgNftsMetadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNftsMetadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Nfts) != 0 {
		value := protoreflect.ValueOfList(&_MsgNftsMetadata_1_list{list: &x.Nfts})
		if !f(fd_MsgNftsMetadata_nfts, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNftsMetadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsMetadata.nfts":
		return len(x.Nfts) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsMetadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsMetadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsMetadata.nfts":
		x.Nfts = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsMetadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNftsMetadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.token.v1.MsgNftsMetadata.nfts":
		if len(x.Nfts) == 0 {
			return protoreflect.ValueOfList(&_MsgNftsMetadata_1_list{})
		}
		listValue := &_MsgNftsMetadata_1_list{list: &x.Nfts}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsMetadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsMetadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsMetadata.nfts":
		lv := value.List()
		clv := lv.(*_MsgNftsMetadata_1_list)
		x.Nfts = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsMetadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsMetadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsMetadata.nfts":
		if x.Nfts == nil {
			x.Nfts = []*MsgNftMetadata{}
		}
		value := &_MsgNftsMetadata_1_list{list: &x.Nfts}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsMetadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNftsMetadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftsMetadata.nfts":
		list := []*MsgNftMetadata{}
		return protoreflect.ValueOfList(&_MsgNftsMetadata_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftsMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftsMetadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNftsMetadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.token.v1.MsgNftsMetadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNftsMetadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftsMetadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNftsMetadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNftsMetadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNftsMetadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Nfts) > 0 {
			for _, e := range x.Nfts {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftsMetadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Nfts) > 0 {
			for iNdEx := len(x.Nfts) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Nfts[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftsMetadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftsMetadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftsMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nfts", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Nfts = append(x.Nfts, &MsgNftMetadata{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Nfts[len(x.Nfts)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgCreateNftCollectionMetadata_3_list)(nil)

type _MsgCreateNftCollectionMetadata_3_list struct {
	list *[]*TokenImage
}

func (x *_MsgCreateNftCollectionMetadata_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateNftCollectionMetadata_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateNftCollectionMetadata_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenImage)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateNftCollectionMetadata_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenImage)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateNftCollectionMetadata_3_list) AppendMutable() protoreflect.Value {
	v := new(TokenImage)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateNftCollectionMetadata_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateNftCollectionMetadata_3_list) NewElement() protoreflect.Value {
	v := new(TokenImage)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateNftCollectionMetadata_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateNftCollectionMetadata_6_list)(nil)

type _MsgCreateNftCollectionMetadata_6_list struct {
	list *[]*TokenLink
}

func (x *_MsgCreateNftCollectionMetadata_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateNftCollectionMetadata_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateNftCollectionMetadata_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenLink)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateNftCollectionMetadata_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenLink)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateNftCollectionMetadata_6_list) AppendMutable() protoreflect.Value {
	v := new(TokenLink)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateNftCollectionMetadata_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateNftCollectionMetadata_6_list) NewElement() protoreflect.Value {
	v := new(TokenLink)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateNftCollectionMetadata_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateNftCollectionMetadata_7_list)(nil)

type _MsgCreateNftCollectionMetadata_7_list struct {
	list *[]*TokenOption
}

func (x *_MsgCreateNftCollectionMetadata_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateNftCollectionMetadata_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateNftCollectionMetadata_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenOption)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateNftCollectionMetadata_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenOption)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateNftCollectionMetadata_7_list) AppendMutable() protoreflect.Value {
	v := new(TokenOption)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateNftCollectionMetadata_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateNftCollectionMetadata_7_list) NewElement() protoreflect.Value {
	v := new(TokenOption)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateNftCollectionMetadata_7_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgCreateNftCollectionMetadata                  protoreflect.MessageDescriptor
	fd_MsgCreateNftCollectionMetadata_id               protoreflect.FieldDescriptor
	fd_MsgCreateNftCollectionMetadata_name             protoreflect.FieldDescriptor
	fd_MsgCreateNftCollectionMetadata_images           protoreflect.FieldDescriptor
	fd_MsgCreateNftCollectionMetadata_url              protoreflect.FieldDescriptor
	fd_MsgCreateNftCollectionMetadata_description      protoreflect.FieldDescriptor
	fd_MsgCreateNftCollectionMetadata_links            protoreflect.FieldDescriptor
	fd_MsgCreateNftCollectionMetadata_options          protoreflect.FieldDescriptor
	fd_MsgCreateNftCollectionMetadata_category         protoreflect.FieldDescriptor
	fd_MsgCreateNftCollectionMetadata_symbol           protoreflect.FieldDescriptor
	fd_MsgCreateNftCollectionMetadata_opened           protoreflect.FieldDescriptor
	fd_MsgCreateNftCollectionMetadata_soul_bonded_nfts protoreflect.FieldDescriptor
	fd_MsgCreateNftCollectionMetadata_restricted_nfts  protoreflect.FieldDescriptor
	fd_MsgCreateNftCollectionMetadata_data             protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_token_v1_common_proto_init()
	md_MsgCreateNftCollectionMetadata = File_mantrachain_token_v1_common_proto.Messages().ByName("MsgCreateNftCollectionMetadata")
	fd_MsgCreateNftCollectionMetadata_id = md_MsgCreateNftCollectionMetadata.Fields().ByName("id")
	fd_MsgCreateNftCollectionMetadata_name = md_MsgCreateNftCollectionMetadata.Fields().ByName("name")
	fd_MsgCreateNftCollectionMetadata_images = md_MsgCreateNftCollectionMetadata.Fields().ByName("images")
	fd_MsgCreateNftCollectionMetadata_url = md_MsgCreateNftCollectionMetadata.Fields().ByName("url")
	fd_MsgCreateNftCollectionMetadata_description = md_MsgCreateNftCollectionMetadata.Fields().ByName("description")
	fd_MsgCreateNftCollectionMetadata_links = md_MsgCreateNftCollectionMetadata.Fields().ByName("links")
	fd_MsgCreateNftCollectionMetadata_options = md_MsgCreateNftCollectionMetadata.Fields().ByName("options")
	fd_MsgCreateNftCollectionMetadata_category = md_MsgCreateNftCollectionMetadata.Fields().ByName("category")
	fd_MsgCreateNftCollectionMetadata_symbol = md_MsgCreateNftCollectionMetadata.Fields().ByName("symbol")
	fd_MsgCreateNftCollectionMetadata_opened = md_MsgCreateNftCollectionMetadata.Fields().ByName("opened")
	fd_MsgCreateNftCollectionMetadata_soul_bonded_nfts = md_MsgCreateNftCollectionMetadata.Fields().ByName("soul_bonded_nfts")
	fd_MsgCreateNftCollectionMetadata_restricted_nfts = md_MsgCreateNftCollectionMetadata.Fields().ByName("restricted_nfts")
	fd_MsgCreateNftCollectionMetadata_data = md_MsgCreateNftCollectionMetadata.Fields().ByName("data")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateNftCollectionMetadata)(nil)

type fastReflection_MsgCreateNftCollectionMetadata MsgCreateNftCollectionMetadata

func (x *MsgCreateNftCollectionMetadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateNftCollectionMetadata)(x)
}

func (x *MsgCreateNftCollectionMetadata) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_token_v1_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateNftCollectionMetadata_messageType fastReflection_MsgCreateNftCollectionMetadata_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateNftCollectionMetadata_messageType{}

type fastReflection_MsgCreateNftCollectionMetadata_messageType struct{}

func (x fastReflection_MsgCreateNftCollectionMetadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateNftCollectionMetadata)(nil)
}
func (x fastReflection_MsgCreateNftCollectionMetadata_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateNftCollectionMetadata)
}
func (x fastReflection_MsgCreateNftCollectionMetadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateNftCollectionMetadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateNftCollectionMetadata) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateNftCollectionMetadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateNftCollectionMetadata) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateNftCollectionMetadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateNftCollectionMetadata) New() protoreflect.Message {
	return new(fastReflection_MsgCreateNftCollectionMetadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateNftCollectionMetadata) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateNftCollectionMetadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateNftCollectionMetadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_MsgCreateNftCollectionMetadata_id, value) {
			return
		}
	}
	if x.Name != "" {
		value := protoreflect.ValueOfString(x.Name)
		if !f(fd_MsgCreateNftCollectionMetadata_name, value) {
			return
		}
	}
	if len(x.Images) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateNftCollectionMetadata_3_list{list: &x.Images})
		if !f(fd_MsgCreateNftCollectionMetadata_images, value) {
			return
		}
	}
	if x.Url != "" {
		value := protoreflect.ValueOfString(x.Url)
		if !f(fd_MsgCreateNftCollectionMetadata_url, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MsgCreateNftCollectionMetadata_description, value) {
			return
		}
	}
	if len(x.Links) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateNftCollectionMetadata_6_list{list: &x.Links})
		if !f(fd_MsgCreateNftCollectionMetadata_links, value) {
			return
		}
	}
	if len(x.Options) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateNftCollectionMetadata_7_list{list: &x.Options})
		if !f(fd_MsgCreateNftCollectionMetadata_options, value) {
			return
		}
	}
	if x.Category != "" {
		value := protoreflect.ValueOfString(x.Category)
		if !f(fd_MsgCreateNftCollectionMetadata_category, value) {
			return
		}
	}
	if x.Symbol != "" {
		value := protoreflect.ValueOfString(x.Symbol)
		if !f(fd_MsgCreateNftCollectionMetadata_symbol, value) {
			return
		}
	}
	if x.Opened != false {
		value := protoreflect.ValueOfBool(x.Opened)
		if !f(fd_MsgCreateNftCollectionMetadata_opened, value) {
			return
		}
	}
	if x.SoulBondedNfts != false {
		value := protoreflect.ValueOfBool(x.SoulBondedNfts)
		if !f(fd_MsgCreateNftCollectionMetadata_soul_bonded_nfts, value) {
			return
		}
	}
	if x.RestrictedNfts != false {
		value := protoreflect.ValueOfBool(x.RestrictedNfts)
		if !f(fd_MsgCreateNftCollectionMetadata_restricted_nfts, value) {
			return
		}
	}
	if x.Data != nil {
		value := protoreflect.ValueOfMessage(x.Data.ProtoReflect())
		if !f(fd_MsgCreateNftCollectionMetadata_data, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateNftCollectionMetadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.id":
		return x.Id != ""
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.name":
		return x.Name != ""
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.images":
		return len(x.Images) != 0
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.url":
		return x.Url != ""
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.description":
		return x.Description != ""
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.links":
		return len(x.Links) != 0
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.options":
		return len(x.Options) != 0
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.category":
		return x.Category != ""
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.symbol":
		return x.Symbol != ""
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.opened":
		return x.Opened != false
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.soul_bonded_nfts":
		return x.SoulBondedNfts != false
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.restricted_nfts":
		return x.RestrictedNfts != false
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.data":
		return x.Data != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgCreateNftCollectionMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgCreateNftCollectionMetadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateNftCollectionMetadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.id":
		x.Id = ""
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.name":
		x.Name = ""
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.images":
		x.Images = nil
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.url":
		x.Url = ""
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.description":
		x.Description = ""
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.links":
		x.Links = nil
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.options":
		x.Options = nil
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.category":
		x.Category = ""
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.symbol":
		x.Symbol = ""
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.opened":
		x.Opened = false
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.soul_bonded_nfts":
		x.SoulBondedNfts = false
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.restricted_nfts":
		x.RestrictedNfts = false
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.data":
		x.Data = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgCreateNftCollectionMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgCreateNftCollectionMetadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateNftCollectionMetadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.name":
		value := x.Name
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.images":
		if len(x.Images) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateNftCollectionMetadata_3_list{})
		}
		listValue := &_MsgCreateNftCollectionMetadata_3_list{list: &x.Images}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.url":
		value := x.Url
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.links":
		if len(x.Links) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateNftCollectionMetadata_6_list{})
		}
		listValue := &_MsgCreateNftCollectionMetadata_6_list{list: &x.Links}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.options":
		if len(x.Options) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateNftCollectionMetadata_7_list{})
		}
		listValue := &_MsgCreateNftCollectionMetadata_7_list{list: &x.Options}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.category":
		value := x.Category
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.symbol":
		value := x.Symbol
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.opened":
		value := x.Opened
		return protoreflect.ValueOfBool(value)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.soul_bonded_nfts":
		value := x.SoulBondedNfts
		return protoreflect.ValueOfBool(value)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.restricted_nfts":
		value := x.RestrictedNfts
		return protoreflect.ValueOfBool(value)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.data":
		value := x.Data
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgCreateNftCollectionMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgCreateNftCollectionMetadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateNftCollectionMetadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.id":
		x.Id = value.Interface().(string)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.name":
		x.Name = value.Interface().(string)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.images":
		lv := value.List()
		clv := lv.(*_MsgCreateNftCollectionMetadata_3_list)
		x.Images = *clv.list
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.url":
		x.Url = value.Interface().(string)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.description":
		x.Description = value.Interface().(string)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.links":
		lv := value.List()
		clv := lv.(*_MsgCreateNftCollectionMetadata_6_list)
		x.Links = *clv.list
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.options":
		lv := value.List()
		clv := lv.(*_MsgCreateNftCollectionMetadata_7_list)
		x.Options = *clv.list
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.category":
		x.Category = value.Interface().(string)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.symbol":
		x.Symbol = value.Interface().(string)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.opened":
		x.Opened = value.Bool()
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.soul_bonded_nfts":
		x.SoulBondedNfts = value.Bool()
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.restricted_nfts":
		x.RestrictedNfts = value.Bool()
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.data":
		x.Data = value.Message().Interface().(*anypb.Any)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgCreateNftCollectionMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgCreateNftCollectionMetadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateNftCollectionMetadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.images":
		if x.Images == nil {
			x.Images = []*TokenImage{}
		}
		value := &_MsgCreateNftCollectionMetadata_3_list{list: &x.Images}
		return protoreflect.ValueOfList(value)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.links":
		if x.Links == nil {
			x.Links = []*TokenLink{}
		}
		value := &_MsgCreateNftCollectionMetadata_6_list{list: &x.Links}
		return protoreflect.ValueOfList(value)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.options":
		if x.Options == nil {
			x.Options = []*TokenOption{}
		}
		value := &_MsgCreateNftCollectionMetadata_7_list{list: &x.Options}
		return protoreflect.ValueOfList(value)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.data":
		if x.Data == nil {
			x.Data = new(anypb.Any)
		}
		return protoreflect.ValueOfMessage(x.Data.ProtoReflect())
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.id":
		panic(fmt.Errorf("field id of message mantrachain.token.v1.MsgCreateNftCollectionMetadata is not mutable"))
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.name":
		panic(fmt.Errorf("field name of message mantrachain.token.v1.MsgCreateNftCollectionMetadata is not mutable"))
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.url":
		panic(fmt.Errorf("field url of message mantrachain.token.v1.MsgCreateNftCollectionMetadata is not mutable"))
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.description":
		panic(fmt.Errorf("field description of message mantrachain.token.v1.MsgCreateNftCollectionMetadata is not mutable"))
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.category":
		panic(fmt.Errorf("field category of message mantrachain.token.v1.MsgCreateNftCollectionMetadata is not mutable"))
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.symbol":
		panic(fmt.Errorf("field symbol of message mantrachain.token.v1.MsgCreateNftCollectionMetadata is not mutable"))
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.opened":
		panic(fmt.Errorf("field opened of message mantrachain.token.v1.MsgCreateNftCollectionMetadata is not mutable"))
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.soul_bonded_nfts":
		panic(fmt.Errorf("field soul_bonded_nfts of message mantrachain.token.v1.MsgCreateNftCollectionMetadata is not mutable"))
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.restricted_nfts":
		panic(fmt.Errorf("field restricted_nfts of message mantrachain.token.v1.MsgCreateNftCollectionMetadata is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgCreateNftCollectionMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgCreateNftCollectionMetadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateNftCollectionMetadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.id":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.name":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.images":
		list := []*TokenImage{}
		return protoreflect.ValueOfList(&_MsgCreateNftCollectionMetadata_3_list{list: &list})
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.url":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.description":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.links":
		list := []*TokenLink{}
		return protoreflect.ValueOfList(&_MsgCreateNftCollectionMetadata_6_list{list: &list})
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.options":
		list := []*TokenOption{}
		return protoreflect.ValueOfList(&_MsgCreateNftCollectionMetadata_7_list{list: &list})
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.category":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.symbol":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.opened":
		return protoreflect.ValueOfBool(false)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.soul_bonded_nfts":
		return protoreflect.ValueOfBool(false)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.restricted_nfts":
		return protoreflect.ValueOfBool(false)
	case "mantrachain.token.v1.MsgCreateNftCollectionMetadata.data":
		m := new(anypb.Any)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgCreateNftCollectionMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgCreateNftCollectionMetadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateNftCollectionMetadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.token.v1.MsgCreateNftCollectionMetadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateNftCollectionMetadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateNftCollectionMetadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateNftCollectionMetadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateNftCollectionMetadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateNftCollectionMetadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Name)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Images) > 0 {
			for _, e := range x.Images {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Url)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Links) > 0 {
			for _, e := range x.Links {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Options) > 0 {
			for _, e := range x.Options {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Category)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Symbol)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Opened {
			n += 2
		}
		if x.SoulBondedNfts {
			n += 2
		}
		if x.RestrictedNfts {
			n += 2
		}
		if x.Data != nil {
			l = options.Size(x.Data)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateNftCollectionMetadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Data != nil {
			encoded, err := options.Marshal(x.Data)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x6a
		}
		if x.RestrictedNfts {
			i--
			if x.RestrictedNfts {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x60
		}
		if x.SoulBondedNfts {
			i--
			if x.SoulBondedNfts {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x58
		}
		if x.Opened {
			i--
			if x.Opened {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x50
		}
		if len(x.Symbol) > 0 {
			i -= len(x.Symbol)
			copy(dAtA[i:], x.Symbol)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Symbol)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.Category) > 0 {
			i -= len(x.Category)
			copy(dAtA[i:], x.Category)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Category)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.Options) > 0 {
			for iNdEx := len(x.Options) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Options[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.Links) > 0 {
			for iNdEx := len(x.Links) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Links[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Url) > 0 {
			i -= len(x.Url)
			copy(dAtA[i:], x.Url)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Url)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Images) > 0 {
			for iNdEx := len(x.Images) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Images[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Name) > 0 {
			i -= len(x.Name)
			copy(dAtA[i:], x.Name)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Name)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateNftCollectionMetadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateNftCollectionMetadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateNftCollectionMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Name = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Images", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Images = append(x.Images, &TokenImage{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Images[len(x.Images)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Url = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Links", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Links = append(x.Links, &TokenLink{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Links[len(x.Links)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Options", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Options = append(x.Options, &TokenOption{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Options[len(x.Options)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Category", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Category = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Symbol", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Symbol = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Opened", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Opened = bool(v != 0)
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SoulBondedNfts", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.SoulBondedNfts = bool(v != 0)
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RestrictedNfts", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.RestrictedNfts = bool(v != 0)
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Data == nil {
					x.Data = &anypb.Any{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Data); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgNftMetadata_3_list)(nil)

type _MsgNftMetadata_3_list struct {
	list *[]*TokenImage
}

func (x *_MsgNftMetadata_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNftMetadata_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNftMetadata_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenImage)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNftMetadata_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenImage)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNftMetadata_3_list) AppendMutable() protoreflect.Value {
	v := new(TokenImage)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftMetadata_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNftMetadata_3_list) NewElement() protoreflect.Value {
	v := new(TokenImage)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftMetadata_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNftMetadata_6_list)(nil)

type _MsgNftMetadata_6_list struct {
	list *[]*TokenLink
}

func (x *_MsgNftMetadata_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNftMetadata_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNftMetadata_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenLink)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNftMetadata_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenLink)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNftMetadata_6_list) AppendMutable() protoreflect.Value {
	v := new(TokenLink)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftMetadata_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNftMetadata_6_list) NewElement() protoreflect.Value {
	v := new(TokenLink)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftMetadata_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNftMetadata_7_list)(nil)

type _MsgNftMetadata_7_list struct {
	list *[]*TokenAttribute
}

func (x *_MsgNftMetadata_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNftMetadata_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNftMetadata_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenAttribute)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNftMetadata_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenAttribute)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNftMetadata_7_list) AppendMutable() protoreflect.Value {
	v := new(TokenAttribute)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftMetadata_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNftMetadata_7_list) NewElement() protoreflect.Value {
	v := new(TokenAttribute)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNftMetadata_7_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgNftMetadata             protoreflect.MessageDescriptor
	fd_MsgNftMetadata_id          protoreflect.FieldDescriptor
	fd_MsgNftMetadata_title       protoreflect.FieldDescriptor
	fd_MsgNftMetadata_images      protoreflect.FieldDescriptor
	fd_MsgNftMetadata_url         protoreflect.FieldDescriptor
	fd_MsgNftMetadata_description protoreflect.FieldDescriptor
	fd_MsgNftMetadata_links       protoreflect.FieldDescriptor
	fd_MsgNftMetadata_attributes  protoreflect.FieldDescriptor
	fd_MsgNftMetadata_data        protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_token_v1_common_proto_init()
	md_MsgNftMetadata = File_mantrachain_token_v1_common_proto.Messages().ByName("MsgNftMetadata")
	fd_MsgNftMetadata_id = md_MsgNftMetadata.Fields().ByName("id")
	fd_MsgNftMetadata_title = md_MsgNftMetadata.Fields().ByName("title")
	fd_MsgNftMetadata_images = md_MsgNftMetadata.Fields().ByName("images")
	fd_MsgNftMetadata_url = md_MsgNftMetadata.Fields().ByName("url")
	fd_MsgNftMetadata_description = md_MsgNftMetadata.Fields().ByName("description")
	fd_MsgNftMetadata_links = md_MsgNftMetadata.Fields().ByName("links")
	fd_MsgNftMetadata_attributes = md_MsgNftMetadata.Fields().ByName("attributes")
	fd_MsgNftMetadata_data = md_MsgNftMetadata.Fields().ByName("data")
}

var _ protoreflect.Message = (*fastReflection_MsgNftMetadata)(nil)

type fastReflection_MsgNftMetadata MsgNftMetadata

func (x *MsgNftMetadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNftMetadata)(x)
}

func (x *MsgNftMetadata) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_token_v1_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNftMetadata_messageType fastReflection_MsgNftMetadata_messageType
var _ protoreflect.MessageType = fastReflection_MsgNftMetadata_messageType{}

type fastReflection_MsgNftMetadata_messageType struct{}

func (x fastReflection_MsgNftMetadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNftMetadata)(nil)
}
func (x fastReflection_MsgNftMetadata_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNftMetadata)
}
func (x fastReflection_MsgNftMetadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftMetadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNftMetadata) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNftMetadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNftMetadata) Type() protoreflect.MessageType {
	return _fastReflection_MsgNftMetadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNftMetadata) New() protoreflect.Message {
	return new(fastReflection_MsgNftMetadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNftMetadata) Interface() protoreflect.ProtoMessage {
	return (*MsgNftMetadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNftMetadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_MsgNftMetadata_id, value) {
			return
		}
	}
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_MsgNftMetadata_title, value) {
			return
		}
	}
	if len(x.Images) != 0 {
		value := protoreflect.ValueOfList(&_MsgNftMetadata_3_list{list: &x.Images})
		if !f(fd_MsgNftMetadata_images, value) {
			return
		}
	}
	if x.Url != "" {
		value := protoreflect.ValueOfString(x.Url)
		if !f(fd_MsgNftMetadata_url, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MsgNftMetadata_description, value) {
			return
		}
	}
	if len(x.Links) != 0 {
		value := protoreflect.ValueOfList(&_MsgNftMetadata_6_list{list: &x.Links})
		if !f(fd_MsgNftMetadata_links, value) {
			return
		}
	}
	if len(x.Attributes) != 0 {
		value := protoreflect.ValueOfList(&_MsgNftMetadata_7_list{list: &x.Attributes})
		if !f(fd_MsgNftMetadata_attributes, value) {
			return
		}
	}
	if x.Data != nil {
		value := protoreflect.ValueOfMessage(x.Data.ProtoReflect())
		if !f(fd_MsgNftMetadata_data, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNftMetadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftMetadata.id":
		return x.Id != ""
	case "mantrachain.token.v1.MsgNftMetadata.title":
		return x.Title != ""
	case "mantrachain.token.v1.MsgNftMetadata.images":
		return len(x.Images) != 0
	case "mantrachain.token.v1.MsgNftMetadata.url":
		return x.Url != ""
	case "mantrachain.token.v1.MsgNftMetadata.description":
		return x.Description != ""
	case "mantrachain.token.v1.MsgNftMetadata.links":
		return len(x.Links) != 0
	case "mantrachain.token.v1.MsgNftMetadata.attributes":
		return len(x.Attributes) != 0
	case "mantrachain.token.v1.MsgNftMetadata.data":
		return x.Data != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftMetadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftMetadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftMetadata.id":
		x.Id = ""
	case "mantrachain.token.v1.MsgNftMetadata.title":
		x.Title = ""
	case "mantrachain.token.v1.MsgNftMetadata.images":
		x.Images = nil
	case "mantrachain.token.v1.MsgNftMetadata.url":
		x.Url = ""
	case "mantrachain.token.v1.MsgNftMetadata.description":
		x.Description = ""
	case "mantrachain.token.v1.MsgNftMetadata.links":
		x.Links = nil
	case "mantrachain.token.v1.MsgNftMetadata.attributes":
		x.Attributes = nil
	case "mantrachain.token.v1.MsgNftMetadata.data":
		x.Data = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftMetadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNftMetadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.token.v1.MsgNftMetadata.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.MsgNftMetadata.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.MsgNftMetadata.images":
		if len(x.Images) == 0 {
			return protoreflect.ValueOfList(&_MsgNftMetadata_3_list{})
		}
		listValue := &_MsgNftMetadata_3_list{list: &x.Images}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.token.v1.MsgNftMetadata.url":
		value := x.Url
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.MsgNftMetadata.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "mantrachain.token.v1.MsgNftMetadata.links":
		if len(x.Links) == 0 {
			return protoreflect.ValueOfList(&_MsgNftMetadata_6_list{})
		}
		listValue := &_MsgNftMetadata_6_list{list: &x.Links}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.token.v1.MsgNftMetadata.attributes":
		if len(x.Attributes) == 0 {
			return protoreflect.ValueOfList(&_MsgNftMetadata_7_list{})
		}
		listValue := &_MsgNftMetadata_7_list{list: &x.Attributes}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.token.v1.MsgNftMetadata.data":
		value := x.Data
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftMetadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftMetadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftMetadata.id":
		x.Id = value.Interface().(string)
	case "mantrachain.token.v1.MsgNftMetadata.title":
		x.Title = value.Interface().(string)
	case "mantrachain.token.v1.MsgNftMetadata.images":
		lv := value.List()
		clv := lv.(*_MsgNftMetadata_3_list)
		x.Images = *clv.list
	case "mantrachain.token.v1.MsgNftMetadata.url":
		x.Url = value.Interface().(string)
	case "mantrachain.token.v1.MsgNftMetadata.description":
		x.Description = value.Interface().(string)
	case "mantrachain.token.v1.MsgNftMetadata.links":
		lv := value.List()
		clv := lv.(*_MsgNftMetadata_6_list)
		x.Links = *clv.list
	case "mantrachain.token.v1.MsgNftMetadata.attributes":
		lv := value.List()
		clv := lv.(*_MsgNftMetadata_7_list)
		x.Attributes = *clv.list
	case "mantrachain.token.v1.MsgNftMetadata.data":
		x.Data = value.Message().Interface().(*anypb.Any)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftMetadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftMetadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftMetadata.images":
		if x.Images == nil {
			x.Images = []*TokenImage{}
		}
		value := &_MsgNftMetadata_3_list{list: &x.Images}
		return protoreflect.ValueOfList(value)
	case "mantrachain.token.v1.MsgNftMetadata.links":
		if x.Links == nil {
			x.Links = []*TokenLink{}
		}
		value := &_MsgNftMetadata_6_list{list: &x.Links}
		return protoreflect.ValueOfList(value)
	case "mantrachain.token.v1.MsgNftMetadata.attributes":
		if x.Attributes == nil {
			x.Attributes = []*TokenAttribute{}
		}
		value := &_MsgNftMetadata_7_list{list: &x.Attributes}
		return protoreflect.ValueOfList(value)
	case "mantrachain.token.v1.MsgNftMetadata.data":
		if x.Data == nil {
			x.Data = new(anypb.Any)
		}
		return protoreflect.ValueOfMessage(x.Data.ProtoReflect())
	case "mantrachain.token.v1.MsgNftMetadata.id":
		panic(fmt.Errorf("field id of message mantrachain.token.v1.MsgNftMetadata is not mutable"))
	case "mantrachain.token.v1.MsgNftMetadata.title":
		panic(fmt.Errorf("field title of message mantrachain.token.v1.MsgNftMetadata is not mutable"))
	case "mantrachain.token.v1.MsgNftMetadata.url":
		panic(fmt.Errorf("field url of message mantrachain.token.v1.MsgNftMetadata is not mutable"))
	case "mantrachain.token.v1.MsgNftMetadata.description":
		panic(fmt.Errorf("field description of message mantrachain.token.v1.MsgNftMetadata is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftMetadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNftMetadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.token.v1.MsgNftMetadata.id":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.MsgNftMetadata.title":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.MsgNftMetadata.images":
		list := []*TokenImage{}
		return protoreflect.ValueOfList(&_MsgNftMetadata_3_list{list: &list})
	case "mantrachain.token.v1.MsgNftMetadata.url":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.MsgNftMetadata.description":
		return protoreflect.ValueOfString("")
	case "mantrachain.token.v1.MsgNftMetadata.links":
		list := []*TokenLink{}
		return protoreflect.ValueOfList(&_MsgNftMetadata_6_list{list: &list})
	case "mantrachain.token.v1.MsgNftMetadata.attributes":
		list := []*TokenAttribute{}
		return protoreflect.ValueOfList(&_MsgNftMetadata_7_list{list: &list})
	case "mantrachain.token.v1.MsgNftMetadata.data":
		m := new(anypb.Any)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.token.v1.MsgNftMetadata"))
		}
		panic(fmt.Errorf("message mantrachain.token.v1.MsgNftMetadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNftMetadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.token.v1.MsgNftMetadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNftMetadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNftMetadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNftMetadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNftMetadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNftMetadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Images) > 0 {
			for _, e := range x.Images {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Url)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Links) > 0 {
			for _, e := range x.Links {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Attributes) > 0 {
			for _, e := range x.Attributes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Data != nil {
			l = options.Size(x.Data)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftMetadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Data != nil {
			encoded, err := options.Marshal(x.Data)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.Attributes) > 0 {
			for iNdEx := len(x.Attributes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Attributes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.Links) > 0 {
			for iNdEx := len(x.Links) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Links[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Url) > 0 {
			i -= len(x.Url)
			copy(dAtA[i:], x.Url)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Url)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Images) > 0 {
			for iNdEx := len(x.Images) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Images[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNftMetadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftMetadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNftMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Images", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Images = append(x.Images, &TokenImage{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Images[len(x.Images)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Url = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Links", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Links = append(x.Links, &TokenLink{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Links[len(x.Links)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Attributes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Attributes = append(x.Attributes, &TokenAttribute{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Attributes[len(x.Attributes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Data == nil {
					x.Data = &anypb.Any{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Data); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: mantrachain/token/v1/common.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TokenOption is a key-value pair for token options
type TokenOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type_    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	SubValue string `protobuf:"bytes,3,opt,name=sub_value,json=subValue,proto3" json:"sub_value,omitempty"`
}

func (x *TokenOption) Reset() {
	*x = TokenOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_token_v1_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenOption) ProtoMessage() {}

// Deprecated: Use TokenOption.ProtoReflect.Descriptor instead.
func (*TokenOption) Descriptor() ([]byte, []int) {
	return file_mantrachain_token_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *TokenOption) GetType_() string {
	if x != nil {
		return x.Type_
	}
	return ""
}

func (x *TokenOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TokenOption) GetSubValue() string {
	if x != nil {
		return x.SubValue
	}
	return ""
}

// TokenAttribute is a key-value pair for token attributes
type TokenAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type_    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	SubValue string `protobuf:"bytes,3,opt,name=sub_value,json=subValue,proto3" json:"sub_value,omitempty"`
}

func (x *TokenAttribute) Reset() {
	*x = TokenAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_token_v1_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenAttribute) ProtoMessage() {}

// Deprecated: Use TokenAttribute.ProtoReflect.Descriptor instead.
func (*TokenAttribute) Descriptor() ([]byte, []int) {
	return file_mantrachain_token_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *TokenAttribute) GetType_() string {
	if x != nil {
		return x.Type_
	}
	return ""
}

func (x *TokenAttribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TokenAttribute) GetSubValue() string {
	if x != nil {
		return x.SubValue
	}
	return ""
}

// TokenImage is a key-value pair for token images
type TokenImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type_ string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Url   string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *TokenImage) Reset() {
	*x = TokenImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_token_v1_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenImage) ProtoMessage() {}

// Deprecated: Use TokenImage.ProtoReflect.Descriptor instead.
func (*TokenImage) Descriptor() ([]byte, []int) {
	return file_mantrachain_token_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *TokenImage) GetType_() string {
	if x != nil {
		return x.Type_
	}
	return ""
}

func (x *TokenImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// TokenLink is a key-value pair for token links
type TokenLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type_ string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Url   string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *TokenLink) Reset() {
	*x = TokenLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_token_v1_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenLink) ProtoMessage() {}

// Deprecated: Use TokenLink.ProtoReflect.Descriptor instead.
func (*TokenLink) Descriptor() ([]byte, []int) {
	return file_mantrachain_token_v1_common_proto_rawDescGZIP(), []int{3}
}

func (x *TokenLink) GetType_() string {
	if x != nil {
		return x.Type_
	}
	return ""
}

func (x *TokenLink) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// MsgNftImageMetadata
type MsgNftImageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *TokenImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *MsgNftImageMetadata) Reset() {
	*x = MsgNftImageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_token_v1_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNftImageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNftImageMetadata) ProtoMessage() {}

// Deprecated: Use MsgNftImageMetadata.ProtoReflect.Descriptor instead.
func (*MsgNftImageMetadata) Descriptor() ([]byte, []int) {
	return file_mantrachain_token_v1_common_proto_rawDescGZIP(), []int{4}
}

func (x *MsgNftImageMetadata) GetImage() *TokenImage {
	if x != nil {
		return x.Image
	}
	return nil
}

// MsgNftImagesMetadata
type MsgNftsImagesMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images        []*TokenImage `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	NftsIds       []string      `protobuf:"bytes,2,rep,name=nfts_ids,json=nftsIds,proto3" json:"nfts_ids,omitempty"`
	ImagesIndexes []uint64      `protobuf:"varint,3,rep,packed,name=images_indexes,json=imagesIndexes,proto3" json:"images_indexes,omitempty"`
}

func (x *MsgNftsImagesMetadata) Reset() {
	*x = MsgNftsImagesMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_token_v1_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNftsImagesMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNftsImagesMetadata) ProtoMessage() {}

// Deprecated: Use MsgNftsImagesMetadata.ProtoReflect.Descriptor instead.
func (*MsgNftsImagesMetadata) Descriptor() ([]byte, []int) {
	return file_mantrachain_token_v1_common_proto_rawDescGZIP(), []int{5}
}

func (x *MsgNftsImagesMetadata) GetImages() []*TokenImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *MsgNftsImagesMetadata) GetNftsIds() []string {
	if x != nil {
		return x.NftsIds
	}
	return nil
}

func (x *MsgNftsImagesMetadata) GetImagesIndexes() []uint64 {
	if x != nil {
		return x.ImagesIndexes
	}
	return nil
}

// MsgNftImageMetadata
type MsgNftsImagesIndexes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indexes []uint64 `protobuf:"varint,1,rep,packed,name=indexes,proto3" json:"indexes,omitempty"`
}

func (x *MsgNftsImagesIndexes) Reset() {
	*x = MsgNftsImagesIndexes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_token_v1_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNftsImagesIndexes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNftsImagesIndexes) ProtoMessage() {}

// Deprecated: Use MsgNftsImagesIndexes.ProtoReflect.Descriptor instead.
func (*MsgNftsImagesIndexes) Descriptor() ([]byte, []int) {
	return file_mantrachain_token_v1_common_proto_rawDescGZIP(), []int{6}
}

func (x *MsgNftsImagesIndexes) GetIndexes() []uint64 {
	if x != nil {
		return x.Indexes
	}
	return nil
}

// MsgNftsImagesMetadata
type MsgNftsImagesGroupedMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images         []*TokenImage           `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	NftsIdsGrouped []*MsgNftsIds           `protobuf:"bytes,2,rep,name=nfts_ids_grouped,json=nftsIdsGrouped,proto3" json:"nfts_ids_grouped,omitempty"`
	ImagesIndexes  []*MsgNftsImagesIndexes `protobuf:"bytes,3,rep,name=images_indexes,json=imagesIndexes,proto3" json:"images_indexes,omitempty"`
}

func (x *MsgNftsImagesGroupedMetadata) Reset() {
	*x = MsgNftsImagesGroupedMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_token_v1_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNftsImagesGroupedMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNftsImagesGroupedMetadata) ProtoMessage() {}

// Deprecated: Use MsgNftsImagesGroupedMetadata.ProtoReflect.Descriptor instead.
func (*MsgNftsImagesGroupedMetadata) Descriptor() ([]byte, []int) {
	return file_mantrachain_token_v1_common_proto_rawDescGZIP(), []int{7}
}

func (x *MsgNftsImagesGroupedMetadata) GetImages() []*TokenImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *MsgNftsImagesGroupedMetadata) GetNftsIdsGrouped() []*MsgNftsIds {
	if x != nil {
		return x.NftsIdsGrouped
	}
	return nil
}

func (x *MsgNftsImagesGroupedMetadata) GetImagesIndexes() []*MsgNftsImagesIndexes {
	if x != nil {
		return x.ImagesIndexes
	}
	return nil
}

// MsgNftsIds
type MsgNftsIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NftsIds []string `protobuf:"bytes,1,rep,name=nfts_ids,json=nftsIds,proto3" json:"nfts_ids,omitempty"`
}

func (x *MsgNftsIds) Reset() {
	*x = MsgNftsIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_token_v1_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNftsIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNftsIds) ProtoMessage() {}

// Deprecated: Use MsgNftsIds.ProtoReflect.Descriptor instead.
func (*MsgNftsIds) Descriptor() ([]byte, []int) {
	return file_mantrachain_token_v1_common_proto_rawDescGZIP(), []int{8}
}

func (x *MsgNftsIds) GetNftsIds() []string {
	if x != nil {
		return x.NftsIds
	}
	return nil
}

// MsgNftsMetadata
type MsgNftsMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nfts []*MsgNftMetadata `protobuf:"bytes,1,rep,name=nfts,proto3" json:"nfts,omitempty"`
}

func (x *MsgNftsMetadata) Reset() {
	*x = MsgNftsMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_token_v1_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNftsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNftsMetadata) ProtoMessage() {}

// Deprecated: Use MsgNftsMetadata.ProtoReflect.Descriptor instead.
func (*MsgNftsMetadata) Descriptor() ([]byte, []int) {
	return file_mantrachain_token_v1_common_proto_rawDescGZIP(), []int{9}
}

func (x *MsgNftsMetadata) GetNfts() []*MsgNftMetadata {
	if x != nil {
		return x.Nfts
	}
	return nil
}

// MsgCreateNftCollectionMetadata
type MsgCreateNftCollectionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Images         []*TokenImage  `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	Url            string         `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Description    string         `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Links          []*TokenLink   `protobuf:"bytes,6,rep,name=links,proto3" json:"links,omitempty"`
	Options        []*TokenOption `protobuf:"bytes,7,rep,name=options,proto3" json:"options,omitempty"`
	Category       string         `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	Symbol         string         `protobuf:"bytes,9,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Opened         bool           `protobuf:"varint,10,opt,name=opened,proto3" json:"opened,omitempty"`
	SoulBondedNfts bool           `protobuf:"varint,11,opt,name=soul_bonded_nfts,json=soulBondedNfts,proto3" json:"soul_bonded_nfts,omitempty"`
	RestrictedNfts bool           `protobuf:"varint,12,opt,name=restricted_nfts,json=restrictedNfts,proto3" json:"restricted_nfts,omitempty"`
	Data           *anypb.Any     `protobuf:"bytes,13,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MsgCreateNftCollectionMetadata) Reset() {
	*x = MsgCreateNftCollectionMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_token_v1_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateNftCollectionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateNftCollectionMetadata) ProtoMessage() {}

// Deprecated: Use MsgCreateNftCollectionMetadata.ProtoReflect.Descriptor instead.
func (*MsgCreateNftCollectionMetadata) Descriptor() ([]byte, []int) {
	return file_mantrachain_token_v1_common_proto_rawDescGZIP(), []int{10}
}

func (x *MsgCreateNftCollectionMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MsgCreateNftCollectionMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgCreateNftCollectionMetadata) GetImages() []*TokenImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *MsgCreateNftCollectionMetadata) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MsgCreateNftCollectionMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgCreateNftCollectionMetadata) GetLinks() []*TokenLink {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *MsgCreateNftCollectionMetadata) GetOptions() []*TokenOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *MsgCreateNftCollectionMetadata) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *MsgCreateNftCollectionMetadata) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MsgCreateNftCollectionMetadata) GetOpened() bool {
	if x != nil {
		return x.Opened
	}
	return false
}

func (x *MsgCreateNftCollectionMetadata) GetSoulBondedNfts() bool {
	if x != nil {
		return x.SoulBondedNfts
	}
	return false
}

func (x *MsgCreateNftCollectionMetadata) GetRestrictedNfts() bool {
	if x != nil {
		return x.RestrictedNfts
	}
	return false
}

func (x *MsgCreateNftCollectionMetadata) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

// MsgNftMetadata
type MsgNftMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string            `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Images      []*TokenImage     `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	Url         string            `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Description string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Links       []*TokenLink      `protobuf:"bytes,6,rep,name=links,proto3" json:"links,omitempty"`
	Attributes  []*TokenAttribute `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Data        *anypb.Any        `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MsgNftMetadata) Reset() {
	*x = MsgNftMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_token_v1_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNftMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNftMetadata) ProtoMessage() {}

// Deprecated: Use MsgNftMetadata.ProtoReflect.Descriptor instead.
func (*MsgNftMetadata) Descriptor() ([]byte, []int) {
	return file_mantrachain_token_v1_common_proto_rawDescGZIP(), []int{11}
}

func (x *MsgNftMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MsgNftMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgNftMetadata) GetImages() []*TokenImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *MsgNftMetadata) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MsgNftMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgNftMetadata) GetLinks() []*TokenLink {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *MsgNftMetadata) GetAttributes() []*TokenAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *MsgNftMetadata) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_mantrachain_token_v1_common_proto protoreflect.FileDescriptor

var file_mantrachain_token_v1_common_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x0b, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0x5d, 0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0x38, 0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22,
	0x37, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0x4d, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x4e,
	0x66, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x36, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x4e,
	0x66, 0x74, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x38, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x66, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x66, 0x74, 0x73, 0x49, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0d,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x30, 0x0a,
	0x14, 0x4d, 0x73, 0x67, 0x4e, 0x66, 0x74, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22,
	0xf7, 0x01, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x4e, 0x66, 0x74, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x38, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x10, 0x6e, 0x66,
	0x74, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x4e,
	0x66, 0x74, 0x73, 0x49, 0x64, 0x73, 0x52, 0x0e, 0x6e, 0x66, 0x74, 0x73, 0x49, 0x64, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x4e, 0x66, 0x74, 0x73, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x0d, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x0a, 0x4d, 0x73, 0x67,
	0x4e, 0x66, 0x74, 0x73, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x66, 0x74, 0x73, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x66, 0x74, 0x73, 0x49,
	0x64, 0x73, 0x22, 0x4b, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x4e, 0x66, 0x74, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x04, 0x6e, 0x66, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x4e, 0x66,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6e, 0x66, 0x74, 0x73, 0x22,
	0xef, 0x03, 0x0a, 0x1e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x66, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d,
	0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x6c, 0x5f, 0x62, 0x6f, 0x6e,
	0x64, 0x65, 0x64, 0x5f, 0x6e, 0x66, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x73, 0x6f, 0x75, 0x6c, 0x42, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x4e, 0x66, 0x74, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x66, 0x74,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x4e, 0x66, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xcb, 0x02, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x4e, 0x66, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12,
	0x44, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42,
	0xcc, 0x01, 0xa8, 0xe2, 0x1e, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31,
	0x42, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x2d, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x4d, 0x54, 0x58, 0xaa, 0x02, 0x14, 0x4d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x4d, 0x61,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x20, 0x4d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x4d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mantrachain_token_v1_common_proto_rawDescOnce sync.Once
	file_mantrachain_token_v1_common_proto_rawDescData = file_mantrachain_token_v1_common_proto_rawDesc
)

func file_mantrachain_token_v1_common_proto_rawDescGZIP() []byte {
	file_mantrachain_token_v1_common_proto_rawDescOnce.Do(func() {
		file_mantrachain_token_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_mantrachain_token_v1_common_proto_rawDescData)
	})
	return file_mantrachain_token_v1_common_proto_rawDescData
}

var file_mantrachain_token_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_mantrachain_token_v1_common_proto_goTypes = []interface{}{
	(*TokenOption)(nil),                    // 0: mantrachain.token.v1.TokenOption
	(*TokenAttribute)(nil),                 // 1: mantrachain.token.v1.TokenAttribute
	(*TokenImage)(nil),                     // 2: mantrachain.token.v1.TokenImage
	(*TokenLink)(nil),                      // 3: mantrachain.token.v1.TokenLink
	(*MsgNftImageMetadata)(nil),            // 4: mantrachain.token.v1.MsgNftImageMetadata
	(*MsgNftsImagesMetadata)(nil),          // 5: mantrachain.token.v1.MsgNftsImagesMetadata
	(*MsgNftsImagesIndexes)(nil),           // 6: mantrachain.token.v1.MsgNftsImagesIndexes
	(*MsgNftsImagesGroupedMetadata)(nil),   // 7: mantrachain.token.v1.MsgNftsImagesGroupedMetadata
	(*MsgNftsIds)(nil),                     // 8: mantrachain.token.v1.MsgNftsIds
	(*MsgNftsMetadata)(nil),                // 9: mantrachain.token.v1.MsgNftsMetadata
	(*MsgCreateNftCollectionMetadata)(nil), // 10: mantrachain.token.v1.MsgCreateNftCollectionMetadata
	(*MsgNftMetadata)(nil),                 // 11: mantrachain.token.v1.MsgNftMetadata
	(*anypb.Any)(nil),                      // 12: google.protobuf.Any
}
var file_mantrachain_token_v1_common_proto_depIdxs = []int32{
	2,  // 0: mantrachain.token.v1.MsgNftImageMetadata.image:type_name -> mantrachain.token.v1.TokenImage
	2,  // 1: mantrachain.token.v1.MsgNftsImagesMetadata.images:type_name -> mantrachain.token.v1.TokenImage
	2,  // 2: mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images:type_name -> mantrachain.token.v1.TokenImage
	8,  // 3: mantrachain.token.v1.MsgNftsImagesGroupedMetadata.nfts_ids_grouped:type_name -> mantrachain.token.v1.MsgNftsIds
	6,  // 4: mantrachain.token.v1.MsgNftsImagesGroupedMetadata.images_indexes:type_name -> mantrachain.token.v1.MsgNftsImagesIndexes
	11, // 5: mantrachain.token.v1.MsgNftsMetadata.nfts:type_name -> mantrachain.token.v1.MsgNftMetadata
	2,  // 6: mantrachain.token.v1.MsgCreateNftCollectionMetadata.images:type_name -> mantrachain.token.v1.TokenImage
	3,  // 7: mantrachain.token.v1.MsgCreateNftCollectionMetadata.links:type_name -> mantrachain.token.v1.TokenLink
	0,  // 8: mantrachain.token.v1.MsgCreateNftCollectionMetadata.options:type_name -> mantrachain.token.v1.TokenOption
	12, // 9: mantrachain.token.v1.MsgCreateNftCollectionMetadata.data:type_name -> google.protobuf.Any
	2,  // 10: mantrachain.token.v1.MsgNftMetadata.images:type_name -> mantrachain.token.v1.TokenImage
	3,  // 11: mantrachain.token.v1.MsgNftMetadata.links:type_name -> mantrachain.token.v1.TokenLink
	1,  // 12: mantrachain.token.v1.MsgNftMetadata.attributes:type_name -> mantrachain.token.v1.TokenAttribute
	12, // 13: mantrachain.token.v1.MsgNftMetadata.data:type_name -> google.protobuf.Any
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_mantrachain_token_v1_common_proto_init() }
func file_mantrachain_token_v1_common_proto_init() {
	if File_mantrachain_token_v1_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mantrachain_token_v1_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_token_v1_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_token_v1_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_token_v1_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_token_v1_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNftImageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_token_v1_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNftsImagesMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_token_v1_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNftsImagesIndexes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_token_v1_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNftsImagesGroupedMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_token_v1_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNftsIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_token_v1_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNftsMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_token_v1_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateNftCollectionMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_token_v1_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNftMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mantrachain_token_v1_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mantrachain_token_v1_common_proto_goTypes,
		DependencyIndexes: file_mantrachain_token_v1_common_proto_depIdxs,
		MessageInfos:      file_mantrachain_token_v1_common_proto_msgTypes,
	}.Build()
	File_mantrachain_token_v1_common_proto = out.File
	file_mantrachain_token_v1_common_proto_rawDesc = nil
	file_mantrachain_token_v1_common_proto_goTypes = nil
	file_mantrachain_token_v1_common_proto_depIdxs = nil
}
