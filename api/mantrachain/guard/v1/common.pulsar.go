// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package guardv1

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_WhitelistTransfersAccAddrs                protoreflect.MessageDescriptor
	fd_WhitelistTransfersAccAddrs_index          protoreflect.FieldDescriptor
	fd_WhitelistTransfersAccAddrs_account        protoreflect.FieldDescriptor
	fd_WhitelistTransfersAccAddrs_is_whitelisted protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_guard_v1_common_proto_init()
	md_WhitelistTransfersAccAddrs = File_mantrachain_guard_v1_common_proto.Messages().ByName("WhitelistTransfersAccAddrs")
	fd_WhitelistTransfersAccAddrs_index = md_WhitelistTransfersAccAddrs.Fields().ByName("index")
	fd_WhitelistTransfersAccAddrs_account = md_WhitelistTransfersAccAddrs.Fields().ByName("account")
	fd_WhitelistTransfersAccAddrs_is_whitelisted = md_WhitelistTransfersAccAddrs.Fields().ByName("is_whitelisted")
}

var _ protoreflect.Message = (*fastReflection_WhitelistTransfersAccAddrs)(nil)

type fastReflection_WhitelistTransfersAccAddrs WhitelistTransfersAccAddrs

func (x *WhitelistTransfersAccAddrs) ProtoReflect() protoreflect.Message {
	return (*fastReflection_WhitelistTransfersAccAddrs)(x)
}

func (x *WhitelistTransfersAccAddrs) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_guard_v1_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_WhitelistTransfersAccAddrs_messageType fastReflection_WhitelistTransfersAccAddrs_messageType
var _ protoreflect.MessageType = fastReflection_WhitelistTransfersAccAddrs_messageType{}

type fastReflection_WhitelistTransfersAccAddrs_messageType struct{}

func (x fastReflection_WhitelistTransfersAccAddrs_messageType) Zero() protoreflect.Message {
	return (*fastReflection_WhitelistTransfersAccAddrs)(nil)
}
func (x fastReflection_WhitelistTransfersAccAddrs_messageType) New() protoreflect.Message {
	return new(fastReflection_WhitelistTransfersAccAddrs)
}
func (x fastReflection_WhitelistTransfersAccAddrs_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_WhitelistTransfersAccAddrs
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_WhitelistTransfersAccAddrs) Descriptor() protoreflect.MessageDescriptor {
	return md_WhitelistTransfersAccAddrs
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_WhitelistTransfersAccAddrs) Type() protoreflect.MessageType {
	return _fastReflection_WhitelistTransfersAccAddrs_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_WhitelistTransfersAccAddrs) New() protoreflect.Message {
	return new(fastReflection_WhitelistTransfersAccAddrs)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_WhitelistTransfersAccAddrs) Interface() protoreflect.ProtoMessage {
	return (*WhitelistTransfersAccAddrs)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_WhitelistTransfersAccAddrs) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Index) != 0 {
		value := protoreflect.ValueOfBytes(x.Index)
		if !f(fd_WhitelistTransfersAccAddrs_index, value) {
			return
		}
	}
	if len(x.Account) != 0 {
		value := protoreflect.ValueOfBytes(x.Account)
		if !f(fd_WhitelistTransfersAccAddrs_account, value) {
			return
		}
	}
	if x.IsWhitelisted != false {
		value := protoreflect.ValueOfBool(x.IsWhitelisted)
		if !f(fd_WhitelistTransfersAccAddrs_is_whitelisted, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_WhitelistTransfersAccAddrs) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.index":
		return len(x.Index) != 0
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.account":
		return len(x.Account) != 0
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.is_whitelisted":
		return x.IsWhitelisted != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.WhitelistTransfersAccAddrs"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.WhitelistTransfersAccAddrs does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WhitelistTransfersAccAddrs) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.index":
		x.Index = nil
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.account":
		x.Account = nil
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.is_whitelisted":
		x.IsWhitelisted = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.WhitelistTransfersAccAddrs"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.WhitelistTransfersAccAddrs does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_WhitelistTransfersAccAddrs) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.index":
		value := x.Index
		return protoreflect.ValueOfBytes(value)
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.account":
		value := x.Account
		return protoreflect.ValueOfBytes(value)
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.is_whitelisted":
		value := x.IsWhitelisted
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.WhitelistTransfersAccAddrs"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.WhitelistTransfersAccAddrs does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WhitelistTransfersAccAddrs) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.index":
		x.Index = value.Bytes()
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.account":
		x.Account = value.Bytes()
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.is_whitelisted":
		x.IsWhitelisted = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.WhitelistTransfersAccAddrs"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.WhitelistTransfersAccAddrs does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WhitelistTransfersAccAddrs) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.index":
		panic(fmt.Errorf("field index of message mantrachain.guard.v1.WhitelistTransfersAccAddrs is not mutable"))
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.account":
		panic(fmt.Errorf("field account of message mantrachain.guard.v1.WhitelistTransfersAccAddrs is not mutable"))
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.is_whitelisted":
		panic(fmt.Errorf("field is_whitelisted of message mantrachain.guard.v1.WhitelistTransfersAccAddrs is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.WhitelistTransfersAccAddrs"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.WhitelistTransfersAccAddrs does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_WhitelistTransfersAccAddrs) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.index":
		return protoreflect.ValueOfBytes(nil)
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.account":
		return protoreflect.ValueOfBytes(nil)
	case "mantrachain.guard.v1.WhitelistTransfersAccAddrs.is_whitelisted":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.WhitelistTransfersAccAddrs"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.WhitelistTransfersAccAddrs does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_WhitelistTransfersAccAddrs) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.guard.v1.WhitelistTransfersAccAddrs", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_WhitelistTransfersAccAddrs) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WhitelistTransfersAccAddrs) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_WhitelistTransfersAccAddrs) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_WhitelistTransfersAccAddrs) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*WhitelistTransfersAccAddrs)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Index)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Account)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IsWhitelisted {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*WhitelistTransfersAccAddrs)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.IsWhitelisted {
			i--
			if x.IsWhitelisted {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x18
		}
		if len(x.Account) > 0 {
			i -= len(x.Account)
			copy(dAtA[i:], x.Account)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Account)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Index) > 0 {
			i -= len(x.Index)
			copy(dAtA[i:], x.Index)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Index)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*WhitelistTransfersAccAddrs)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WhitelistTransfersAccAddrs: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WhitelistTransfersAccAddrs: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Index = append(x.Index[:0], dAtA[iNdEx:postIndex]...)
				if x.Index == nil {
					x.Index = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Account = append(x.Account[:0], dAtA[iNdEx:postIndex]...)
				if x.Account == nil {
					x.Account = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsWhitelisted", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsWhitelisted = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgAccounts_1_list)(nil)

type _MsgAccounts_1_list struct {
	list *[]string
}

func (x *_MsgAccounts_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgAccounts_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgAccounts_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgAccounts_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgAccounts_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgAccounts at list field Accounts as it is not of Message kind"))
}

func (x *_MsgAccounts_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgAccounts_1_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgAccounts_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgAccounts          protoreflect.MessageDescriptor
	fd_MsgAccounts_accounts protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_guard_v1_common_proto_init()
	md_MsgAccounts = File_mantrachain_guard_v1_common_proto.Messages().ByName("MsgAccounts")
	fd_MsgAccounts_accounts = md_MsgAccounts.Fields().ByName("accounts")
}

var _ protoreflect.Message = (*fastReflection_MsgAccounts)(nil)

type fastReflection_MsgAccounts MsgAccounts

func (x *MsgAccounts) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAccounts)(x)
}

func (x *MsgAccounts) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_guard_v1_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAccounts_messageType fastReflection_MsgAccounts_messageType
var _ protoreflect.MessageType = fastReflection_MsgAccounts_messageType{}

type fastReflection_MsgAccounts_messageType struct{}

func (x fastReflection_MsgAccounts_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAccounts)(nil)
}
func (x fastReflection_MsgAccounts_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAccounts)
}
func (x fastReflection_MsgAccounts_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAccounts
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAccounts) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAccounts
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAccounts) Type() protoreflect.MessageType {
	return _fastReflection_MsgAccounts_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAccounts) New() protoreflect.Message {
	return new(fastReflection_MsgAccounts)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAccounts) Interface() protoreflect.ProtoMessage {
	return (*MsgAccounts)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAccounts) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Accounts) != 0 {
		value := protoreflect.ValueOfList(&_MsgAccounts_1_list{list: &x.Accounts})
		if !f(fd_MsgAccounts_accounts, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAccounts) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccounts.accounts":
		return len(x.Accounts) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccounts"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccounts does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAccounts) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccounts.accounts":
		x.Accounts = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccounts"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccounts does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAccounts) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.guard.v1.MsgAccounts.accounts":
		if len(x.Accounts) == 0 {
			return protoreflect.ValueOfList(&_MsgAccounts_1_list{})
		}
		listValue := &_MsgAccounts_1_list{list: &x.Accounts}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccounts"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccounts does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAccounts) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccounts.accounts":
		lv := value.List()
		clv := lv.(*_MsgAccounts_1_list)
		x.Accounts = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccounts"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccounts does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAccounts) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccounts.accounts":
		if x.Accounts == nil {
			x.Accounts = []string{}
		}
		value := &_MsgAccounts_1_list{list: &x.Accounts}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccounts"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccounts does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAccounts) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccounts.accounts":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgAccounts_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccounts"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccounts does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAccounts) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.guard.v1.MsgAccounts", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAccounts) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAccounts) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAccounts) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAccounts) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAccounts)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Accounts) > 0 {
			for _, s := range x.Accounts {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAccounts)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Accounts) > 0 {
			for iNdEx := len(x.Accounts) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Accounts[iNdEx])
				copy(dAtA[i:], x.Accounts[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Accounts[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAccounts)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAccounts: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAccounts: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Accounts", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Accounts = append(x.Accounts, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgIndexes_1_list)(nil)

type _MsgIndexes_1_list struct {
	list *[][]byte
}

func (x *_MsgIndexes_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgIndexes_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_MsgIndexes_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgIndexes_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgIndexes_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgIndexes at list field Indexes as it is not of Message kind"))
}

func (x *_MsgIndexes_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgIndexes_1_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_MsgIndexes_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgIndexes         protoreflect.MessageDescriptor
	fd_MsgIndexes_indexes protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_guard_v1_common_proto_init()
	md_MsgIndexes = File_mantrachain_guard_v1_common_proto.Messages().ByName("MsgIndexes")
	fd_MsgIndexes_indexes = md_MsgIndexes.Fields().ByName("indexes")
}

var _ protoreflect.Message = (*fastReflection_MsgIndexes)(nil)

type fastReflection_MsgIndexes MsgIndexes

func (x *MsgIndexes) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIndexes)(x)
}

func (x *MsgIndexes) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_guard_v1_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIndexes_messageType fastReflection_MsgIndexes_messageType
var _ protoreflect.MessageType = fastReflection_MsgIndexes_messageType{}

type fastReflection_MsgIndexes_messageType struct{}

func (x fastReflection_MsgIndexes_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIndexes)(nil)
}
func (x fastReflection_MsgIndexes_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIndexes)
}
func (x fastReflection_MsgIndexes_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIndexes
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIndexes) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIndexes
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIndexes) Type() protoreflect.MessageType {
	return _fastReflection_MsgIndexes_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIndexes) New() protoreflect.Message {
	return new(fastReflection_MsgIndexes)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIndexes) Interface() protoreflect.ProtoMessage {
	return (*MsgIndexes)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIndexes) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Indexes) != 0 {
		value := protoreflect.ValueOfList(&_MsgIndexes_1_list{list: &x.Indexes})
		if !f(fd_MsgIndexes_indexes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIndexes) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgIndexes.indexes":
		return len(x.Indexes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgIndexes"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgIndexes does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIndexes) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgIndexes.indexes":
		x.Indexes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgIndexes"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgIndexes does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIndexes) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.guard.v1.MsgIndexes.indexes":
		if len(x.Indexes) == 0 {
			return protoreflect.ValueOfList(&_MsgIndexes_1_list{})
		}
		listValue := &_MsgIndexes_1_list{list: &x.Indexes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgIndexes"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgIndexes does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIndexes) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgIndexes.indexes":
		lv := value.List()
		clv := lv.(*_MsgIndexes_1_list)
		x.Indexes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgIndexes"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgIndexes does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIndexes) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgIndexes.indexes":
		if x.Indexes == nil {
			x.Indexes = [][]byte{}
		}
		value := &_MsgIndexes_1_list{list: &x.Indexes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgIndexes"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgIndexes does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIndexes) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgIndexes.indexes":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_MsgIndexes_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgIndexes"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgIndexes does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIndexes) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.guard.v1.MsgIndexes", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIndexes) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIndexes) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIndexes) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIndexes) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIndexes)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Indexes) > 0 {
			for _, b := range x.Indexes {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIndexes)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Indexes) > 0 {
			for iNdEx := len(x.Indexes) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Indexes[iNdEx])
				copy(dAtA[i:], x.Indexes[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Indexes[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIndexes)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIndexes: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIndexes: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Indexes", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Indexes = append(x.Indexes, make([]byte, postIndex-iNdEx))
				copy(x.Indexes[len(x.Indexes)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AccountPrivileges            protoreflect.MessageDescriptor
	fd_AccountPrivileges_account    protoreflect.FieldDescriptor
	fd_AccountPrivileges_privileges protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_guard_v1_common_proto_init()
	md_AccountPrivileges = File_mantrachain_guard_v1_common_proto.Messages().ByName("AccountPrivileges")
	fd_AccountPrivileges_account = md_AccountPrivileges.Fields().ByName("account")
	fd_AccountPrivileges_privileges = md_AccountPrivileges.Fields().ByName("privileges")
}

var _ protoreflect.Message = (*fastReflection_AccountPrivileges)(nil)

type fastReflection_AccountPrivileges AccountPrivileges

func (x *AccountPrivileges) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AccountPrivileges)(x)
}

func (x *AccountPrivileges) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_guard_v1_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AccountPrivileges_messageType fastReflection_AccountPrivileges_messageType
var _ protoreflect.MessageType = fastReflection_AccountPrivileges_messageType{}

type fastReflection_AccountPrivileges_messageType struct{}

func (x fastReflection_AccountPrivileges_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AccountPrivileges)(nil)
}
func (x fastReflection_AccountPrivileges_messageType) New() protoreflect.Message {
	return new(fastReflection_AccountPrivileges)
}
func (x fastReflection_AccountPrivileges_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AccountPrivileges
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AccountPrivileges) Descriptor() protoreflect.MessageDescriptor {
	return md_AccountPrivileges
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AccountPrivileges) Type() protoreflect.MessageType {
	return _fastReflection_AccountPrivileges_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AccountPrivileges) New() protoreflect.Message {
	return new(fastReflection_AccountPrivileges)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AccountPrivileges) Interface() protoreflect.ProtoMessage {
	return (*AccountPrivileges)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AccountPrivileges) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Account) != 0 {
		value := protoreflect.ValueOfBytes(x.Account)
		if !f(fd_AccountPrivileges_account, value) {
			return
		}
	}
	if len(x.Privileges) != 0 {
		value := protoreflect.ValueOfBytes(x.Privileges)
		if !f(fd_AccountPrivileges_privileges, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AccountPrivileges) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AccountPrivileges.account":
		return len(x.Account) != 0
	case "mantrachain.guard.v1.AccountPrivileges.privileges":
		return len(x.Privileges) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AccountPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AccountPrivileges does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AccountPrivileges) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AccountPrivileges.account":
		x.Account = nil
	case "mantrachain.guard.v1.AccountPrivileges.privileges":
		x.Privileges = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AccountPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AccountPrivileges does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AccountPrivileges) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.guard.v1.AccountPrivileges.account":
		value := x.Account
		return protoreflect.ValueOfBytes(value)
	case "mantrachain.guard.v1.AccountPrivileges.privileges":
		value := x.Privileges
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AccountPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AccountPrivileges does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AccountPrivileges) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AccountPrivileges.account":
		x.Account = value.Bytes()
	case "mantrachain.guard.v1.AccountPrivileges.privileges":
		x.Privileges = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AccountPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AccountPrivileges does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AccountPrivileges) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AccountPrivileges.account":
		panic(fmt.Errorf("field account of message mantrachain.guard.v1.AccountPrivileges is not mutable"))
	case "mantrachain.guard.v1.AccountPrivileges.privileges":
		panic(fmt.Errorf("field privileges of message mantrachain.guard.v1.AccountPrivileges is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AccountPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AccountPrivileges does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AccountPrivileges) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AccountPrivileges.account":
		return protoreflect.ValueOfBytes(nil)
	case "mantrachain.guard.v1.AccountPrivileges.privileges":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AccountPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AccountPrivileges does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AccountPrivileges) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.guard.v1.AccountPrivileges", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AccountPrivileges) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AccountPrivileges) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AccountPrivileges) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AccountPrivileges) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AccountPrivileges)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Account)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Privileges)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AccountPrivileges)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Privileges) > 0 {
			i -= len(x.Privileges)
			copy(dAtA[i:], x.Privileges)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Privileges)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Account) > 0 {
			i -= len(x.Account)
			copy(dAtA[i:], x.Account)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Account)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AccountPrivileges)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AccountPrivileges: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AccountPrivileges: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Account = append(x.Account[:0], dAtA[iNdEx:postIndex]...)
				if x.Account == nil {
					x.Account = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Privileges", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Privileges = append(x.Privileges[:0], dAtA[iNdEx:postIndex]...)
				if x.Privileges == nil {
					x.Privileges = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_RequiredPrivileges            protoreflect.MessageDescriptor
	fd_RequiredPrivileges_index      protoreflect.FieldDescriptor
	fd_RequiredPrivileges_privileges protoreflect.FieldDescriptor
	fd_RequiredPrivileges_kind       protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_guard_v1_common_proto_init()
	md_RequiredPrivileges = File_mantrachain_guard_v1_common_proto.Messages().ByName("RequiredPrivileges")
	fd_RequiredPrivileges_index = md_RequiredPrivileges.Fields().ByName("index")
	fd_RequiredPrivileges_privileges = md_RequiredPrivileges.Fields().ByName("privileges")
	fd_RequiredPrivileges_kind = md_RequiredPrivileges.Fields().ByName("kind")
}

var _ protoreflect.Message = (*fastReflection_RequiredPrivileges)(nil)

type fastReflection_RequiredPrivileges RequiredPrivileges

func (x *RequiredPrivileges) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RequiredPrivileges)(x)
}

func (x *RequiredPrivileges) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_guard_v1_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RequiredPrivileges_messageType fastReflection_RequiredPrivileges_messageType
var _ protoreflect.MessageType = fastReflection_RequiredPrivileges_messageType{}

type fastReflection_RequiredPrivileges_messageType struct{}

func (x fastReflection_RequiredPrivileges_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RequiredPrivileges)(nil)
}
func (x fastReflection_RequiredPrivileges_messageType) New() protoreflect.Message {
	return new(fastReflection_RequiredPrivileges)
}
func (x fastReflection_RequiredPrivileges_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RequiredPrivileges
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RequiredPrivileges) Descriptor() protoreflect.MessageDescriptor {
	return md_RequiredPrivileges
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RequiredPrivileges) Type() protoreflect.MessageType {
	return _fastReflection_RequiredPrivileges_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RequiredPrivileges) New() protoreflect.Message {
	return new(fastReflection_RequiredPrivileges)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RequiredPrivileges) Interface() protoreflect.ProtoMessage {
	return (*RequiredPrivileges)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RequiredPrivileges) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Index) != 0 {
		value := protoreflect.ValueOfBytes(x.Index)
		if !f(fd_RequiredPrivileges_index, value) {
			return
		}
	}
	if len(x.Privileges) != 0 {
		value := protoreflect.ValueOfBytes(x.Privileges)
		if !f(fd_RequiredPrivileges_privileges, value) {
			return
		}
	}
	if x.Kind != "" {
		value := protoreflect.ValueOfString(x.Kind)
		if !f(fd_RequiredPrivileges_kind, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RequiredPrivileges) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.guard.v1.RequiredPrivileges.index":
		return len(x.Index) != 0
	case "mantrachain.guard.v1.RequiredPrivileges.privileges":
		return len(x.Privileges) != 0
	case "mantrachain.guard.v1.RequiredPrivileges.kind":
		return x.Kind != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.RequiredPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.RequiredPrivileges does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RequiredPrivileges) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.RequiredPrivileges.index":
		x.Index = nil
	case "mantrachain.guard.v1.RequiredPrivileges.privileges":
		x.Privileges = nil
	case "mantrachain.guard.v1.RequiredPrivileges.kind":
		x.Kind = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.RequiredPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.RequiredPrivileges does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RequiredPrivileges) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.guard.v1.RequiredPrivileges.index":
		value := x.Index
		return protoreflect.ValueOfBytes(value)
	case "mantrachain.guard.v1.RequiredPrivileges.privileges":
		value := x.Privileges
		return protoreflect.ValueOfBytes(value)
	case "mantrachain.guard.v1.RequiredPrivileges.kind":
		value := x.Kind
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.RequiredPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.RequiredPrivileges does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RequiredPrivileges) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.RequiredPrivileges.index":
		x.Index = value.Bytes()
	case "mantrachain.guard.v1.RequiredPrivileges.privileges":
		x.Privileges = value.Bytes()
	case "mantrachain.guard.v1.RequiredPrivileges.kind":
		x.Kind = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.RequiredPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.RequiredPrivileges does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RequiredPrivileges) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.RequiredPrivileges.index":
		panic(fmt.Errorf("field index of message mantrachain.guard.v1.RequiredPrivileges is not mutable"))
	case "mantrachain.guard.v1.RequiredPrivileges.privileges":
		panic(fmt.Errorf("field privileges of message mantrachain.guard.v1.RequiredPrivileges is not mutable"))
	case "mantrachain.guard.v1.RequiredPrivileges.kind":
		panic(fmt.Errorf("field kind of message mantrachain.guard.v1.RequiredPrivileges is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.RequiredPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.RequiredPrivileges does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RequiredPrivileges) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.RequiredPrivileges.index":
		return protoreflect.ValueOfBytes(nil)
	case "mantrachain.guard.v1.RequiredPrivileges.privileges":
		return protoreflect.ValueOfBytes(nil)
	case "mantrachain.guard.v1.RequiredPrivileges.kind":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.RequiredPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.RequiredPrivileges does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RequiredPrivileges) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.guard.v1.RequiredPrivileges", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RequiredPrivileges) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RequiredPrivileges) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RequiredPrivileges) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RequiredPrivileges) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RequiredPrivileges)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Index)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Privileges)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Kind)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RequiredPrivileges)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Kind) > 0 {
			i -= len(x.Kind)
			copy(dAtA[i:], x.Kind)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Kind)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Privileges) > 0 {
			i -= len(x.Privileges)
			copy(dAtA[i:], x.Privileges)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Privileges)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Index) > 0 {
			i -= len(x.Index)
			copy(dAtA[i:], x.Index)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Index)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RequiredPrivileges)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RequiredPrivileges: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RequiredPrivileges: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Index = append(x.Index[:0], dAtA[iNdEx:postIndex]...)
				if x.Index == nil {
					x.Index = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Privileges", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Privileges = append(x.Privileges[:0], dAtA[iNdEx:postIndex]...)
				if x.Privileges == nil {
					x.Privileges = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Kind", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Kind = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AuthzGrantRevokeMsgType          protoreflect.MessageDescriptor
	fd_AuthzGrantRevokeMsgType_type_url protoreflect.FieldDescriptor
	fd_AuthzGrantRevokeMsgType_grant    protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_guard_v1_common_proto_init()
	md_AuthzGrantRevokeMsgType = File_mantrachain_guard_v1_common_proto.Messages().ByName("AuthzGrantRevokeMsgType")
	fd_AuthzGrantRevokeMsgType_type_url = md_AuthzGrantRevokeMsgType.Fields().ByName("type_url")
	fd_AuthzGrantRevokeMsgType_grant = md_AuthzGrantRevokeMsgType.Fields().ByName("grant")
}

var _ protoreflect.Message = (*fastReflection_AuthzGrantRevokeMsgType)(nil)

type fastReflection_AuthzGrantRevokeMsgType AuthzGrantRevokeMsgType

func (x *AuthzGrantRevokeMsgType) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AuthzGrantRevokeMsgType)(x)
}

func (x *AuthzGrantRevokeMsgType) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_guard_v1_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AuthzGrantRevokeMsgType_messageType fastReflection_AuthzGrantRevokeMsgType_messageType
var _ protoreflect.MessageType = fastReflection_AuthzGrantRevokeMsgType_messageType{}

type fastReflection_AuthzGrantRevokeMsgType_messageType struct{}

func (x fastReflection_AuthzGrantRevokeMsgType_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AuthzGrantRevokeMsgType)(nil)
}
func (x fastReflection_AuthzGrantRevokeMsgType_messageType) New() protoreflect.Message {
	return new(fastReflection_AuthzGrantRevokeMsgType)
}
func (x fastReflection_AuthzGrantRevokeMsgType_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AuthzGrantRevokeMsgType
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AuthzGrantRevokeMsgType) Descriptor() protoreflect.MessageDescriptor {
	return md_AuthzGrantRevokeMsgType
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AuthzGrantRevokeMsgType) Type() protoreflect.MessageType {
	return _fastReflection_AuthzGrantRevokeMsgType_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AuthzGrantRevokeMsgType) New() protoreflect.Message {
	return new(fastReflection_AuthzGrantRevokeMsgType)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AuthzGrantRevokeMsgType) Interface() protoreflect.ProtoMessage {
	return (*AuthzGrantRevokeMsgType)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AuthzGrantRevokeMsgType) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TypeUrl != "" {
		value := protoreflect.ValueOfString(x.TypeUrl)
		if !f(fd_AuthzGrantRevokeMsgType_type_url, value) {
			return
		}
	}
	if x.Grant != false {
		value := protoreflect.ValueOfBool(x.Grant)
		if !f(fd_AuthzGrantRevokeMsgType_grant, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AuthzGrantRevokeMsgType) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgType.type_url":
		return x.TypeUrl != ""
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgType.grant":
		return x.Grant != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AuthzGrantRevokeMsgType"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AuthzGrantRevokeMsgType does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AuthzGrantRevokeMsgType) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgType.type_url":
		x.TypeUrl = ""
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgType.grant":
		x.Grant = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AuthzGrantRevokeMsgType"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AuthzGrantRevokeMsgType does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AuthzGrantRevokeMsgType) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgType.type_url":
		value := x.TypeUrl
		return protoreflect.ValueOfString(value)
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgType.grant":
		value := x.Grant
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AuthzGrantRevokeMsgType"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AuthzGrantRevokeMsgType does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AuthzGrantRevokeMsgType) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgType.type_url":
		x.TypeUrl = value.Interface().(string)
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgType.grant":
		x.Grant = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AuthzGrantRevokeMsgType"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AuthzGrantRevokeMsgType does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AuthzGrantRevokeMsgType) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgType.type_url":
		panic(fmt.Errorf("field type_url of message mantrachain.guard.v1.AuthzGrantRevokeMsgType is not mutable"))
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgType.grant":
		panic(fmt.Errorf("field grant of message mantrachain.guard.v1.AuthzGrantRevokeMsgType is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AuthzGrantRevokeMsgType"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AuthzGrantRevokeMsgType does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AuthzGrantRevokeMsgType) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgType.type_url":
		return protoreflect.ValueOfString("")
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgType.grant":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AuthzGrantRevokeMsgType"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AuthzGrantRevokeMsgType does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AuthzGrantRevokeMsgType) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.guard.v1.AuthzGrantRevokeMsgType", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AuthzGrantRevokeMsgType) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AuthzGrantRevokeMsgType) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AuthzGrantRevokeMsgType) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AuthzGrantRevokeMsgType) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AuthzGrantRevokeMsgType)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TypeUrl)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Grant {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AuthzGrantRevokeMsgType)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Grant {
			i--
			if x.Grant {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x10
		}
		if len(x.TypeUrl) > 0 {
			i -= len(x.TypeUrl)
			copy(dAtA[i:], x.TypeUrl)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TypeUrl)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AuthzGrantRevokeMsgType)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AuthzGrantRevokeMsgType: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AuthzGrantRevokeMsgType: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TypeUrl", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TypeUrl = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Grant", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Grant = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_AuthzGrantRevokeMsgsTypes_1_list)(nil)

type _AuthzGrantRevokeMsgsTypes_1_list struct {
	list *[]*AuthzGrantRevokeMsgType
}

func (x *_AuthzGrantRevokeMsgsTypes_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_AuthzGrantRevokeMsgsTypes_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_AuthzGrantRevokeMsgsTypes_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AuthzGrantRevokeMsgType)
	(*x.list)[i] = concreteValue
}

func (x *_AuthzGrantRevokeMsgsTypes_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AuthzGrantRevokeMsgType)
	*x.list = append(*x.list, concreteValue)
}

func (x *_AuthzGrantRevokeMsgsTypes_1_list) AppendMutable() protoreflect.Value {
	v := new(AuthzGrantRevokeMsgType)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_AuthzGrantRevokeMsgsTypes_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_AuthzGrantRevokeMsgsTypes_1_list) NewElement() protoreflect.Value {
	v := new(AuthzGrantRevokeMsgType)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_AuthzGrantRevokeMsgsTypes_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_AuthzGrantRevokeMsgsTypes      protoreflect.MessageDescriptor
	fd_AuthzGrantRevokeMsgsTypes_msgs protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_guard_v1_common_proto_init()
	md_AuthzGrantRevokeMsgsTypes = File_mantrachain_guard_v1_common_proto.Messages().ByName("AuthzGrantRevokeMsgsTypes")
	fd_AuthzGrantRevokeMsgsTypes_msgs = md_AuthzGrantRevokeMsgsTypes.Fields().ByName("msgs")
}

var _ protoreflect.Message = (*fastReflection_AuthzGrantRevokeMsgsTypes)(nil)

type fastReflection_AuthzGrantRevokeMsgsTypes AuthzGrantRevokeMsgsTypes

func (x *AuthzGrantRevokeMsgsTypes) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AuthzGrantRevokeMsgsTypes)(x)
}

func (x *AuthzGrantRevokeMsgsTypes) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_guard_v1_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AuthzGrantRevokeMsgsTypes_messageType fastReflection_AuthzGrantRevokeMsgsTypes_messageType
var _ protoreflect.MessageType = fastReflection_AuthzGrantRevokeMsgsTypes_messageType{}

type fastReflection_AuthzGrantRevokeMsgsTypes_messageType struct{}

func (x fastReflection_AuthzGrantRevokeMsgsTypes_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AuthzGrantRevokeMsgsTypes)(nil)
}
func (x fastReflection_AuthzGrantRevokeMsgsTypes_messageType) New() protoreflect.Message {
	return new(fastReflection_AuthzGrantRevokeMsgsTypes)
}
func (x fastReflection_AuthzGrantRevokeMsgsTypes_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AuthzGrantRevokeMsgsTypes
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) Descriptor() protoreflect.MessageDescriptor {
	return md_AuthzGrantRevokeMsgsTypes
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) Type() protoreflect.MessageType {
	return _fastReflection_AuthzGrantRevokeMsgsTypes_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) New() protoreflect.Message {
	return new(fastReflection_AuthzGrantRevokeMsgsTypes)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) Interface() protoreflect.ProtoMessage {
	return (*AuthzGrantRevokeMsgsTypes)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Msgs) != 0 {
		value := protoreflect.ValueOfList(&_AuthzGrantRevokeMsgsTypes_1_list{list: &x.Msgs})
		if !f(fd_AuthzGrantRevokeMsgsTypes_msgs, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes.msgs":
		return len(x.Msgs) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes.msgs":
		x.Msgs = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes.msgs":
		if len(x.Msgs) == 0 {
			return protoreflect.ValueOfList(&_AuthzGrantRevokeMsgsTypes_1_list{})
		}
		listValue := &_AuthzGrantRevokeMsgsTypes_1_list{list: &x.Msgs}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes.msgs":
		lv := value.List()
		clv := lv.(*_AuthzGrantRevokeMsgsTypes_1_list)
		x.Msgs = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes.msgs":
		if x.Msgs == nil {
			x.Msgs = []*AuthzGrantRevokeMsgType{}
		}
		value := &_AuthzGrantRevokeMsgsTypes_1_list{list: &x.Msgs}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes.msgs":
		list := []*AuthzGrantRevokeMsgType{}
		return protoreflect.ValueOfList(&_AuthzGrantRevokeMsgsTypes_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AuthzGrantRevokeMsgsTypes) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AuthzGrantRevokeMsgsTypes)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Msgs) > 0 {
			for _, e := range x.Msgs {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AuthzGrantRevokeMsgsTypes)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Msgs) > 0 {
			for iNdEx := len(x.Msgs) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Msgs[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AuthzGrantRevokeMsgsTypes)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AuthzGrantRevokeMsgsTypes: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AuthzGrantRevokeMsgsTypes: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Msgs", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Msgs = append(x.Msgs, &AuthzGrantRevokeMsgType{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Msgs[len(x.Msgs)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgAccountsPrivileges_1_list)(nil)

type _MsgAccountsPrivileges_1_list struct {
	list *[]string
}

func (x *_MsgAccountsPrivileges_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgAccountsPrivileges_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgAccountsPrivileges_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgAccountsPrivileges_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgAccountsPrivileges_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgAccountsPrivileges at list field Accounts as it is not of Message kind"))
}

func (x *_MsgAccountsPrivileges_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgAccountsPrivileges_1_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgAccountsPrivileges_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgAccountsPrivileges_2_list)(nil)

type _MsgAccountsPrivileges_2_list struct {
	list *[][]byte
}

func (x *_MsgAccountsPrivileges_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgAccountsPrivileges_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_MsgAccountsPrivileges_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgAccountsPrivileges_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgAccountsPrivileges_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgAccountsPrivileges at list field Privileges as it is not of Message kind"))
}

func (x *_MsgAccountsPrivileges_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgAccountsPrivileges_2_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_MsgAccountsPrivileges_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgAccountsPrivileges            protoreflect.MessageDescriptor
	fd_MsgAccountsPrivileges_accounts   protoreflect.FieldDescriptor
	fd_MsgAccountsPrivileges_privileges protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_guard_v1_common_proto_init()
	md_MsgAccountsPrivileges = File_mantrachain_guard_v1_common_proto.Messages().ByName("MsgAccountsPrivileges")
	fd_MsgAccountsPrivileges_accounts = md_MsgAccountsPrivileges.Fields().ByName("accounts")
	fd_MsgAccountsPrivileges_privileges = md_MsgAccountsPrivileges.Fields().ByName("privileges")
}

var _ protoreflect.Message = (*fastReflection_MsgAccountsPrivileges)(nil)

type fastReflection_MsgAccountsPrivileges MsgAccountsPrivileges

func (x *MsgAccountsPrivileges) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAccountsPrivileges)(x)
}

func (x *MsgAccountsPrivileges) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_guard_v1_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAccountsPrivileges_messageType fastReflection_MsgAccountsPrivileges_messageType
var _ protoreflect.MessageType = fastReflection_MsgAccountsPrivileges_messageType{}

type fastReflection_MsgAccountsPrivileges_messageType struct{}

func (x fastReflection_MsgAccountsPrivileges_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAccountsPrivileges)(nil)
}
func (x fastReflection_MsgAccountsPrivileges_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAccountsPrivileges)
}
func (x fastReflection_MsgAccountsPrivileges_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAccountsPrivileges
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAccountsPrivileges) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAccountsPrivileges
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAccountsPrivileges) Type() protoreflect.MessageType {
	return _fastReflection_MsgAccountsPrivileges_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAccountsPrivileges) New() protoreflect.Message {
	return new(fastReflection_MsgAccountsPrivileges)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAccountsPrivileges) Interface() protoreflect.ProtoMessage {
	return (*MsgAccountsPrivileges)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAccountsPrivileges) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Accounts) != 0 {
		value := protoreflect.ValueOfList(&_MsgAccountsPrivileges_1_list{list: &x.Accounts})
		if !f(fd_MsgAccountsPrivileges_accounts, value) {
			return
		}
	}
	if len(x.Privileges) != 0 {
		value := protoreflect.ValueOfList(&_MsgAccountsPrivileges_2_list{list: &x.Privileges})
		if !f(fd_MsgAccountsPrivileges_privileges, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAccountsPrivileges) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccountsPrivileges.accounts":
		return len(x.Accounts) != 0
	case "mantrachain.guard.v1.MsgAccountsPrivileges.privileges":
		return len(x.Privileges) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccountsPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccountsPrivileges does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAccountsPrivileges) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccountsPrivileges.accounts":
		x.Accounts = nil
	case "mantrachain.guard.v1.MsgAccountsPrivileges.privileges":
		x.Privileges = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccountsPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccountsPrivileges does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAccountsPrivileges) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.guard.v1.MsgAccountsPrivileges.accounts":
		if len(x.Accounts) == 0 {
			return protoreflect.ValueOfList(&_MsgAccountsPrivileges_1_list{})
		}
		listValue := &_MsgAccountsPrivileges_1_list{list: &x.Accounts}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.guard.v1.MsgAccountsPrivileges.privileges":
		if len(x.Privileges) == 0 {
			return protoreflect.ValueOfList(&_MsgAccountsPrivileges_2_list{})
		}
		listValue := &_MsgAccountsPrivileges_2_list{list: &x.Privileges}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccountsPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccountsPrivileges does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAccountsPrivileges) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccountsPrivileges.accounts":
		lv := value.List()
		clv := lv.(*_MsgAccountsPrivileges_1_list)
		x.Accounts = *clv.list
	case "mantrachain.guard.v1.MsgAccountsPrivileges.privileges":
		lv := value.List()
		clv := lv.(*_MsgAccountsPrivileges_2_list)
		x.Privileges = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccountsPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccountsPrivileges does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAccountsPrivileges) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccountsPrivileges.accounts":
		if x.Accounts == nil {
			x.Accounts = []string{}
		}
		value := &_MsgAccountsPrivileges_1_list{list: &x.Accounts}
		return protoreflect.ValueOfList(value)
	case "mantrachain.guard.v1.MsgAccountsPrivileges.privileges":
		if x.Privileges == nil {
			x.Privileges = [][]byte{}
		}
		value := &_MsgAccountsPrivileges_2_list{list: &x.Privileges}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccountsPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccountsPrivileges does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAccountsPrivileges) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccountsPrivileges.accounts":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgAccountsPrivileges_1_list{list: &list})
	case "mantrachain.guard.v1.MsgAccountsPrivileges.privileges":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_MsgAccountsPrivileges_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccountsPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccountsPrivileges does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAccountsPrivileges) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.guard.v1.MsgAccountsPrivileges", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAccountsPrivileges) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAccountsPrivileges) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAccountsPrivileges) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAccountsPrivileges) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAccountsPrivileges)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Accounts) > 0 {
			for _, s := range x.Accounts {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Privileges) > 0 {
			for _, b := range x.Privileges {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAccountsPrivileges)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Privileges) > 0 {
			for iNdEx := len(x.Privileges) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Privileges[iNdEx])
				copy(dAtA[i:], x.Privileges[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Privileges[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Accounts) > 0 {
			for iNdEx := len(x.Accounts) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Accounts[iNdEx])
				copy(dAtA[i:], x.Accounts[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Accounts[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAccountsPrivileges)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAccountsPrivileges: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAccountsPrivileges: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Accounts", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Accounts = append(x.Accounts, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Privileges", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Privileges = append(x.Privileges, make([]byte, postIndex-iNdEx))
				copy(x.Privileges[len(x.Privileges)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgAccountsPrivilegesGrouped_1_list)(nil)

type _MsgAccountsPrivilegesGrouped_1_list struct {
	list *[]*MsgAccounts
}

func (x *_MsgAccountsPrivilegesGrouped_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgAccountsPrivilegesGrouped_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgAccountsPrivilegesGrouped_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MsgAccounts)
	(*x.list)[i] = concreteValue
}

func (x *_MsgAccountsPrivilegesGrouped_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MsgAccounts)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgAccountsPrivilegesGrouped_1_list) AppendMutable() protoreflect.Value {
	v := new(MsgAccounts)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgAccountsPrivilegesGrouped_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgAccountsPrivilegesGrouped_1_list) NewElement() protoreflect.Value {
	v := new(MsgAccounts)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgAccountsPrivilegesGrouped_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgAccountsPrivilegesGrouped_2_list)(nil)

type _MsgAccountsPrivilegesGrouped_2_list struct {
	list *[][]byte
}

func (x *_MsgAccountsPrivilegesGrouped_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgAccountsPrivilegesGrouped_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_MsgAccountsPrivilegesGrouped_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgAccountsPrivilegesGrouped_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgAccountsPrivilegesGrouped_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgAccountsPrivilegesGrouped at list field Privileges as it is not of Message kind"))
}

func (x *_MsgAccountsPrivilegesGrouped_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgAccountsPrivilegesGrouped_2_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_MsgAccountsPrivilegesGrouped_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgAccountsPrivilegesGrouped            protoreflect.MessageDescriptor
	fd_MsgAccountsPrivilegesGrouped_accounts   protoreflect.FieldDescriptor
	fd_MsgAccountsPrivilegesGrouped_privileges protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_guard_v1_common_proto_init()
	md_MsgAccountsPrivilegesGrouped = File_mantrachain_guard_v1_common_proto.Messages().ByName("MsgAccountsPrivilegesGrouped")
	fd_MsgAccountsPrivilegesGrouped_accounts = md_MsgAccountsPrivilegesGrouped.Fields().ByName("accounts")
	fd_MsgAccountsPrivilegesGrouped_privileges = md_MsgAccountsPrivilegesGrouped.Fields().ByName("privileges")
}

var _ protoreflect.Message = (*fastReflection_MsgAccountsPrivilegesGrouped)(nil)

type fastReflection_MsgAccountsPrivilegesGrouped MsgAccountsPrivilegesGrouped

func (x *MsgAccountsPrivilegesGrouped) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAccountsPrivilegesGrouped)(x)
}

func (x *MsgAccountsPrivilegesGrouped) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_guard_v1_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAccountsPrivilegesGrouped_messageType fastReflection_MsgAccountsPrivilegesGrouped_messageType
var _ protoreflect.MessageType = fastReflection_MsgAccountsPrivilegesGrouped_messageType{}

type fastReflection_MsgAccountsPrivilegesGrouped_messageType struct{}

func (x fastReflection_MsgAccountsPrivilegesGrouped_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAccountsPrivilegesGrouped)(nil)
}
func (x fastReflection_MsgAccountsPrivilegesGrouped_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAccountsPrivilegesGrouped)
}
func (x fastReflection_MsgAccountsPrivilegesGrouped_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAccountsPrivilegesGrouped
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAccountsPrivilegesGrouped
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) Type() protoreflect.MessageType {
	return _fastReflection_MsgAccountsPrivilegesGrouped_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) New() protoreflect.Message {
	return new(fastReflection_MsgAccountsPrivilegesGrouped)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) Interface() protoreflect.ProtoMessage {
	return (*MsgAccountsPrivilegesGrouped)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Accounts) != 0 {
		value := protoreflect.ValueOfList(&_MsgAccountsPrivilegesGrouped_1_list{list: &x.Accounts})
		if !f(fd_MsgAccountsPrivilegesGrouped_accounts, value) {
			return
		}
	}
	if len(x.Privileges) != 0 {
		value := protoreflect.ValueOfList(&_MsgAccountsPrivilegesGrouped_2_list{list: &x.Privileges})
		if !f(fd_MsgAccountsPrivilegesGrouped_privileges, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccountsPrivilegesGrouped.accounts":
		return len(x.Accounts) != 0
	case "mantrachain.guard.v1.MsgAccountsPrivilegesGrouped.privileges":
		return len(x.Privileges) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccountsPrivilegesGrouped"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccountsPrivilegesGrouped does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccountsPrivilegesGrouped.accounts":
		x.Accounts = nil
	case "mantrachain.guard.v1.MsgAccountsPrivilegesGrouped.privileges":
		x.Privileges = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccountsPrivilegesGrouped"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccountsPrivilegesGrouped does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.guard.v1.MsgAccountsPrivilegesGrouped.accounts":
		if len(x.Accounts) == 0 {
			return protoreflect.ValueOfList(&_MsgAccountsPrivilegesGrouped_1_list{})
		}
		listValue := &_MsgAccountsPrivilegesGrouped_1_list{list: &x.Accounts}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.guard.v1.MsgAccountsPrivilegesGrouped.privileges":
		if len(x.Privileges) == 0 {
			return protoreflect.ValueOfList(&_MsgAccountsPrivilegesGrouped_2_list{})
		}
		listValue := &_MsgAccountsPrivilegesGrouped_2_list{list: &x.Privileges}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccountsPrivilegesGrouped"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccountsPrivilegesGrouped does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccountsPrivilegesGrouped.accounts":
		lv := value.List()
		clv := lv.(*_MsgAccountsPrivilegesGrouped_1_list)
		x.Accounts = *clv.list
	case "mantrachain.guard.v1.MsgAccountsPrivilegesGrouped.privileges":
		lv := value.List()
		clv := lv.(*_MsgAccountsPrivilegesGrouped_2_list)
		x.Privileges = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccountsPrivilegesGrouped"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccountsPrivilegesGrouped does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccountsPrivilegesGrouped.accounts":
		if x.Accounts == nil {
			x.Accounts = []*MsgAccounts{}
		}
		value := &_MsgAccountsPrivilegesGrouped_1_list{list: &x.Accounts}
		return protoreflect.ValueOfList(value)
	case "mantrachain.guard.v1.MsgAccountsPrivilegesGrouped.privileges":
		if x.Privileges == nil {
			x.Privileges = [][]byte{}
		}
		value := &_MsgAccountsPrivilegesGrouped_2_list{list: &x.Privileges}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccountsPrivilegesGrouped"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccountsPrivilegesGrouped does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgAccountsPrivilegesGrouped.accounts":
		list := []*MsgAccounts{}
		return protoreflect.ValueOfList(&_MsgAccountsPrivilegesGrouped_1_list{list: &list})
	case "mantrachain.guard.v1.MsgAccountsPrivilegesGrouped.privileges":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_MsgAccountsPrivilegesGrouped_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgAccountsPrivilegesGrouped"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgAccountsPrivilegesGrouped does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.guard.v1.MsgAccountsPrivilegesGrouped", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAccountsPrivilegesGrouped) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAccountsPrivilegesGrouped)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Accounts) > 0 {
			for _, e := range x.Accounts {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Privileges) > 0 {
			for _, b := range x.Privileges {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAccountsPrivilegesGrouped)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Privileges) > 0 {
			for iNdEx := len(x.Privileges) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Privileges[iNdEx])
				copy(dAtA[i:], x.Privileges[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Privileges[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Accounts) > 0 {
			for iNdEx := len(x.Accounts) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Accounts[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAccountsPrivilegesGrouped)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAccountsPrivilegesGrouped: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAccountsPrivilegesGrouped: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Accounts", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Accounts = append(x.Accounts, &MsgAccounts{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Accounts[len(x.Accounts)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Privileges", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Privileges = append(x.Privileges, make([]byte, postIndex-iNdEx))
				copy(x.Privileges[len(x.Privileges)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgRequiredPrivileges_1_list)(nil)

type _MsgRequiredPrivileges_1_list struct {
	list *[][]byte
}

func (x *_MsgRequiredPrivileges_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgRequiredPrivileges_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_MsgRequiredPrivileges_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgRequiredPrivileges_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgRequiredPrivileges_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgRequiredPrivileges at list field Indexes as it is not of Message kind"))
}

func (x *_MsgRequiredPrivileges_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgRequiredPrivileges_1_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_MsgRequiredPrivileges_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgRequiredPrivileges_2_list)(nil)

type _MsgRequiredPrivileges_2_list struct {
	list *[][]byte
}

func (x *_MsgRequiredPrivileges_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgRequiredPrivileges_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_MsgRequiredPrivileges_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgRequiredPrivileges_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgRequiredPrivileges_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgRequiredPrivileges at list field Privileges as it is not of Message kind"))
}

func (x *_MsgRequiredPrivileges_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgRequiredPrivileges_2_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_MsgRequiredPrivileges_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgRequiredPrivileges            protoreflect.MessageDescriptor
	fd_MsgRequiredPrivileges_indexes    protoreflect.FieldDescriptor
	fd_MsgRequiredPrivileges_privileges protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_guard_v1_common_proto_init()
	md_MsgRequiredPrivileges = File_mantrachain_guard_v1_common_proto.Messages().ByName("MsgRequiredPrivileges")
	fd_MsgRequiredPrivileges_indexes = md_MsgRequiredPrivileges.Fields().ByName("indexes")
	fd_MsgRequiredPrivileges_privileges = md_MsgRequiredPrivileges.Fields().ByName("privileges")
}

var _ protoreflect.Message = (*fastReflection_MsgRequiredPrivileges)(nil)

type fastReflection_MsgRequiredPrivileges MsgRequiredPrivileges

func (x *MsgRequiredPrivileges) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRequiredPrivileges)(x)
}

func (x *MsgRequiredPrivileges) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_guard_v1_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRequiredPrivileges_messageType fastReflection_MsgRequiredPrivileges_messageType
var _ protoreflect.MessageType = fastReflection_MsgRequiredPrivileges_messageType{}

type fastReflection_MsgRequiredPrivileges_messageType struct{}

func (x fastReflection_MsgRequiredPrivileges_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRequiredPrivileges)(nil)
}
func (x fastReflection_MsgRequiredPrivileges_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRequiredPrivileges)
}
func (x fastReflection_MsgRequiredPrivileges_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRequiredPrivileges
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRequiredPrivileges) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRequiredPrivileges
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRequiredPrivileges) Type() protoreflect.MessageType {
	return _fastReflection_MsgRequiredPrivileges_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRequiredPrivileges) New() protoreflect.Message {
	return new(fastReflection_MsgRequiredPrivileges)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRequiredPrivileges) Interface() protoreflect.ProtoMessage {
	return (*MsgRequiredPrivileges)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRequiredPrivileges) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Indexes) != 0 {
		value := protoreflect.ValueOfList(&_MsgRequiredPrivileges_1_list{list: &x.Indexes})
		if !f(fd_MsgRequiredPrivileges_indexes, value) {
			return
		}
	}
	if len(x.Privileges) != 0 {
		value := protoreflect.ValueOfList(&_MsgRequiredPrivileges_2_list{list: &x.Privileges})
		if !f(fd_MsgRequiredPrivileges_privileges, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRequiredPrivileges) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgRequiredPrivileges.indexes":
		return len(x.Indexes) != 0
	case "mantrachain.guard.v1.MsgRequiredPrivileges.privileges":
		return len(x.Privileges) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgRequiredPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgRequiredPrivileges does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequiredPrivileges) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgRequiredPrivileges.indexes":
		x.Indexes = nil
	case "mantrachain.guard.v1.MsgRequiredPrivileges.privileges":
		x.Privileges = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgRequiredPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgRequiredPrivileges does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRequiredPrivileges) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.guard.v1.MsgRequiredPrivileges.indexes":
		if len(x.Indexes) == 0 {
			return protoreflect.ValueOfList(&_MsgRequiredPrivileges_1_list{})
		}
		listValue := &_MsgRequiredPrivileges_1_list{list: &x.Indexes}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.guard.v1.MsgRequiredPrivileges.privileges":
		if len(x.Privileges) == 0 {
			return protoreflect.ValueOfList(&_MsgRequiredPrivileges_2_list{})
		}
		listValue := &_MsgRequiredPrivileges_2_list{list: &x.Privileges}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgRequiredPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgRequiredPrivileges does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequiredPrivileges) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgRequiredPrivileges.indexes":
		lv := value.List()
		clv := lv.(*_MsgRequiredPrivileges_1_list)
		x.Indexes = *clv.list
	case "mantrachain.guard.v1.MsgRequiredPrivileges.privileges":
		lv := value.List()
		clv := lv.(*_MsgRequiredPrivileges_2_list)
		x.Privileges = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgRequiredPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgRequiredPrivileges does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequiredPrivileges) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgRequiredPrivileges.indexes":
		if x.Indexes == nil {
			x.Indexes = [][]byte{}
		}
		value := &_MsgRequiredPrivileges_1_list{list: &x.Indexes}
		return protoreflect.ValueOfList(value)
	case "mantrachain.guard.v1.MsgRequiredPrivileges.privileges":
		if x.Privileges == nil {
			x.Privileges = [][]byte{}
		}
		value := &_MsgRequiredPrivileges_2_list{list: &x.Privileges}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgRequiredPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgRequiredPrivileges does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRequiredPrivileges) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgRequiredPrivileges.indexes":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_MsgRequiredPrivileges_1_list{list: &list})
	case "mantrachain.guard.v1.MsgRequiredPrivileges.privileges":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_MsgRequiredPrivileges_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgRequiredPrivileges"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgRequiredPrivileges does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRequiredPrivileges) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.guard.v1.MsgRequiredPrivileges", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRequiredPrivileges) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequiredPrivileges) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRequiredPrivileges) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRequiredPrivileges) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRequiredPrivileges)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Indexes) > 0 {
			for _, b := range x.Indexes {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Privileges) > 0 {
			for _, b := range x.Privileges {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRequiredPrivileges)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Privileges) > 0 {
			for iNdEx := len(x.Privileges) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Privileges[iNdEx])
				copy(dAtA[i:], x.Privileges[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Privileges[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Indexes) > 0 {
			for iNdEx := len(x.Indexes) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Indexes[iNdEx])
				copy(dAtA[i:], x.Indexes[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Indexes[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRequiredPrivileges)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRequiredPrivileges: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRequiredPrivileges: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Indexes", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Indexes = append(x.Indexes, make([]byte, postIndex-iNdEx))
				copy(x.Indexes[len(x.Indexes)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Privileges", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Privileges = append(x.Privileges, make([]byte, postIndex-iNdEx))
				copy(x.Privileges[len(x.Privileges)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgRequiredPrivilegesGrouped_1_list)(nil)

type _MsgRequiredPrivilegesGrouped_1_list struct {
	list *[]*MsgIndexes
}

func (x *_MsgRequiredPrivilegesGrouped_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgRequiredPrivilegesGrouped_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgRequiredPrivilegesGrouped_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MsgIndexes)
	(*x.list)[i] = concreteValue
}

func (x *_MsgRequiredPrivilegesGrouped_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MsgIndexes)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgRequiredPrivilegesGrouped_1_list) AppendMutable() protoreflect.Value {
	v := new(MsgIndexes)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgRequiredPrivilegesGrouped_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgRequiredPrivilegesGrouped_1_list) NewElement() protoreflect.Value {
	v := new(MsgIndexes)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgRequiredPrivilegesGrouped_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgRequiredPrivilegesGrouped_2_list)(nil)

type _MsgRequiredPrivilegesGrouped_2_list struct {
	list *[][]byte
}

func (x *_MsgRequiredPrivilegesGrouped_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgRequiredPrivilegesGrouped_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_MsgRequiredPrivilegesGrouped_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgRequiredPrivilegesGrouped_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgRequiredPrivilegesGrouped_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgRequiredPrivilegesGrouped at list field Privileges as it is not of Message kind"))
}

func (x *_MsgRequiredPrivilegesGrouped_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgRequiredPrivilegesGrouped_2_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_MsgRequiredPrivilegesGrouped_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgRequiredPrivilegesGrouped            protoreflect.MessageDescriptor
	fd_MsgRequiredPrivilegesGrouped_indexes    protoreflect.FieldDescriptor
	fd_MsgRequiredPrivilegesGrouped_privileges protoreflect.FieldDescriptor
)

func init() {
	file_mantrachain_guard_v1_common_proto_init()
	md_MsgRequiredPrivilegesGrouped = File_mantrachain_guard_v1_common_proto.Messages().ByName("MsgRequiredPrivilegesGrouped")
	fd_MsgRequiredPrivilegesGrouped_indexes = md_MsgRequiredPrivilegesGrouped.Fields().ByName("indexes")
	fd_MsgRequiredPrivilegesGrouped_privileges = md_MsgRequiredPrivilegesGrouped.Fields().ByName("privileges")
}

var _ protoreflect.Message = (*fastReflection_MsgRequiredPrivilegesGrouped)(nil)

type fastReflection_MsgRequiredPrivilegesGrouped MsgRequiredPrivilegesGrouped

func (x *MsgRequiredPrivilegesGrouped) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRequiredPrivilegesGrouped)(x)
}

func (x *MsgRequiredPrivilegesGrouped) slowProtoReflect() protoreflect.Message {
	mi := &file_mantrachain_guard_v1_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRequiredPrivilegesGrouped_messageType fastReflection_MsgRequiredPrivilegesGrouped_messageType
var _ protoreflect.MessageType = fastReflection_MsgRequiredPrivilegesGrouped_messageType{}

type fastReflection_MsgRequiredPrivilegesGrouped_messageType struct{}

func (x fastReflection_MsgRequiredPrivilegesGrouped_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRequiredPrivilegesGrouped)(nil)
}
func (x fastReflection_MsgRequiredPrivilegesGrouped_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRequiredPrivilegesGrouped)
}
func (x fastReflection_MsgRequiredPrivilegesGrouped_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRequiredPrivilegesGrouped
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRequiredPrivilegesGrouped
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) Type() protoreflect.MessageType {
	return _fastReflection_MsgRequiredPrivilegesGrouped_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) New() protoreflect.Message {
	return new(fastReflection_MsgRequiredPrivilegesGrouped)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) Interface() protoreflect.ProtoMessage {
	return (*MsgRequiredPrivilegesGrouped)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Indexes) != 0 {
		value := protoreflect.ValueOfList(&_MsgRequiredPrivilegesGrouped_1_list{list: &x.Indexes})
		if !f(fd_MsgRequiredPrivilegesGrouped_indexes, value) {
			return
		}
	}
	if len(x.Privileges) != 0 {
		value := protoreflect.ValueOfList(&_MsgRequiredPrivilegesGrouped_2_list{list: &x.Privileges})
		if !f(fd_MsgRequiredPrivilegesGrouped_privileges, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgRequiredPrivilegesGrouped.indexes":
		return len(x.Indexes) != 0
	case "mantrachain.guard.v1.MsgRequiredPrivilegesGrouped.privileges":
		return len(x.Privileges) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgRequiredPrivilegesGrouped"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgRequiredPrivilegesGrouped does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgRequiredPrivilegesGrouped.indexes":
		x.Indexes = nil
	case "mantrachain.guard.v1.MsgRequiredPrivilegesGrouped.privileges":
		x.Privileges = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgRequiredPrivilegesGrouped"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgRequiredPrivilegesGrouped does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "mantrachain.guard.v1.MsgRequiredPrivilegesGrouped.indexes":
		if len(x.Indexes) == 0 {
			return protoreflect.ValueOfList(&_MsgRequiredPrivilegesGrouped_1_list{})
		}
		listValue := &_MsgRequiredPrivilegesGrouped_1_list{list: &x.Indexes}
		return protoreflect.ValueOfList(listValue)
	case "mantrachain.guard.v1.MsgRequiredPrivilegesGrouped.privileges":
		if len(x.Privileges) == 0 {
			return protoreflect.ValueOfList(&_MsgRequiredPrivilegesGrouped_2_list{})
		}
		listValue := &_MsgRequiredPrivilegesGrouped_2_list{list: &x.Privileges}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgRequiredPrivilegesGrouped"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgRequiredPrivilegesGrouped does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgRequiredPrivilegesGrouped.indexes":
		lv := value.List()
		clv := lv.(*_MsgRequiredPrivilegesGrouped_1_list)
		x.Indexes = *clv.list
	case "mantrachain.guard.v1.MsgRequiredPrivilegesGrouped.privileges":
		lv := value.List()
		clv := lv.(*_MsgRequiredPrivilegesGrouped_2_list)
		x.Privileges = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgRequiredPrivilegesGrouped"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgRequiredPrivilegesGrouped does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgRequiredPrivilegesGrouped.indexes":
		if x.Indexes == nil {
			x.Indexes = []*MsgIndexes{}
		}
		value := &_MsgRequiredPrivilegesGrouped_1_list{list: &x.Indexes}
		return protoreflect.ValueOfList(value)
	case "mantrachain.guard.v1.MsgRequiredPrivilegesGrouped.privileges":
		if x.Privileges == nil {
			x.Privileges = [][]byte{}
		}
		value := &_MsgRequiredPrivilegesGrouped_2_list{list: &x.Privileges}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgRequiredPrivilegesGrouped"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgRequiredPrivilegesGrouped does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "mantrachain.guard.v1.MsgRequiredPrivilegesGrouped.indexes":
		list := []*MsgIndexes{}
		return protoreflect.ValueOfList(&_MsgRequiredPrivilegesGrouped_1_list{list: &list})
	case "mantrachain.guard.v1.MsgRequiredPrivilegesGrouped.privileges":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_MsgRequiredPrivilegesGrouped_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: mantrachain.guard.v1.MsgRequiredPrivilegesGrouped"))
		}
		panic(fmt.Errorf("message mantrachain.guard.v1.MsgRequiredPrivilegesGrouped does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in mantrachain.guard.v1.MsgRequiredPrivilegesGrouped", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRequiredPrivilegesGrouped) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRequiredPrivilegesGrouped)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Indexes) > 0 {
			for _, e := range x.Indexes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Privileges) > 0 {
			for _, b := range x.Privileges {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRequiredPrivilegesGrouped)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Privileges) > 0 {
			for iNdEx := len(x.Privileges) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Privileges[iNdEx])
				copy(dAtA[i:], x.Privileges[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Privileges[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Indexes) > 0 {
			for iNdEx := len(x.Indexes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Indexes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRequiredPrivilegesGrouped)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRequiredPrivilegesGrouped: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRequiredPrivilegesGrouped: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Indexes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Indexes = append(x.Indexes, &MsgIndexes{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Indexes[len(x.Indexes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Privileges", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Privileges = append(x.Privileges, make([]byte, postIndex-iNdEx))
				copy(x.Privileges[len(x.Privileges)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: mantrachain/guard/v1/common.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WhitelistTransfersAccAddrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index         []byte `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Account       []byte `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	IsWhitelisted bool   `protobuf:"varint,3,opt,name=is_whitelisted,json=isWhitelisted,proto3" json:"is_whitelisted,omitempty"`
}

func (x *WhitelistTransfersAccAddrs) Reset() {
	*x = WhitelistTransfersAccAddrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_guard_v1_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelistTransfersAccAddrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelistTransfersAccAddrs) ProtoMessage() {}

// Deprecated: Use WhitelistTransfersAccAddrs.ProtoReflect.Descriptor instead.
func (*WhitelistTransfersAccAddrs) Descriptor() ([]byte, []int) {
	return file_mantrachain_guard_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *WhitelistTransfersAccAddrs) GetIndex() []byte {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *WhitelistTransfersAccAddrs) GetAccount() []byte {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *WhitelistTransfersAccAddrs) GetIsWhitelisted() bool {
	if x != nil {
		return x.IsWhitelisted
	}
	return false
}

type MsgAccounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []string `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *MsgAccounts) Reset() {
	*x = MsgAccounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_guard_v1_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAccounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAccounts) ProtoMessage() {}

// Deprecated: Use MsgAccounts.ProtoReflect.Descriptor instead.
func (*MsgAccounts) Descriptor() ([]byte, []int) {
	return file_mantrachain_guard_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *MsgAccounts) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type MsgIndexes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indexes [][]byte `protobuf:"bytes,1,rep,name=indexes,proto3" json:"indexes,omitempty"`
}

func (x *MsgIndexes) Reset() {
	*x = MsgIndexes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_guard_v1_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIndexes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIndexes) ProtoMessage() {}

// Deprecated: Use MsgIndexes.ProtoReflect.Descriptor instead.
func (*MsgIndexes) Descriptor() ([]byte, []int) {
	return file_mantrachain_guard_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *MsgIndexes) GetIndexes() [][]byte {
	if x != nil {
		return x.Indexes
	}
	return nil
}

type AccountPrivileges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account    []byte `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Privileges []byte `protobuf:"bytes,2,opt,name=privileges,proto3" json:"privileges,omitempty"`
}

func (x *AccountPrivileges) Reset() {
	*x = AccountPrivileges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_guard_v1_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountPrivileges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountPrivileges) ProtoMessage() {}

// Deprecated: Use AccountPrivileges.ProtoReflect.Descriptor instead.
func (*AccountPrivileges) Descriptor() ([]byte, []int) {
	return file_mantrachain_guard_v1_common_proto_rawDescGZIP(), []int{3}
}

func (x *AccountPrivileges) GetAccount() []byte {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *AccountPrivileges) GetPrivileges() []byte {
	if x != nil {
		return x.Privileges
	}
	return nil
}

type RequiredPrivileges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index      []byte `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Privileges []byte `protobuf:"bytes,2,opt,name=privileges,proto3" json:"privileges,omitempty"`
	Kind       string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *RequiredPrivileges) Reset() {
	*x = RequiredPrivileges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_guard_v1_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequiredPrivileges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequiredPrivileges) ProtoMessage() {}

// Deprecated: Use RequiredPrivileges.ProtoReflect.Descriptor instead.
func (*RequiredPrivileges) Descriptor() ([]byte, []int) {
	return file_mantrachain_guard_v1_common_proto_rawDescGZIP(), []int{4}
}

func (x *RequiredPrivileges) GetIndex() []byte {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *RequiredPrivileges) GetPrivileges() []byte {
	if x != nil {
		return x.Privileges
	}
	return nil
}

func (x *RequiredPrivileges) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type AuthzGrantRevokeMsgType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeUrl string `protobuf:"bytes,1,opt,name=type_url,json=typeUrl,proto3" json:"type_url,omitempty"`
	Grant   bool   `protobuf:"varint,2,opt,name=grant,proto3" json:"grant,omitempty"`
}

func (x *AuthzGrantRevokeMsgType) Reset() {
	*x = AuthzGrantRevokeMsgType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_guard_v1_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthzGrantRevokeMsgType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthzGrantRevokeMsgType) ProtoMessage() {}

// Deprecated: Use AuthzGrantRevokeMsgType.ProtoReflect.Descriptor instead.
func (*AuthzGrantRevokeMsgType) Descriptor() ([]byte, []int) {
	return file_mantrachain_guard_v1_common_proto_rawDescGZIP(), []int{5}
}

func (x *AuthzGrantRevokeMsgType) GetTypeUrl() string {
	if x != nil {
		return x.TypeUrl
	}
	return ""
}

func (x *AuthzGrantRevokeMsgType) GetGrant() bool {
	if x != nil {
		return x.Grant
	}
	return false
}

type AuthzGrantRevokeMsgsTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs []*AuthzGrantRevokeMsgType `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *AuthzGrantRevokeMsgsTypes) Reset() {
	*x = AuthzGrantRevokeMsgsTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_guard_v1_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthzGrantRevokeMsgsTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthzGrantRevokeMsgsTypes) ProtoMessage() {}

// Deprecated: Use AuthzGrantRevokeMsgsTypes.ProtoReflect.Descriptor instead.
func (*AuthzGrantRevokeMsgsTypes) Descriptor() ([]byte, []int) {
	return file_mantrachain_guard_v1_common_proto_rawDescGZIP(), []int{6}
}

func (x *AuthzGrantRevokeMsgsTypes) GetMsgs() []*AuthzGrantRevokeMsgType {
	if x != nil {
		return x.Msgs
	}
	return nil
}

type MsgAccountsPrivileges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts   []string `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Privileges [][]byte `protobuf:"bytes,2,rep,name=privileges,proto3" json:"privileges,omitempty"`
}

func (x *MsgAccountsPrivileges) Reset() {
	*x = MsgAccountsPrivileges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_guard_v1_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAccountsPrivileges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAccountsPrivileges) ProtoMessage() {}

// Deprecated: Use MsgAccountsPrivileges.ProtoReflect.Descriptor instead.
func (*MsgAccountsPrivileges) Descriptor() ([]byte, []int) {
	return file_mantrachain_guard_v1_common_proto_rawDescGZIP(), []int{7}
}

func (x *MsgAccountsPrivileges) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *MsgAccountsPrivileges) GetPrivileges() [][]byte {
	if x != nil {
		return x.Privileges
	}
	return nil
}

type MsgAccountsPrivilegesGrouped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts   []*MsgAccounts `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Privileges [][]byte       `protobuf:"bytes,2,rep,name=privileges,proto3" json:"privileges,omitempty"`
}

func (x *MsgAccountsPrivilegesGrouped) Reset() {
	*x = MsgAccountsPrivilegesGrouped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_guard_v1_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAccountsPrivilegesGrouped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAccountsPrivilegesGrouped) ProtoMessage() {}

// Deprecated: Use MsgAccountsPrivilegesGrouped.ProtoReflect.Descriptor instead.
func (*MsgAccountsPrivilegesGrouped) Descriptor() ([]byte, []int) {
	return file_mantrachain_guard_v1_common_proto_rawDescGZIP(), []int{8}
}

func (x *MsgAccountsPrivilegesGrouped) GetAccounts() []*MsgAccounts {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *MsgAccountsPrivilegesGrouped) GetPrivileges() [][]byte {
	if x != nil {
		return x.Privileges
	}
	return nil
}

type MsgRequiredPrivileges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indexes    [][]byte `protobuf:"bytes,1,rep,name=indexes,proto3" json:"indexes,omitempty"`
	Privileges [][]byte `protobuf:"bytes,2,rep,name=privileges,proto3" json:"privileges,omitempty"`
}

func (x *MsgRequiredPrivileges) Reset() {
	*x = MsgRequiredPrivileges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_guard_v1_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRequiredPrivileges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRequiredPrivileges) ProtoMessage() {}

// Deprecated: Use MsgRequiredPrivileges.ProtoReflect.Descriptor instead.
func (*MsgRequiredPrivileges) Descriptor() ([]byte, []int) {
	return file_mantrachain_guard_v1_common_proto_rawDescGZIP(), []int{9}
}

func (x *MsgRequiredPrivileges) GetIndexes() [][]byte {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *MsgRequiredPrivileges) GetPrivileges() [][]byte {
	if x != nil {
		return x.Privileges
	}
	return nil
}

type MsgRequiredPrivilegesGrouped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indexes    []*MsgIndexes `protobuf:"bytes,1,rep,name=indexes,proto3" json:"indexes,omitempty"`
	Privileges [][]byte      `protobuf:"bytes,2,rep,name=privileges,proto3" json:"privileges,omitempty"`
}

func (x *MsgRequiredPrivilegesGrouped) Reset() {
	*x = MsgRequiredPrivilegesGrouped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantrachain_guard_v1_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRequiredPrivilegesGrouped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRequiredPrivilegesGrouped) ProtoMessage() {}

// Deprecated: Use MsgRequiredPrivilegesGrouped.ProtoReflect.Descriptor instead.
func (*MsgRequiredPrivilegesGrouped) Descriptor() ([]byte, []int) {
	return file_mantrachain_guard_v1_common_proto_rawDescGZIP(), []int{10}
}

func (x *MsgRequiredPrivilegesGrouped) GetIndexes() []*MsgIndexes {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *MsgRequiredPrivilegesGrouped) GetPrivileges() [][]byte {
	if x != nil {
		return x.Privileges
	}
	return nil
}

var File_mantrachain_guard_v1_common_proto protoreflect.FileDescriptor

var file_mantrachain_guard_v1_common_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x1a, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x73, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x32, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x22, 0x43, 0x0a, 0x0b, 0x4d, 0x73,
	0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d,
	0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22,
	0x26, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x18, 0xd2,
	0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73,
	0x22, 0x5e, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x22, 0x4a, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x79, 0x70, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x19,
	0x41, 0x75, 0x74, 0x68, 0x7a, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x4d, 0x73, 0x67, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x04, 0x6d, 0x73, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x7a, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x22, 0x6d, 0x0a, 0x15,
	0x4d, 0x73, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x22, 0x7d, 0x0a, 0x1c, 0x4d,
	0x73, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c,
	0x65, 0x67, 0x65, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x15, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x22, 0x7a, 0x0a,
	0x1c, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x12, 0x3a, 0x0a,
	0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x70,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x42, 0xcc, 0x01, 0xa8, 0xe2, 0x1e, 0x01,
	0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2d, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31,
	0x3b, 0x67, 0x75, 0x61, 0x72, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x47, 0x58, 0xaa, 0x02,
	0x14, 0x4d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x75, 0x61,
	0x72, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x4d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5c, 0x47, 0x75, 0x61, 0x72, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x20, 0x4d,
	0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x47, 0x75, 0x61, 0x72, 0x64,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x16, 0x4d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x47,
	0x75, 0x61, 0x72, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mantrachain_guard_v1_common_proto_rawDescOnce sync.Once
	file_mantrachain_guard_v1_common_proto_rawDescData = file_mantrachain_guard_v1_common_proto_rawDesc
)

func file_mantrachain_guard_v1_common_proto_rawDescGZIP() []byte {
	file_mantrachain_guard_v1_common_proto_rawDescOnce.Do(func() {
		file_mantrachain_guard_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_mantrachain_guard_v1_common_proto_rawDescData)
	})
	return file_mantrachain_guard_v1_common_proto_rawDescData
}

var file_mantrachain_guard_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_mantrachain_guard_v1_common_proto_goTypes = []interface{}{
	(*WhitelistTransfersAccAddrs)(nil),   // 0: mantrachain.guard.v1.WhitelistTransfersAccAddrs
	(*MsgAccounts)(nil),                  // 1: mantrachain.guard.v1.MsgAccounts
	(*MsgIndexes)(nil),                   // 2: mantrachain.guard.v1.MsgIndexes
	(*AccountPrivileges)(nil),            // 3: mantrachain.guard.v1.AccountPrivileges
	(*RequiredPrivileges)(nil),           // 4: mantrachain.guard.v1.RequiredPrivileges
	(*AuthzGrantRevokeMsgType)(nil),      // 5: mantrachain.guard.v1.AuthzGrantRevokeMsgType
	(*AuthzGrantRevokeMsgsTypes)(nil),    // 6: mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes
	(*MsgAccountsPrivileges)(nil),        // 7: mantrachain.guard.v1.MsgAccountsPrivileges
	(*MsgAccountsPrivilegesGrouped)(nil), // 8: mantrachain.guard.v1.MsgAccountsPrivilegesGrouped
	(*MsgRequiredPrivileges)(nil),        // 9: mantrachain.guard.v1.MsgRequiredPrivileges
	(*MsgRequiredPrivilegesGrouped)(nil), // 10: mantrachain.guard.v1.MsgRequiredPrivilegesGrouped
}
var file_mantrachain_guard_v1_common_proto_depIdxs = []int32{
	5, // 0: mantrachain.guard.v1.AuthzGrantRevokeMsgsTypes.msgs:type_name -> mantrachain.guard.v1.AuthzGrantRevokeMsgType
	1, // 1: mantrachain.guard.v1.MsgAccountsPrivilegesGrouped.accounts:type_name -> mantrachain.guard.v1.MsgAccounts
	2, // 2: mantrachain.guard.v1.MsgRequiredPrivilegesGrouped.indexes:type_name -> mantrachain.guard.v1.MsgIndexes
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_mantrachain_guard_v1_common_proto_init() }
func file_mantrachain_guard_v1_common_proto_init() {
	if File_mantrachain_guard_v1_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mantrachain_guard_v1_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelistTransfersAccAddrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_guard_v1_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAccounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_guard_v1_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIndexes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_guard_v1_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountPrivileges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_guard_v1_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequiredPrivileges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_guard_v1_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthzGrantRevokeMsgType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_guard_v1_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthzGrantRevokeMsgsTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_guard_v1_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAccountsPrivileges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_guard_v1_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAccountsPrivilegesGrouped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_guard_v1_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRequiredPrivileges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantrachain_guard_v1_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRequiredPrivilegesGrouped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mantrachain_guard_v1_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mantrachain_guard_v1_common_proto_goTypes,
		DependencyIndexes: file_mantrachain_guard_v1_common_proto_depIdxs,
		MessageInfos:      file_mantrachain_guard_v1_common_proto_msgTypes,
	}.Build()
	File_mantrachain_guard_v1_common_proto = out.File
	file_mantrachain_guard_v1_common_proto_rawDesc = nil
	file_mantrachain_guard_v1_common_proto_goTypes = nil
	file_mantrachain_guard_v1_common_proto_depIdxs = nil
}
