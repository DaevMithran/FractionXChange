syntax = "proto3";
package LimeChain.mantrachain.mdb.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/LimeChain/mantrachain/x/mdb/types";
option (gogoproto.equal_all) = true;

message Nft {
  bytes index = 1 [(gogoproto.moretags) = "yaml:\"index\""]; 
  string title = 2 [(gogoproto.moretags) = "yaml:\"title\""]; 
  repeated NftImage images = 3 [(gogoproto.moretags) = "yaml:\"images\""];
  string url = 4 [(gogoproto.moretags) = "yaml:\"url\""];
  string description = 5 [(gogoproto.moretags) = "yaml:\"description\""];
  repeated NftLink links = 6 [(gogoproto.moretags) = "yaml:\"links\""];
  repeated NftAttribute attributes = 7 [(gogoproto.moretags) = "yaml:\"attributes\""];
  bytes creator = 8 [
      (gogoproto.moretags) = "yaml:\"creator\"",
      (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"
  ];
  string collection_id = 9 [(gogoproto.moretags) = "yaml:\"collection_id\""]; 
  bytes collection_index = 10 [(gogoproto.moretags) = "yaml:\"collection_index\""]; 
}

message NftAttribute {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters)  = false;
  
  string type = 1;
  string value = 2;
  string sub_value = 3;
}

message NftImage {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters)  = false;
  
  string type = 1;
  string url = 2;
}

message NftLink {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters)  = false;

  string type = 1;
  string url = 2;
}

message ApprovedAddresses {
    option (gogoproto.equal) = true;
    
    map<string, ApprovedAddressesData> approvedAddresses = 1;
}

message ApprovedAddressesData {
    option (gogoproto.equal) = true;

    map<string, bool> approvedAddressesData = 1;
}

