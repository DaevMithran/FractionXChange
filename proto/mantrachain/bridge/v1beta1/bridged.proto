syntax = "proto3";
package mantrachain.bridge.v1beta1;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/MANTRA-Finance/mantrachain/x/bridge/types";

// Bridged
message Bridged {
  bytes index = 1;
  string eth_tx_hash = 2;
  string receiver = 3;
  cosmos.base.v1beta1.Coin amount = 4;
}

// Input
message Input {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated cosmos.base.v1beta1.Coin coins = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// Output models transaction outputs.
message Output {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated cosmos.base.v1beta1.Coin coins = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}
