syntax = "proto3";
package mantrachain.vault.v1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/LimeChain/mantrachain/x/vault/types";
option (gogoproto.equal_all) = true;

message Epoch {
  bytes index = 1 [(gogoproto.moretags) = "yaml:\"index\""]; 
  int64 id = 2 [(gogoproto.moretags) = "yaml:\"id\""]; 
  int64 prev_epoch_block = 3 [(gogoproto.moretags) = "yaml:\"prev_epoch_block\""]; 
  int64 next_epoch_block = 4 [(gogoproto.moretags) = "yaml:\"next_epoch_block\""]; 
  int64 block_start = 5 [(gogoproto.moretags) = "yaml:\"block_start\""]; 
  int64 block_end = 6 [(gogoproto.moretags) = "yaml:\"block_end\""];  
  string staked = 7 [
    (gogoproto.moretags) = "yaml:\"staked\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ]; 
  repeated cosmos.base.v1beta1.Coin rewards = 8 [
    (gogoproto.moretags) = "yaml:\"rewards\"",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable) = false
  ]; 
  int64 start_at = 9 [
      (gogoproto.moretags) = "yaml:\"start_at\""
  ];
  int64 end_at = 10 [
      (gogoproto.moretags) = "yaml:\"end_at\""
  ];
  string staking_chain = 11 [(gogoproto.moretags) = "yaml:\"staking_chain\""];
  string staking_validator = 12 [(gogoproto.moretags) = "yaml:\"staking_validator\""];
}

message LastEpochBlock {
  int64 block_height = 1 [(gogoproto.moretags) = "yaml:\"block_height\""]; 
  string creator = 2 [(gogoproto.moretags) = "yaml:\"creator\""];
  string staking_chain = 3 [(gogoproto.moretags) = "yaml:\"staking_chain\""];
  string staking_validator = 4 [(gogoproto.moretags) = "yaml:\"staking_validator\""];
}
