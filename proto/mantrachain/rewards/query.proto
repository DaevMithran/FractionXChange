syntax = "proto3";

package mantrachain.rewards;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/querypagination.proto";
import "mantrachain/rewardsparams.proto";
import "mantrachain/rewards/snapshot.proto";

option go_package = "github.com/MANTRA-Finance/mantrachain/x/rewards/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/MANTRA-Finance/mantrachain/rewardsparams";
  
  }
  
  // Queries a list of Snapshot items.
  rpc Snapshot    (QueryGetSnapshotRequest) returns (QueryGetSnapshotResponse) {
    option (google.api.http).get = "/MANTRA-Finance/mantrachain/rewards/snapshot/{id}";
  
  }
  rpc SnapshotAll (QueryAllSnapshotRequest) returns (QueryAllSnapshotResponse) {
    option (google.api.http).get = "/MANTRA-Finance/mantrachain/rewards/snapshot";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetSnapshotRequest {
  uint64 id = 1;
}

message QueryGetSnapshotResponse {
  Snapshot Snapshot = 1 [(gogoproto.nullable) = false];
}

message QueryAllSnapshotRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSnapshotResponse {
  repeated Snapshot                               Snapshot   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

