syntax = "proto3";

package mantrachain.rewards.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "mantrachain/rewards/v1beta1/params.proto";
import "mantrachain/rewards/v1beta1/snapshot.proto";
import "mantrachain/rewards/v1beta1/provider.proto";

option go_package = "github.com/MANTRA-Finance/mantrachain/x/rewards/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/params";

  }
  
  // Queries a list of Snapshot items.
  rpc Snapshot    (QueryGetSnapshotRequest) returns (QueryGetSnapshotResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/snapshot/{pairId}/{id}";
  
  }
  rpc SnapshotAll (QueryAllSnapshotRequest) returns (QueryAllSnapshotResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/snapshot/{pairId}";

  }
  
  // Queries a list of Provider pairs ids.
  rpc Provider (QueryGetProviderRequest) returns (QueryGetProviderResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/provider/{provider}";
  }
  rpc ProviderPairs (QueryGetProviderPairsRequest) returns (QueryGetProviderPairsResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/provider-pairs/{provider}";
  }
  rpc ProviderAll (QueryAllProviderRequest) returns (QueryAllProviderResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/provider";
  }
  
  // Queries a list of Claim items.
  rpc Rewards (QueryGetRewardsRequest) returns (QueryGetRewardsResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/rewards/{provider}/{pairId}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetSnapshotRequest {
  uint64 pairId = 1;
  uint64 id = 2;
}

message QueryGetSnapshotResponse {
  Snapshot Snapshot = 1 [(gogoproto.nullable) = false];
}

message QueryAllSnapshotRequest {
  uint64 pairId = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllSnapshotResponse {
  repeated Snapshot                               Snapshot   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetProviderPairsRequest {
  string provider = 1;
}

message QueryGetProviderPairsResponse {
  string provider = 1;
  repeated uint64 pairsIds = 2 [(gogoproto.nullable) = false];
}

message QueryGetProviderRequest {
  string provider = 1;
}

message QueryGetProviderResponse {
  Provider provider = 1 [(gogoproto.nullable) = false];
}

message QueryAllProviderRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllProviderResponse {
  repeated Provider                               provider   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetRewardsRequest {
  string provider = 1;
  uint64 pairId = 2;
}

message QueryGetRewardsResponse {
  uint64 pairId = 1;
  repeated cosmos.base.v1beta1.Coin rewards = 2;
}

