syntax = "proto3";
package mantrachain.rewards.v1beta1;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "mantrachain/rewards/v1beta1/params.proto";
import "mantrachain/rewards/v1beta1/snapshot.proto";
import "mantrachain/rewards/v1beta1/provider.proto";

option go_package = "github.com/MANTRA-Finance/mantrachain/x/rewards/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/params";
  }

  // Queries a list of Snapshot items.
  rpc QuerySnapshot    (QueryGetSnapshotRequest) returns (QueryGetSnapshotResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/snapshot/{pair_id}/{id}";
  }
  // QuerySnapshotAll
  rpc QuerySnapshotAll (QueryAllSnapshotRequest) returns (QueryAllSnapshotResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/snapshot/{pair_id}";
  }
  
  // Queries a list of Provider pairs ids.
  rpc QueryProvider (QueryGetProviderRequest) returns (QueryGetProviderResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/provider/{provider}";
  }
  // QueryProviderPairs
  rpc QueryProviderPairs (QueryGetProviderPairsRequest) returns (QueryGetProviderPairsResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/provider-pairs/{provider}";
  }
  // QueryProviderAll
  rpc QueryProviderAll (QueryAllProviderRequest) returns (QueryAllProviderResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/provider";
  }
  
  // Queries a list of Claim items.
  rpc QueryRewards (QueryGetRewardsRequest) returns (QueryGetRewardsResponse) {
    option (google.api.http).get = "/mantrachain/rewards/v1beta1/rewards/{provider}/{pair_id}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryGetSnapshotRequest
message QueryGetSnapshotRequest {
  uint64 pair_id = 1;
  uint64 id = 2;
}

// QueryGetSnapshotResponse
message QueryGetSnapshotResponse {
  Snapshot snapshot = 1 [(gogoproto.nullable) = false];
}

// QueryAllSnapshotRequest
message QueryAllSnapshotRequest {
  uint64 pair_id = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryAllSnapshotResponse
message QueryAllSnapshotResponse {
  repeated Snapshot                               snapshot   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryGetProviderPairsRequest
message QueryGetProviderPairsRequest {
  string provider = 1;
}

// QueryGetProviderPairsResponse
message QueryGetProviderPairsResponse {
  string provider = 1;
  repeated uint64 pairsIds = 2 [(gogoproto.nullable) = false];
}

// QueryGetProviderRequest
message QueryGetProviderRequest {
  string provider = 1;
}

// QueryGetProviderResponse
message QueryGetProviderResponse {
  Provider provider = 1 [(gogoproto.nullable) = false];
}

// QueryAllProviderRequest
message QueryAllProviderRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAllProviderResponse
message QueryAllProviderResponse {
  repeated Provider                               provider   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryGetRewardsRequest
message QueryGetRewardsRequest {
  string provider = 1;
  uint64 pair_id = 2;
}

// QueryGetRewardsResponse
message QueryGetRewardsResponse {
  uint64 pair_id = 1;
  repeated cosmos.base.v1beta1.Coin rewards = 2;
}
