syntax = "proto3";
package mantrachain.marketmaker.v1beta1;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "mantrachain/marketmaker/v1beta1/params.proto";
import "mantrachain/marketmaker/v1beta1/marketmaker.proto";

option go_package = "github.com/MANTRA-Finance/mantrachain/x/marketmaker/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mantrachain/marketmaker/v1beta1/params";
  }

  // MarketMakers returns all market makers.
  rpc MarketMakers(QueryMarketMakersRequest) returns (QueryMarketMakersResponse) {
    option (google.api.http).get = "/mantrachain/marketmaker/v1beta1/marketmakers";
  }

  // Incentive returns a specific incentive.
  rpc Incentive(QueryIncentiveRequest) returns (QueryIncentiveResponse) {
    option (google.api.http).get = "/mantrachain/marketmaker/v1beta1/incentive/{address}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryMarketMakersRequest is the request type for the Query/MarketMakers RPC method.
message QueryMarketMakersRequest {
  string                                address    = 1;
  uint64                                pair_id    = 2;
  string                                eligible   = 3;
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

// QueryMarketMakersResponse is the response type for the Query/MarketMakers RPC method.
message QueryMarketMakersResponse {
  repeated MarketMaker marketmakers = 1 [(gogoproto.nullable) = false];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryIncentiveRequest is the request type for the Query/Incentive RPC method.
message QueryIncentiveRequest {
  string address = 1;
}

// QueryIncentiveResponse is the response type for the Query/Incentive RPC method.
message QueryIncentiveResponse {
  Incentive incentive = 1 [(gogoproto.nullable) = false];
}
