syntax = "proto3";
package mantrachain.airdrop.v1beta1;

import "amino/amino.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "mantrachain/airdrop/v1beta1/campaign.proto";
import "mantrachain/airdrop/v1beta1/params.proto";

option go_package = "github.com/MANTRA-Finance/mantrachain/x/airdrop/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mantrachain/airdrop/v1beta1/params";
  }

  // Queries a list of Campaign items.
  rpc Campaign(QueryGetCampaignRequest) returns (QueryGetCampaignResponse) {
    option (google.api.http).get = "/mantrachain/airdrop/v1beta1/campaign/{id}";
  }

  // Queries a list of Campaign items.
  rpc CampaignAll(QueryAllCampaignRequest) returns (QueryAllCampaignResponse) {
    option (google.api.http).get = "/mantrachain/airdrop/v1beta1/campaign";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryGetCampaignRequest
message QueryGetCampaignRequest {
  uint64 id = 1;
}

// QueryGetCampaignResponse
message QueryGetCampaignResponse {
  Campaign campaign = 1 [(gogoproto.nullable) = false];
}

// QueryAllCampaignRequest
message QueryAllCampaignRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAllCampaignResponse
message QueryAllCampaignResponse {
  repeated Campaign campaign = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
