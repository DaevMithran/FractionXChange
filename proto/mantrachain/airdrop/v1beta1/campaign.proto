syntax = "proto3";
package mantrachain.airdrop.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/MANTRA-Finance/mantrachain/x/airdrop/types";
option (gogoproto.equal_all) = true;

// Campaign is a struct that contains all the metadata of an airdrop campaign
message Campaign {
  bytes index = 1;
  uint64 id = 2;
  string name = 3;
  string description = 4;
  google.protobuf.Timestamp start_time = 5
      [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];
  google.protobuf.Timestamp end_time = 6
      [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];
  bytes mt_root = 7;
  repeated cosmos.base.v1beta1.Coin amounts = 8 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  bool is_paused = 9;
  bool is_terminated = 10;
  string campaign_address = 11
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string creator = 12 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// Claimed is a struct that contains all the metadata of a claim
message Claimed {
  bytes index = 1;
  uint64 campaign_id = 2;
  string address = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  google.protobuf.Timestamp claimed_time = 4
      [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];
  repeated cosmos.base.v1beta1.Coin amounts = 5 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
}