syntax = "proto3";

package mantrachain.guard.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "mantrachain/guard/v1/params.proto";

// this line is used by starport scaffolding # 1

option go_package = "github.com/LimeChain/mantrachain/x/guard/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mantrachain/guard/v1/params";
  }

  // Queries a AccountPrivileges by index.
  rpc AccountPrivileges(QueryGetAccountPrivilegesRequest) returns (QueryGetAccountPrivilegesResponse) {
    option (google.api.http).get = "/mantrachain/guard/v1/account_privileges/{account}";
  }

  // Queries a list of AccountPrivileges items.
  rpc AccountPrivilegesAll(QueryAllAccountPrivilegesRequest) returns (QueryAllAccountPrivilegesResponse) {
    option (google.api.http).get = "/mantrachain/guard/v1/account_privileges";
  }

  // Queries a GuardTransferCoins by index.
  rpc GuardTransferCoins(QueryGetGuardTransferCoinsRequest) returns (QueryGetGuardTransferCoinsResponse) {
    option (google.api.http).get = "/mantrachain/guard/v1/guard_transfer_coins";
  }

  // Queries a list of RequiredPrivileges items.
  rpc RequiredPrivileges(QueryGetRequiredPrivilegesRequest) returns (QueryGetRequiredPrivilegesResponse) {
    option (google.api.http).get = "/LimeChain/mantrachain/guard/required_privileges/{index}";
  }
  rpc RequiredPrivilegesAll(QueryAllRequiredPrivilegesRequest) returns (QueryAllRequiredPrivilegesResponse) {
    option (google.api.http).get = "/LimeChain/mantrachain/guard/required_privileges";
  }

  // this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetAccountPrivilegesRequest {
  string account = 1;
}

message QueryGetAccountPrivilegesResponse {
  string account = 1;
  bytes privileges = 2;
}

message QueryAllAccountPrivilegesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAccountPrivilegesResponse {
  repeated string accounts = 1;
  repeated bytes privileges = 2;
  cosmos.base.query.v1beta1.PageResponse pagination = 3;
}

message QueryGetGuardTransferCoinsRequest {}

message QueryGetGuardTransferCoinsResponse {
  bool guard_transfer_coins = 1;
}

message QueryGetRequiredPrivilegesRequest {
  bytes index = 1;
  string kind = 2;
}

message QueryGetRequiredPrivilegesResponse {
  bytes index = 1;
  bytes privileges = 2;
  string kind = 3;
}

message QueryAllRequiredPrivilegesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  string kind = 2;
}

message QueryAllRequiredPrivilegesResponse {
  repeated bytes indexes = 1;
  repeated bytes privileges = 2;
  string kind = 3;
  cosmos.base.query.v1beta1.PageResponse pagination = 4;
}

// this line is used by starport scaffolding # 3
