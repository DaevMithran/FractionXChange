syntax = "proto3";

package mantrachain.guard.v1;

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "mantrachain/guard/v1/common.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/LimeChain/mantrachain/x/guard/types";

// Msg defines the Msg service.
service Msg {
  rpc UpdateAccountPrivileges(MsgUpdateAccountPrivileges) returns (MsgUpdateAccountPrivilegesResponse);
  rpc UpdateAccountPrivilegesBatch(MsgUpdateAccountPrivilegesBatch) returns (MsgUpdateAccountPrivilegesBatchResponse);
  rpc UpdateAccountPrivilegesGroupedBatch(MsgUpdateAccountPrivilegesGroupedBatch) returns (MsgUpdateAccountPrivilegesGroupedBatchResponse);
  rpc UpdateGuardTransferCoins(MsgUpdateGuardTransferCoins) returns (MsgUpdateGuardTransferCoinsResponse);
  rpc UpdateRequiredPrivileges(MsgUpdateRequiredPrivileges) returns (MsgUpdateRequiredPrivilegesResponse);
  rpc UpdateRequiredPrivilegesBatch(MsgUpdateRequiredPrivilegesBatch) returns (MsgUpdateRequiredPrivilegesBatchResponse);
  rpc UpdateRequiredPrivilegesGroupedBatch(MsgUpdateRequiredPrivilegesGroupedBatch) returns (MsgUpdateRequiredPrivilegesGroupedBatchResponse);

  // this line is used by starport scaffolding # proto/tx/rpc}
}

message MsgAccountsPrivileges {
  repeated string accounts = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated bytes privileges = 2;
}

message MsgAccountsPrivilegesGrouped {
  repeated MsgAccounts accounts = 1;
  repeated bytes privileges = 2;
}

message MsgUpdateAccountPrivileges {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string account = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  bytes privileges = 3;
}

message MsgUpdateAccountPrivilegesResponse {}

message MsgUpdateAccountPrivilegesBatch {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  MsgAccountsPrivileges accounts_privileges = 2;
}

message MsgUpdateAccountPrivilegesBatchResponse {}

message MsgUpdateAccountPrivilegesGroupedBatch {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  MsgAccountsPrivilegesGrouped accounts_privileges_grouped = 2;
}

message MsgUpdateAccountPrivilegesGroupedBatchResponse {}

message MsgUpdateGuardTransferCoins {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  bool enabled = 2;
}

message MsgUpdateGuardTransferCoinsResponse {}

message MsgRequiredPrivilegesList {
  repeated bytes indexes = 1;
  repeated bytes privileges = 2;
}

message MsgRequiredPrivilegesListGrouped {
  repeated MsgIndexes indexes = 1;
  repeated bytes privileges = 2;
}

message MsgUpdateRequiredPrivileges {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  bytes index = 2;
  bytes privileges = 3;
  string kind = 4;
}

message MsgUpdateRequiredPrivilegesResponse {}

message MsgUpdateRequiredPrivilegesBatch {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  MsgRequiredPrivilegesList required_privileges_list = 2;
  string kind = 4;
}

message MsgUpdateRequiredPrivilegesBatchResponse {}

message MsgUpdateRequiredPrivilegesGroupedBatch {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  MsgRequiredPrivilegesListGrouped required_privileges_list_grouped = 2;
  string kind = 4;
}

message MsgUpdateRequiredPrivilegesGroupedBatchResponse {}

// this line is used by starport scaffolding # proto/tx/message
