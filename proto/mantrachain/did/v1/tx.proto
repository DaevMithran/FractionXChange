syntax = "proto3";
package mantrachain.did.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "mantrachain/did/v1/params.proto";
import "mantrachain/did/v1/did.proto";

option go_package = "github.com/MANTRA-Finance/mantrachain/x/did/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // CreateDidDocument defines a method for creating a new identity.
  rpc CreateDidDocument(MsgCreateDidDocument)
      returns (MsgCreateDidDocumentResponse);
  // UpdateDidDocument defines a method for updating an identity.
  rpc UpdateDidDocument(MsgUpdateDidDocument)
      returns (MsgUpdateDidDocumentResponse);

  // AddVerificationMethod adds a new verification method
  rpc AddVerification(MsgAddVerification) returns (MsgAddVerificationResponse);
  // RevokeVerification remove the verification method and all associated
  // verification Relations
  rpc RevokeVerification(MsgRevokeVerification)
      returns (MsgRevokeVerificationResponse);
  // SetVerificationRelationships overwrite current verification relationships
  rpc SetVerificationRelationships(MsgSetVerificationRelationships)
      returns (MsgSetVerificationRelationshipsResponse);

  // AddService add a new service
  rpc AddService(MsgAddService) returns (MsgAddServiceResponse);
  // DeleteService delete an existing service
  rpc DeleteService(MsgDeleteService) returns (MsgDeleteServiceResponse);

  // AddService add a new service
  rpc AddController(MsgAddController) returns (MsgAddControllerResponse);
  // DeleteService delete an existing service
  rpc DeleteController(MsgDeleteController)
      returns (MsgDeleteControllerResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "mantrachain/x/did/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// Verification is a message that allows to assign a verification method
// to one or more verification relationships
message Verification {
  // verificationRelationships defines which relationships
  // are allowed to use the verification method
  repeated string relationships =
      1; // relationships that the method is allowed into.
  VerificationMethod method = 2; // public key associated with the did document.
  repeated string context = 3;   // additional contexts (json ld schemas)
}

// -------------------------------
// DID
// -------------------------------

// MsgCreateDidDocument defines a SDK message for creating a new did.
message MsgCreateDidDocument {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "mantrachain/x/did/MsgCreateDidDocument";

  string id = 1;                   // the did
  repeated string controllers = 2; // the list of controller DIDs
  repeated Verification verifications =
      3; // the list of verification methods and relationships
  repeated Service services = 4; // the list of services
  string signer = 5 [
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ]; // address of the account signing the message
}

// MsgCreateDidDocumentResponse
message MsgCreateDidDocumentResponse {}

// MsgUpdateDidDocument replace an existing did document with a new version
message MsgUpdateDidDocument {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "mantrachain/x/did/MsgUpdateDidDocument";

  DidDocument doc = 1; // the did document to replace
  string signer = 2 [
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ]; // address of the account signing the message
}

// MsgUpdateDidDocumentResponse
message MsgUpdateDidDocumentResponse {}

// -------------------------------
// Verification methods / relations
// -------------------------------

// MsgAddVerification
message MsgAddVerification {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "mantrachain/x/did/MsgAddVerification";

  string id = 1;                 // the did
  Verification verification = 2; // the verification to add
  string signer = 3 [
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ]; // address of the account signing the message
}

// MsgAddVerificationResponse
message MsgAddVerificationResponse {}

// MsgSetVerificationRelationships
message MsgSetVerificationRelationships {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "mantrachain/x/did/MsgSetVerificationRelationships";

  string id = 1;                     // the did
  string method_id = 2;              // the verification method id
  repeated string relationships = 3; // the list of relationships to set
  string signer = 4 [
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ]; // address of the account signing the message
}

// MsgSetVerificationRelationshipsResponse
message MsgSetVerificationRelationshipsResponse {}

// MsgRevokeVerification
message MsgRevokeVerification {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "mantrachain/x/did/MsgRevokeVerification";

  string id = 1;        // the did
  string method_id = 2; // the verification method id
  string signer = 3 [
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ]; // address of the account signing the message
}

// MsgRevokeVerificationResponse
message MsgRevokeVerificationResponse {}

// -------------------------------
// Services
// -------------------------------

// MsgAddService
message MsgAddService {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "mantrachain/x/did/MsgAddService";

  string id = 1;            // the did
  Service service_data = 2; // the service data to add
  string signer = 3 [
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ]; // address of the account signing the message
}

// MsgAddServiceResponse
message MsgAddServiceResponse {}

// MsgDeleteService
message MsgDeleteService {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "mantrachain/x/did/MsgDeleteService";

  string id = 1;         // the did
  string service_id = 2; // the service id
  string signer = 3 [
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ]; // address of the account signing the message
}

// MsgDeleteServiceResponse
message MsgDeleteServiceResponse {}

// -------------------------------
// Controllers
// -------------------------------

// MsgAddController
message MsgAddController {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "mantrachain/x/did/MsgAddController";

  string id = 1; // the did of the document
  string controller_did =
      2; // the did to add as a controller of the did document
  string signer = 3 [
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ]; // address of the account signing the message
}

// MsgAddControllerResponse
message MsgAddControllerResponse {}

// MsgDeleteController
message MsgDeleteController {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "mantrachain/x/did/MsgDeleteController";

  string id = 1; // the did of the document
  string controller_did =
      2; // the did to remove from the list of controllers of the did document
  string signer = 3 [
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ]; // address of the account signing the message
}

// MsgDeleteControllerResponse
message MsgDeleteControllerResponse {}
