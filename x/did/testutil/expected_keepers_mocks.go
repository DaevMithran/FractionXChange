// Code generated by MockGen. DO NOT EDIT.
// Source: x/did/types/expected_keepers.go

// Package testutil is a generated GoMock package.
package testutil

import (
	reflect "reflect"

	types "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockGuardKeeper is a mock of GuardKeeper interface.
type MockGuardKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockGuardKeeperMockRecorder
}

// MockGuardKeeperMockRecorder is the mock recorder for MockGuardKeeper.
type MockGuardKeeperMockRecorder struct {
	mock *MockGuardKeeper
}

// NewMockGuardKeeper creates a new mock instance.
func NewMockGuardKeeper(ctrl *gomock.Controller) *MockGuardKeeper {
	mock := &MockGuardKeeper{ctrl: ctrl}
	mock.recorder = &MockGuardKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGuardKeeper) EXPECT() *MockGuardKeeperMockRecorder {
	return m.recorder
}

// CheckIsAdmin mocks base method.
func (m *MockGuardKeeper) CheckIsAdmin(ctx types.Context, address string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckIsAdmin", ctx, address)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckIsAdmin indicates an expected call of CheckIsAdmin.
func (mr *MockGuardKeeperMockRecorder) CheckIsAdmin(ctx, address interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckIsAdmin", reflect.TypeOf((*MockGuardKeeper)(nil).CheckIsAdmin), ctx, address)
}
