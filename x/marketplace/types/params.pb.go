// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: marketplace/v1/params.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Params defines the parameters for the module.
type Params struct {
	ValidMarketplaceId                                  string `protobuf:"bytes,1,opt,name=valid_marketplace_id,json=validMarketplaceId,proto3" json:"valid_marketplace_id,omitempty"`
	ValidMarketplaceMetadataDescriptionMaxLength        int32  `protobuf:"varint,2,opt,name=valid_marketplace_metadata_description_max_length,json=validMarketplaceMetadataDescriptionMaxLength,proto3" json:"valid_marketplace_metadata_description_max_length,omitempty"`
	ValidMarketplaceMetadataNameMaxLength               int32  `protobuf:"varint,3,opt,name=valid_marketplace_metadata_name_max_length,json=validMarketplaceMetadataNameMaxLength,proto3" json:"valid_marketplace_metadata_name_max_length,omitempty"`
	ValidNftsEarningsOnSaleMaxCount                     int32  `protobuf:"varint,4,opt,name=valid_nfts_earnings_on_sale_max_count,json=validNftsEarningsOnSaleMaxCount,proto3" json:"valid_nfts_earnings_on_sale_max_count,omitempty"`
	ValidNftsEarningsOnYieldRewardMaxCount              int32  `protobuf:"varint,5,opt,name=valid_nfts_earnings_on_yield_reward_max_count,json=validNftsEarningsOnYieldRewardMaxCount,proto3" json:"valid_nfts_earnings_on_yield_reward_max_count,omitempty"`
	ValidMarketplaceMetadataImagesMaxCount              int32  `protobuf:"varint,6,opt,name=valid_marketplace_metadata_images_max_count,json=validMarketplaceMetadataImagesMaxCount,proto3" json:"valid_marketplace_metadata_images_max_count,omitempty"`
	ValidMarketplaceMetadataImagesTypeMaxLength         int32  `protobuf:"varint,7,opt,name=valid_marketplace_metadata_images_type_max_length,json=validMarketplaceMetadataImagesTypeMaxLength,proto3" json:"valid_marketplace_metadata_images_type_max_length,omitempty"`
	ValidMarketplaceMetadataLinksMaxCount               int32  `protobuf:"varint,8,opt,name=valid_marketplace_metadata_links_max_count,json=validMarketplaceMetadataLinksMaxCount,proto3" json:"valid_marketplace_metadata_links_max_count,omitempty"`
	ValidMarketplaceMetadataLinksTypeMaxLength          int32  `protobuf:"varint,9,opt,name=valid_marketplace_metadata_links_type_max_length,json=validMarketplaceMetadataLinksTypeMaxLength,proto3" json:"valid_marketplace_metadata_links_type_max_length,omitempty"`
	ValidMarketplaceMetadataOptionsMaxCount             int32  `protobuf:"varint,10,opt,name=valid_marketplace_metadata_options_max_count,json=validMarketplaceMetadataOptionsMaxCount,proto3" json:"valid_marketplace_metadata_options_max_count,omitempty"`
	ValidMarketplaceMetadataOptionsTypeMaxLength        int32  `protobuf:"varint,11,opt,name=valid_marketplace_metadata_options_type_max_length,json=validMarketplaceMetadataOptionsTypeMaxLength,proto3" json:"valid_marketplace_metadata_options_type_max_length,omitempty"`
	ValidMarketplaceMetadataOptionsValueMaxLength       int32  `protobuf:"varint,12,opt,name=valid_marketplace_metadata_options_value_max_length,json=validMarketplaceMetadataOptionsValueMaxLength,proto3" json:"valid_marketplace_metadata_options_value_max_length,omitempty"`
	ValidMarketplaceMetadataOptionsSubValueMaxLength    int32  `protobuf:"varint,13,opt,name=valid_marketplace_metadata_options_sub_value_max_length,json=validMarketplaceMetadataOptionsSubValueMaxLength,proto3" json:"valid_marketplace_metadata_options_sub_value_max_length,omitempty"`
	ValidMarketplaceMetadataAttributesMaxCount          int32  `protobuf:"varint,14,opt,name=valid_marketplace_metadata_attributes_max_count,json=validMarketplaceMetadataAttributesMaxCount,proto3" json:"valid_marketplace_metadata_attributes_max_count,omitempty"`
	ValidMarketplaceMetadataAttributesTypeMaxLength     int32  `protobuf:"varint,15,opt,name=valid_marketplace_metadata_attributes_type_max_length,json=validMarketplaceMetadataAttributesTypeMaxLength,proto3" json:"valid_marketplace_metadata_attributes_type_max_length,omitempty"`
	ValidMarketplaceMetadataAttributesValueMaxLength    int32  `protobuf:"varint,16,opt,name=valid_marketplace_metadata_attributes_value_max_length,json=validMarketplaceMetadataAttributesValueMaxLength,proto3" json:"valid_marketplace_metadata_attributes_value_max_length,omitempty"`
	ValidMarketplaceMetadataAttributesSubValueMaxLength int32  `protobuf:"varint,17,opt,name=valid_marketplace_metadata_attributes_sub_value_max_length,json=validMarketplaceMetadataAttributesSubValueMaxLength,proto3" json:"valid_marketplace_metadata_attributes_sub_value_max_length,omitempty"`
}

func (m *Params) Reset()      { *m = Params{} }
func (*Params) ProtoMessage() {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_fadd22d60e7a03a1, []int{0}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetValidMarketplaceId() string {
	if m != nil {
		return m.ValidMarketplaceId
	}
	return ""
}

func (m *Params) GetValidMarketplaceMetadataDescriptionMaxLength() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataDescriptionMaxLength
	}
	return 0
}

func (m *Params) GetValidMarketplaceMetadataNameMaxLength() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataNameMaxLength
	}
	return 0
}

func (m *Params) GetValidNftsEarningsOnSaleMaxCount() int32 {
	if m != nil {
		return m.ValidNftsEarningsOnSaleMaxCount
	}
	return 0
}

func (m *Params) GetValidNftsEarningsOnYieldRewardMaxCount() int32 {
	if m != nil {
		return m.ValidNftsEarningsOnYieldRewardMaxCount
	}
	return 0
}

func (m *Params) GetValidMarketplaceMetadataImagesMaxCount() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataImagesMaxCount
	}
	return 0
}

func (m *Params) GetValidMarketplaceMetadataImagesTypeMaxLength() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataImagesTypeMaxLength
	}
	return 0
}

func (m *Params) GetValidMarketplaceMetadataLinksMaxCount() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataLinksMaxCount
	}
	return 0
}

func (m *Params) GetValidMarketplaceMetadataLinksTypeMaxLength() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataLinksTypeMaxLength
	}
	return 0
}

func (m *Params) GetValidMarketplaceMetadataOptionsMaxCount() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataOptionsMaxCount
	}
	return 0
}

func (m *Params) GetValidMarketplaceMetadataOptionsTypeMaxLength() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataOptionsTypeMaxLength
	}
	return 0
}

func (m *Params) GetValidMarketplaceMetadataOptionsValueMaxLength() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataOptionsValueMaxLength
	}
	return 0
}

func (m *Params) GetValidMarketplaceMetadataOptionsSubValueMaxLength() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataOptionsSubValueMaxLength
	}
	return 0
}

func (m *Params) GetValidMarketplaceMetadataAttributesMaxCount() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataAttributesMaxCount
	}
	return 0
}

func (m *Params) GetValidMarketplaceMetadataAttributesTypeMaxLength() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataAttributesTypeMaxLength
	}
	return 0
}

func (m *Params) GetValidMarketplaceMetadataAttributesValueMaxLength() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataAttributesValueMaxLength
	}
	return 0
}

func (m *Params) GetValidMarketplaceMetadataAttributesSubValueMaxLength() int32 {
	if m != nil {
		return m.ValidMarketplaceMetadataAttributesSubValueMaxLength
	}
	return 0
}

func init() {
	proto.RegisterType((*Params)(nil), "LimeChain.mantrachain.marketplace.v1.Params")
}

func init() { proto.RegisterFile("marketplace/v1/params.proto", fileDescriptor_fadd22d60e7a03a1) }

var fileDescriptor_fadd22d60e7a03a1 = []byte{
	// 584 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x95, 0xcb, 0x6e, 0xd3, 0x4c,
	0x14, 0xc7, 0xe3, 0xef, 0x6b, 0x03, 0x1d, 0x28, 0x17, 0xab, 0x8b, 0x08, 0x24, 0xb7, 0x42, 0x5c,
	0xaa, 0x5e, 0xe2, 0x84, 0x70, 0x91, 0xba, 0x83, 0xc2, 0xa2, 0x52, 0x92, 0xa2, 0x14, 0x21, 0x15,
	0x54, 0x59, 0x27, 0xf6, 0xc4, 0x19, 0xea, 0x19, 0x1b, 0x7b, 0x9c, 0x26, 0x6f, 0xc1, 0x92, 0x25,
	0xbc, 0x0d, 0xcb, 0x2e, 0x59, 0xa2, 0xe4, 0x45, 0x90, 0x27, 0x91, 0x63, 0x3b, 0xc9, 0xd8, 0x3b,
	0x4b, 0x3e, 0xff, 0xdf, 0x4f, 0xe7, 0x1c, 0x5b, 0x07, 0x3d, 0xa4, 0xe0, 0x5f, 0x62, 0xee, 0x39,
	0x60, 0x62, 0x7d, 0x50, 0xd7, 0x3d, 0xf0, 0x81, 0x06, 0x55, 0xcf, 0x77, 0xb9, 0xab, 0x3e, 0x6e,
	0x12, 0x8a, 0x8f, 0xfb, 0x40, 0x58, 0x95, 0x02, 0xe3, 0x3e, 0x98, 0xb3, 0xe7, 0x38, 0x52, 0x1d,
	0xd4, 0x1f, 0x6c, 0xd9, 0xae, 0xed, 0x8a, 0x80, 0x1e, 0x3d, 0x4d, 0xb3, 0x8f, 0x7e, 0x6d, 0xa2,
	0xf2, 0x07, 0x01, 0x53, 0x6b, 0x68, 0x6b, 0x00, 0x0e, 0xb1, 0x8c, 0x44, 0xd0, 0x20, 0x56, 0x45,
	0xd9, 0x51, 0x76, 0x37, 0x3a, 0xaa, 0x78, 0xd7, 0x9a, 0xbf, 0x3a, 0xb1, 0x54, 0x1b, 0xd5, 0x17,
	0x13, 0x14, 0x73, 0xb0, 0x80, 0x83, 0x61, 0xe1, 0xc0, 0xf4, 0x89, 0xc7, 0x89, 0xcb, 0x0c, 0x0a,
	0x43, 0xc3, 0xc1, 0xcc, 0xe6, 0xfd, 0xca, 0x7f, 0x3b, 0xca, 0xee, 0x7a, 0xe7, 0x20, 0x8b, 0x6b,
	0xcd, 0x62, 0xef, 0xe6, 0xa9, 0x16, 0x0c, 0x9b, 0x22, 0xa3, 0x9e, 0xa3, 0x3d, 0x89, 0x88, 0x01,
	0xc5, 0x49, 0xc3, 0xff, 0xc2, 0xf0, 0x64, 0x95, 0xa1, 0x0d, 0x14, 0xcf, 0xd1, 0x6d, 0x34, 0x2d,
	0x34, 0x58, 0x8f, 0x07, 0x06, 0x06, 0x9f, 0x11, 0x66, 0x07, 0x86, 0xcb, 0x8c, 0x00, 0x9c, 0x29,
	0xd6, 0x74, 0x43, 0xc6, 0x2b, 0x6b, 0x82, 0xba, 0x2d, 0x8a, 0xdb, 0x3d, 0x1e, 0xbc, 0x9f, 0x95,
	0x9e, 0xb2, 0x33, 0x70, 0x22, 0xe0, 0x71, 0x54, 0xa6, 0x5e, 0xa0, 0xc3, 0x15, 0xbc, 0x11, 0xc1,
	0x8e, 0x65, 0xf8, 0xf8, 0x0a, 0x7c, 0x2b, 0xc1, 0x5d, 0x17, 0xdc, 0xa7, 0x4b, 0xb8, 0xe7, 0x51,
	0xa0, 0x23, 0xea, 0x63, 0xfc, 0x17, 0xb4, 0x2f, 0x99, 0x04, 0xa1, 0x60, 0xe3, 0x20, 0x01, 0x2f,
	0x27, 0xe0, 0x4b, 0x46, 0x71, 0x22, 0xea, 0x63, 0x78, 0x4f, 0xba, 0xcf, 0x19, 0x9c, 0x8f, 0xbc,
	0xd4, 0xb4, 0x6f, 0x08, 0xc5, 0xbe, 0x5c, 0xf1, 0x71, 0xe4, 0xe1, 0xa2, 0xeb, 0x74, 0x08, 0xbb,
	0x4c, 0xf6, 0x70, 0x53, 0xbe, 0xce, 0x66, 0x54, 0x1e, 0xb7, 0x60, 0xa1, 0x5a, 0x2e, 0x3a, 0xdb,
	0xc1, 0x86, 0x10, 0xec, 0x49, 0x05, 0xe9, 0x06, 0x2e, 0xd0, 0x81, 0xc4, 0xe2, 0x8a, 0xaf, 0x37,
	0xd9, 0x02, 0x12, 0x86, 0x67, 0xab, 0x0c, 0xa7, 0xd3, 0x40, 0xdc, 0x44, 0x1f, 0x3d, 0x2f, 0x80,
	0xcf, 0xb6, 0x71, 0x4b, 0xfe, 0x63, 0xcd, 0x24, 0xe9, 0x46, 0xbe, 0xa2, 0x46, 0x01, 0xd3, 0x00,
	0x9c, 0x30, 0xa5, 0xba, 0x2d, 0x54, 0x87, 0x39, 0xaa, 0x4f, 0x51, 0x6c, 0xee, 0xfa, 0x86, 0x5e,
	0x17, 0x70, 0x05, 0x61, 0x77, 0xd1, 0xb7, 0x29, 0x7c, 0xb5, 0x1c, 0xdf, 0x59, 0xd8, 0xcd, 0x28,
	0x4d, 0xa4, 0x4b, 0x94, 0xc0, 0xb9, 0x4f, 0xba, 0x21, 0x4f, 0xfd, 0x31, 0x77, 0xe4, 0x1f, 0xc3,
	0x9b, 0x38, 0x13, 0x6f, 0x8b, 0xa1, 0x97, 0xc5, 0x24, 0xd9, 0x85, 0xdd, 0x15, 0x2a, 0x3d, 0x5f,
	0x95, 0xde, 0x99, 0x87, 0x5e, 0x15, 0xf3, 0x2d, 0x8c, 0xf1, 0x9e, 0x7c, 0x8c, 0x73, 0x61, 0x66,
	0x8c, 0x57, 0xe8, 0xa8, 0x98, 0x71, 0xe9, 0xf2, 0xee, 0x0b, 0x6b, 0x23, 0xdf, 0xba, 0xb0, 0xbf,
	0xa3, 0xb5, 0x1f, 0x3f, 0xb7, 0x4b, 0x6f, 0xdb, 0xbf, 0xc7, 0x9a, 0x72, 0x3d, 0xd6, 0x94, 0xbf,
	0x63, 0x4d, 0xf9, 0x3e, 0xd1, 0x4a, 0xd7, 0x13, 0xad, 0xf4, 0x67, 0xa2, 0x95, 0x3e, 0xbf, 0xb0,
	0x09, 0xef, 0x87, 0xdd, 0xaa, 0xe9, 0x52, 0x3d, 0x3e, 0x82, 0x7a, 0xe2, 0x08, 0xea, 0x43, 0x3d,
	0x79, 0x39, 0xa3, 0x0d, 0x04, 0xdd, 0xb2, 0x38, 0x7d, 0x8d, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x33, 0xd5, 0xbb, 0x7e, 0x55, 0x07, 0x00, 0x00,
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ValidMarketplaceMetadataAttributesSubValueMaxLength != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataAttributesSubValueMaxLength))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.ValidMarketplaceMetadataAttributesValueMaxLength != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataAttributesValueMaxLength))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.ValidMarketplaceMetadataAttributesTypeMaxLength != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataAttributesTypeMaxLength))
		i--
		dAtA[i] = 0x78
	}
	if m.ValidMarketplaceMetadataAttributesMaxCount != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataAttributesMaxCount))
		i--
		dAtA[i] = 0x70
	}
	if m.ValidMarketplaceMetadataOptionsSubValueMaxLength != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataOptionsSubValueMaxLength))
		i--
		dAtA[i] = 0x68
	}
	if m.ValidMarketplaceMetadataOptionsValueMaxLength != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataOptionsValueMaxLength))
		i--
		dAtA[i] = 0x60
	}
	if m.ValidMarketplaceMetadataOptionsTypeMaxLength != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataOptionsTypeMaxLength))
		i--
		dAtA[i] = 0x58
	}
	if m.ValidMarketplaceMetadataOptionsMaxCount != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataOptionsMaxCount))
		i--
		dAtA[i] = 0x50
	}
	if m.ValidMarketplaceMetadataLinksTypeMaxLength != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataLinksTypeMaxLength))
		i--
		dAtA[i] = 0x48
	}
	if m.ValidMarketplaceMetadataLinksMaxCount != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataLinksMaxCount))
		i--
		dAtA[i] = 0x40
	}
	if m.ValidMarketplaceMetadataImagesTypeMaxLength != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataImagesTypeMaxLength))
		i--
		dAtA[i] = 0x38
	}
	if m.ValidMarketplaceMetadataImagesMaxCount != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataImagesMaxCount))
		i--
		dAtA[i] = 0x30
	}
	if m.ValidNftsEarningsOnYieldRewardMaxCount != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidNftsEarningsOnYieldRewardMaxCount))
		i--
		dAtA[i] = 0x28
	}
	if m.ValidNftsEarningsOnSaleMaxCount != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidNftsEarningsOnSaleMaxCount))
		i--
		dAtA[i] = 0x20
	}
	if m.ValidMarketplaceMetadataNameMaxLength != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataNameMaxLength))
		i--
		dAtA[i] = 0x18
	}
	if m.ValidMarketplaceMetadataDescriptionMaxLength != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.ValidMarketplaceMetadataDescriptionMaxLength))
		i--
		dAtA[i] = 0x10
	}
	if len(m.ValidMarketplaceId) > 0 {
		i -= len(m.ValidMarketplaceId)
		copy(dAtA[i:], m.ValidMarketplaceId)
		i = encodeVarintParams(dAtA, i, uint64(len(m.ValidMarketplaceId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintParams(dAtA []byte, offset int, v uint64) int {
	offset -= sovParams(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ValidMarketplaceId)
	if l > 0 {
		n += 1 + l + sovParams(uint64(l))
	}
	if m.ValidMarketplaceMetadataDescriptionMaxLength != 0 {
		n += 1 + sovParams(uint64(m.ValidMarketplaceMetadataDescriptionMaxLength))
	}
	if m.ValidMarketplaceMetadataNameMaxLength != 0 {
		n += 1 + sovParams(uint64(m.ValidMarketplaceMetadataNameMaxLength))
	}
	if m.ValidNftsEarningsOnSaleMaxCount != 0 {
		n += 1 + sovParams(uint64(m.ValidNftsEarningsOnSaleMaxCount))
	}
	if m.ValidNftsEarningsOnYieldRewardMaxCount != 0 {
		n += 1 + sovParams(uint64(m.ValidNftsEarningsOnYieldRewardMaxCount))
	}
	if m.ValidMarketplaceMetadataImagesMaxCount != 0 {
		n += 1 + sovParams(uint64(m.ValidMarketplaceMetadataImagesMaxCount))
	}
	if m.ValidMarketplaceMetadataImagesTypeMaxLength != 0 {
		n += 1 + sovParams(uint64(m.ValidMarketplaceMetadataImagesTypeMaxLength))
	}
	if m.ValidMarketplaceMetadataLinksMaxCount != 0 {
		n += 1 + sovParams(uint64(m.ValidMarketplaceMetadataLinksMaxCount))
	}
	if m.ValidMarketplaceMetadataLinksTypeMaxLength != 0 {
		n += 1 + sovParams(uint64(m.ValidMarketplaceMetadataLinksTypeMaxLength))
	}
	if m.ValidMarketplaceMetadataOptionsMaxCount != 0 {
		n += 1 + sovParams(uint64(m.ValidMarketplaceMetadataOptionsMaxCount))
	}
	if m.ValidMarketplaceMetadataOptionsTypeMaxLength != 0 {
		n += 1 + sovParams(uint64(m.ValidMarketplaceMetadataOptionsTypeMaxLength))
	}
	if m.ValidMarketplaceMetadataOptionsValueMaxLength != 0 {
		n += 1 + sovParams(uint64(m.ValidMarketplaceMetadataOptionsValueMaxLength))
	}
	if m.ValidMarketplaceMetadataOptionsSubValueMaxLength != 0 {
		n += 1 + sovParams(uint64(m.ValidMarketplaceMetadataOptionsSubValueMaxLength))
	}
	if m.ValidMarketplaceMetadataAttributesMaxCount != 0 {
		n += 1 + sovParams(uint64(m.ValidMarketplaceMetadataAttributesMaxCount))
	}
	if m.ValidMarketplaceMetadataAttributesTypeMaxLength != 0 {
		n += 1 + sovParams(uint64(m.ValidMarketplaceMetadataAttributesTypeMaxLength))
	}
	if m.ValidMarketplaceMetadataAttributesValueMaxLength != 0 {
		n += 2 + sovParams(uint64(m.ValidMarketplaceMetadataAttributesValueMaxLength))
	}
	if m.ValidMarketplaceMetadataAttributesSubValueMaxLength != 0 {
		n += 2 + sovParams(uint64(m.ValidMarketplaceMetadataAttributesSubValueMaxLength))
	}
	return n
}

func sovParams(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozParams(x uint64) (n int) {
	return sovParams(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValidMarketplaceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataDescriptionMaxLength", wireType)
			}
			m.ValidMarketplaceMetadataDescriptionMaxLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataDescriptionMaxLength |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataNameMaxLength", wireType)
			}
			m.ValidMarketplaceMetadataNameMaxLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataNameMaxLength |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidNftsEarningsOnSaleMaxCount", wireType)
			}
			m.ValidNftsEarningsOnSaleMaxCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidNftsEarningsOnSaleMaxCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidNftsEarningsOnYieldRewardMaxCount", wireType)
			}
			m.ValidNftsEarningsOnYieldRewardMaxCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidNftsEarningsOnYieldRewardMaxCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataImagesMaxCount", wireType)
			}
			m.ValidMarketplaceMetadataImagesMaxCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataImagesMaxCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataImagesTypeMaxLength", wireType)
			}
			m.ValidMarketplaceMetadataImagesTypeMaxLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataImagesTypeMaxLength |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataLinksMaxCount", wireType)
			}
			m.ValidMarketplaceMetadataLinksMaxCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataLinksMaxCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataLinksTypeMaxLength", wireType)
			}
			m.ValidMarketplaceMetadataLinksTypeMaxLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataLinksTypeMaxLength |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataOptionsMaxCount", wireType)
			}
			m.ValidMarketplaceMetadataOptionsMaxCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataOptionsMaxCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataOptionsTypeMaxLength", wireType)
			}
			m.ValidMarketplaceMetadataOptionsTypeMaxLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataOptionsTypeMaxLength |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataOptionsValueMaxLength", wireType)
			}
			m.ValidMarketplaceMetadataOptionsValueMaxLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataOptionsValueMaxLength |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataOptionsSubValueMaxLength", wireType)
			}
			m.ValidMarketplaceMetadataOptionsSubValueMaxLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataOptionsSubValueMaxLength |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataAttributesMaxCount", wireType)
			}
			m.ValidMarketplaceMetadataAttributesMaxCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataAttributesMaxCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataAttributesTypeMaxLength", wireType)
			}
			m.ValidMarketplaceMetadataAttributesTypeMaxLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataAttributesTypeMaxLength |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataAttributesValueMaxLength", wireType)
			}
			m.ValidMarketplaceMetadataAttributesValueMaxLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataAttributesValueMaxLength |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidMarketplaceMetadataAttributesSubValueMaxLength", wireType)
			}
			m.ValidMarketplaceMetadataAttributesSubValueMaxLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidMarketplaceMetadataAttributesSubValueMaxLength |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipParams(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowParams
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthParams
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupParams
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthParams
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthParams        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowParams          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupParams = fmt.Errorf("proto: unexpected end of group")
)
