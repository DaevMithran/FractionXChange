// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: marketplace/v1/query.proto

package types

import (
	context "context"
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	types1 "github.com/cosmos/cosmos-sdk/types"
	query "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QueryAddressRequest struct {
}

func (m *QueryAddressRequest) Reset()         { *m = QueryAddressRequest{} }
func (m *QueryAddressRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAddressRequest) ProtoMessage()    {}
func (*QueryAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{0}
}
func (m *QueryAddressRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAddressRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAddressRequest.Merge(m, src)
}
func (m *QueryAddressRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAddressRequest proto.InternalMessageInfo

type QueryAddressResponse struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *QueryAddressResponse) Reset()         { *m = QueryAddressResponse{} }
func (m *QueryAddressResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAddressResponse) ProtoMessage()    {}
func (*QueryAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{1}
}
func (m *QueryAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAddressResponse.Merge(m, src)
}
func (m *QueryAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAddressResponse proto.InternalMessageInfo

func (m *QueryAddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type QueryGetAllMarketplaceCollectionsRequest struct {
	MarketplaceCreator string `protobuf:"bytes,1,opt,name=marketplace_creator,json=marketplaceCreator,proto3" json:"marketplace_creator,omitempty"`
	MarketplaceId      string `protobuf:"bytes,2,opt,name=marketplace_id,json=marketplaceId,proto3" json:"marketplace_id,omitempty"`
	// pagination defines an optional pagination for the request.
	Pagination *query.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryGetAllMarketplaceCollectionsRequest) Reset() {
	*m = QueryGetAllMarketplaceCollectionsRequest{}
}
func (m *QueryGetAllMarketplaceCollectionsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetAllMarketplaceCollectionsRequest) ProtoMessage()    {}
func (*QueryGetAllMarketplaceCollectionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{2}
}
func (m *QueryGetAllMarketplaceCollectionsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAllMarketplaceCollectionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAllMarketplaceCollectionsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAllMarketplaceCollectionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAllMarketplaceCollectionsRequest.Merge(m, src)
}
func (m *QueryGetAllMarketplaceCollectionsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAllMarketplaceCollectionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAllMarketplaceCollectionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAllMarketplaceCollectionsRequest proto.InternalMessageInfo

func (m *QueryGetAllMarketplaceCollectionsRequest) GetMarketplaceCreator() string {
	if m != nil {
		return m.MarketplaceCreator
	}
	return ""
}

func (m *QueryGetAllMarketplaceCollectionsRequest) GetMarketplaceId() string {
	if m != nil {
		return m.MarketplaceId
	}
	return ""
}

func (m *QueryGetAllMarketplaceCollectionsRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGetAllMarketplaceCollectionsResponse struct {
	MarketplaceCreator string                                   `protobuf:"bytes,1,opt,name=marketplace_creator,json=marketplaceCreator,proto3" json:"marketplace_creator,omitempty"`
	MarketplaceId      string                                   `protobuf:"bytes,2,opt,name=marketplace_id,json=marketplaceId,proto3" json:"marketplace_id,omitempty"`
	Collections        []*QueryGetMarketplaceCollectionResponse `protobuf:"bytes,3,rep,name=collections,proto3" json:"collections,omitempty"`
	Pagination         *query.PageResponse                      `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryGetAllMarketplaceCollectionsResponse) Reset() {
	*m = QueryGetAllMarketplaceCollectionsResponse{}
}
func (m *QueryGetAllMarketplaceCollectionsResponse) String() string {
	return proto.CompactTextString(m)
}
func (*QueryGetAllMarketplaceCollectionsResponse) ProtoMessage() {}
func (*QueryGetAllMarketplaceCollectionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{3}
}
func (m *QueryGetAllMarketplaceCollectionsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAllMarketplaceCollectionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAllMarketplaceCollectionsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAllMarketplaceCollectionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAllMarketplaceCollectionsResponse.Merge(m, src)
}
func (m *QueryGetAllMarketplaceCollectionsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAllMarketplaceCollectionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAllMarketplaceCollectionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAllMarketplaceCollectionsResponse proto.InternalMessageInfo

func (m *QueryGetAllMarketplaceCollectionsResponse) GetMarketplaceCreator() string {
	if m != nil {
		return m.MarketplaceCreator
	}
	return ""
}

func (m *QueryGetAllMarketplaceCollectionsResponse) GetMarketplaceId() string {
	if m != nil {
		return m.MarketplaceId
	}
	return ""
}

func (m *QueryGetAllMarketplaceCollectionsResponse) GetCollections() []*QueryGetMarketplaceCollectionResponse {
	if m != nil {
		return m.Collections
	}
	return nil
}

func (m *QueryGetAllMarketplaceCollectionsResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGetMarketplacesByCreatorRequest struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// pagination defines an optional pagination for the request.
	Pagination *query.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryGetMarketplacesByCreatorRequest) Reset()         { *m = QueryGetMarketplacesByCreatorRequest{} }
func (m *QueryGetMarketplacesByCreatorRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetMarketplacesByCreatorRequest) ProtoMessage()    {}
func (*QueryGetMarketplacesByCreatorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{4}
}
func (m *QueryGetMarketplacesByCreatorRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMarketplacesByCreatorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMarketplacesByCreatorRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMarketplacesByCreatorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMarketplacesByCreatorRequest.Merge(m, src)
}
func (m *QueryGetMarketplacesByCreatorRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMarketplacesByCreatorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMarketplacesByCreatorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMarketplacesByCreatorRequest proto.InternalMessageInfo

func (m *QueryGetMarketplacesByCreatorRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *QueryGetMarketplacesByCreatorRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGetMarketplacesByCreatorResponse struct {
	Creator      string                         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Marketplaces []*QueryGetMarketplaceResponse `protobuf:"bytes,2,rep,name=marketplaces,proto3" json:"marketplaces,omitempty"`
	Pagination   *query.PageResponse            `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryGetMarketplacesByCreatorResponse) Reset()         { *m = QueryGetMarketplacesByCreatorResponse{} }
func (m *QueryGetMarketplacesByCreatorResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetMarketplacesByCreatorResponse) ProtoMessage()    {}
func (*QueryGetMarketplacesByCreatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{5}
}
func (m *QueryGetMarketplacesByCreatorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMarketplacesByCreatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMarketplacesByCreatorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMarketplacesByCreatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMarketplacesByCreatorResponse.Merge(m, src)
}
func (m *QueryGetMarketplacesByCreatorResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMarketplacesByCreatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMarketplacesByCreatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMarketplacesByCreatorResponse proto.InternalMessageInfo

func (m *QueryGetMarketplacesByCreatorResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *QueryGetMarketplacesByCreatorResponse) GetMarketplaces() []*QueryGetMarketplaceResponse {
	if m != nil {
		return m.Marketplaces
	}
	return nil
}

func (m *QueryGetMarketplacesByCreatorResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGetAllMarketplacesRequest struct {
	// pagination defines an optional pagination for the request.
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryGetAllMarketplacesRequest) Reset()         { *m = QueryGetAllMarketplacesRequest{} }
func (m *QueryGetAllMarketplacesRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetAllMarketplacesRequest) ProtoMessage()    {}
func (*QueryGetAllMarketplacesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{6}
}
func (m *QueryGetAllMarketplacesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAllMarketplacesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAllMarketplacesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAllMarketplacesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAllMarketplacesRequest.Merge(m, src)
}
func (m *QueryGetAllMarketplacesRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAllMarketplacesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAllMarketplacesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAllMarketplacesRequest proto.InternalMessageInfo

func (m *QueryGetAllMarketplacesRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGetAllMarketplacesResponse struct {
	Marketplaces []*QueryGetMarketplaceResponse `protobuf:"bytes,1,rep,name=marketplaces,proto3" json:"marketplaces,omitempty"`
	Pagination   *query.PageResponse            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryGetAllMarketplacesResponse) Reset()         { *m = QueryGetAllMarketplacesResponse{} }
func (m *QueryGetAllMarketplacesResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetAllMarketplacesResponse) ProtoMessage()    {}
func (*QueryGetAllMarketplacesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{7}
}
func (m *QueryGetAllMarketplacesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAllMarketplacesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAllMarketplacesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAllMarketplacesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAllMarketplacesResponse.Merge(m, src)
}
func (m *QueryGetAllMarketplacesResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAllMarketplacesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAllMarketplacesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAllMarketplacesResponse proto.InternalMessageInfo

func (m *QueryGetAllMarketplacesResponse) GetMarketplaces() []*QueryGetMarketplaceResponse {
	if m != nil {
		return m.Marketplaces
	}
	return nil
}

func (m *QueryGetAllMarketplacesResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryParamsRequest is request type for the Query/Params RPC method.
type QueryParamsRequest struct {
}

func (m *QueryParamsRequest) Reset()         { *m = QueryParamsRequest{} }
func (m *QueryParamsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryParamsRequest) ProtoMessage()    {}
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{8}
}
func (m *QueryParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsRequest.Merge(m, src)
}
func (m *QueryParamsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsRequest proto.InternalMessageInfo

// QueryParamsResponse is response type for the Query/Params RPC method.
type QueryParamsResponse struct {
	// params holds all the parameters of this module.
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (m *QueryParamsResponse) Reset()         { *m = QueryParamsResponse{} }
func (m *QueryParamsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryParamsResponse) ProtoMessage()    {}
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{9}
}
func (m *QueryParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsResponse.Merge(m, src)
}
func (m *QueryParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsResponse proto.InternalMessageInfo

func (m *QueryParamsResponse) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

type QueryGetMarketplaceRequest struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *QueryGetMarketplaceRequest) Reset()         { *m = QueryGetMarketplaceRequest{} }
func (m *QueryGetMarketplaceRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetMarketplaceRequest) ProtoMessage()    {}
func (*QueryGetMarketplaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{10}
}
func (m *QueryGetMarketplaceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMarketplaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMarketplaceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMarketplaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMarketplaceRequest.Merge(m, src)
}
func (m *QueryGetMarketplaceRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMarketplaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMarketplaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMarketplaceRequest proto.InternalMessageInfo

func (m *QueryGetMarketplaceRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *QueryGetMarketplaceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type QueryGetMarketplaceResponse struct {
	Id          string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Url         string                  `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Owner       string                  `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Creator     string                  `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
	Opened      bool                    `protobuf:"varint,7,opt,name=opened,proto3" json:"opened,omitempty"`
	Options     []*MarketplaceOption    `protobuf:"bytes,8,rep,name=options,proto3" json:"options,omitempty"`
	Attributes  []*MarketplaceAttribute `protobuf:"bytes,9,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Images      []*MarketplaceImage     `protobuf:"bytes,10,rep,name=images,proto3" json:"images,omitempty"`
	Links       []*MarketplaceLink      `protobuf:"bytes,11,rep,name=links,proto3" json:"links,omitempty"`
	Data        *types.Any              `protobuf:"bytes,12,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *QueryGetMarketplaceResponse) Reset()         { *m = QueryGetMarketplaceResponse{} }
func (m *QueryGetMarketplaceResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetMarketplaceResponse) ProtoMessage()    {}
func (*QueryGetMarketplaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{11}
}
func (m *QueryGetMarketplaceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMarketplaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMarketplaceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMarketplaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMarketplaceResponse.Merge(m, src)
}
func (m *QueryGetMarketplaceResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMarketplaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMarketplaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMarketplaceResponse proto.InternalMessageInfo

func (m *QueryGetMarketplaceResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QueryGetMarketplaceResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *QueryGetMarketplaceResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *QueryGetMarketplaceResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *QueryGetMarketplaceResponse) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *QueryGetMarketplaceResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *QueryGetMarketplaceResponse) GetOpened() bool {
	if m != nil {
		return m.Opened
	}
	return false
}

func (m *QueryGetMarketplaceResponse) GetOptions() []*MarketplaceOption {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *QueryGetMarketplaceResponse) GetAttributes() []*MarketplaceAttribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *QueryGetMarketplaceResponse) GetImages() []*MarketplaceImage {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *QueryGetMarketplaceResponse) GetLinks() []*MarketplaceLink {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *QueryGetMarketplaceResponse) GetData() *types.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type QueryGetMarketplaceCollectionRequest struct {
	MarketplaceCreator string `protobuf:"bytes,1,opt,name=marketplace_creator,json=marketplaceCreator,proto3" json:"marketplace_creator,omitempty"`
	MarketplaceId      string `protobuf:"bytes,2,opt,name=marketplace_id,json=marketplaceId,proto3" json:"marketplace_id,omitempty"`
	CollectionCreator  string `protobuf:"bytes,3,opt,name=collection_creator,json=collectionCreator,proto3" json:"collection_creator,omitempty"`
	CollectionId       string `protobuf:"bytes,4,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
}

func (m *QueryGetMarketplaceCollectionRequest) Reset()         { *m = QueryGetMarketplaceCollectionRequest{} }
func (m *QueryGetMarketplaceCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetMarketplaceCollectionRequest) ProtoMessage()    {}
func (*QueryGetMarketplaceCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{12}
}
func (m *QueryGetMarketplaceCollectionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMarketplaceCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMarketplaceCollectionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMarketplaceCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMarketplaceCollectionRequest.Merge(m, src)
}
func (m *QueryGetMarketplaceCollectionRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMarketplaceCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMarketplaceCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMarketplaceCollectionRequest proto.InternalMessageInfo

func (m *QueryGetMarketplaceCollectionRequest) GetMarketplaceCreator() string {
	if m != nil {
		return m.MarketplaceCreator
	}
	return ""
}

func (m *QueryGetMarketplaceCollectionRequest) GetMarketplaceId() string {
	if m != nil {
		return m.MarketplaceId
	}
	return ""
}

func (m *QueryGetMarketplaceCollectionRequest) GetCollectionCreator() string {
	if m != nil {
		return m.CollectionCreator
	}
	return ""
}

func (m *QueryGetMarketplaceCollectionRequest) GetCollectionId() string {
	if m != nil {
		return m.CollectionId
	}
	return ""
}

type QueryGetMarketplaceCollectionResponse struct {
	MarketplaceCreator                      string                `protobuf:"bytes,1,opt,name=marketplace_creator,json=marketplaceCreator,proto3" json:"marketplace_creator,omitempty"`
	MarketplaceId                           string                `protobuf:"bytes,2,opt,name=marketplace_id,json=marketplaceId,proto3" json:"marketplace_id,omitempty"`
	CollectionCreator                       string                `protobuf:"bytes,3,opt,name=collection_creator,json=collectionCreator,proto3" json:"collection_creator,omitempty"`
	CollectionId                            string                `protobuf:"bytes,4,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	InitiallyNftCollectionOwnerNftsForSale  bool                  `protobuf:"varint,5,opt,name=initially_nft_collection_owner_nfts_for_sale,json=initiallyNftCollectionOwnerNftsForSale,proto3" json:"initially_nft_collection_owner_nfts_for_sale,omitempty"`
	InitiallyNftCollectionOwnerNftsMinPrice *types1.Coin          `protobuf:"bytes,6,opt,name=initially_nft_collection_owner_nfts_min_price,json=initiallyNftCollectionOwnerNftsMinPrice,proto3" json:"initially_nft_collection_owner_nfts_min_price,omitempty"`
	NftsEarningsOnSale                      []*MarketplaceEarning `protobuf:"bytes,7,rep,name=nfts_earnings_on_sale,json=nftsEarningsOnSale,proto3" json:"nfts_earnings_on_sale,omitempty"`
	NftsEarningsOnYieldReward               []*MarketplaceEarning `protobuf:"bytes,78,rep,name=nfts_earnings_on_yield_reward,json=nftsEarningsOnYieldReward,proto3" json:"nfts_earnings_on_yield_reward,omitempty"`
	InitiallyNftsVaultLockPercentage        string                `protobuf:"bytes,9,opt,name=initially_nfts_vault_lock_percentage,json=initiallyNftsVaultLockPercentage,proto3" json:"initially_nfts_vault_lock_percentage,omitempty"`
	Creator                                 string                `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *QueryGetMarketplaceCollectionResponse) Reset()         { *m = QueryGetMarketplaceCollectionResponse{} }
func (m *QueryGetMarketplaceCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetMarketplaceCollectionResponse) ProtoMessage()    {}
func (*QueryGetMarketplaceCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{13}
}
func (m *QueryGetMarketplaceCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMarketplaceCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMarketplaceCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMarketplaceCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMarketplaceCollectionResponse.Merge(m, src)
}
func (m *QueryGetMarketplaceCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMarketplaceCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMarketplaceCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMarketplaceCollectionResponse proto.InternalMessageInfo

func (m *QueryGetMarketplaceCollectionResponse) GetMarketplaceCreator() string {
	if m != nil {
		return m.MarketplaceCreator
	}
	return ""
}

func (m *QueryGetMarketplaceCollectionResponse) GetMarketplaceId() string {
	if m != nil {
		return m.MarketplaceId
	}
	return ""
}

func (m *QueryGetMarketplaceCollectionResponse) GetCollectionCreator() string {
	if m != nil {
		return m.CollectionCreator
	}
	return ""
}

func (m *QueryGetMarketplaceCollectionResponse) GetCollectionId() string {
	if m != nil {
		return m.CollectionId
	}
	return ""
}

func (m *QueryGetMarketplaceCollectionResponse) GetInitiallyNftCollectionOwnerNftsForSale() bool {
	if m != nil {
		return m.InitiallyNftCollectionOwnerNftsForSale
	}
	return false
}

func (m *QueryGetMarketplaceCollectionResponse) GetInitiallyNftCollectionOwnerNftsMinPrice() *types1.Coin {
	if m != nil {
		return m.InitiallyNftCollectionOwnerNftsMinPrice
	}
	return nil
}

func (m *QueryGetMarketplaceCollectionResponse) GetNftsEarningsOnSale() []*MarketplaceEarning {
	if m != nil {
		return m.NftsEarningsOnSale
	}
	return nil
}

func (m *QueryGetMarketplaceCollectionResponse) GetNftsEarningsOnYieldReward() []*MarketplaceEarning {
	if m != nil {
		return m.NftsEarningsOnYieldReward
	}
	return nil
}

func (m *QueryGetMarketplaceCollectionResponse) GetInitiallyNftsVaultLockPercentage() string {
	if m != nil {
		return m.InitiallyNftsVaultLockPercentage
	}
	return ""
}

func (m *QueryGetMarketplaceCollectionResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type QueryGetMarketplaceNftRequest struct {
	MarketplaceCreator string `protobuf:"bytes,1,opt,name=marketplace_creator,json=marketplaceCreator,proto3" json:"marketplace_creator,omitempty"`
	MarketplaceId      string `protobuf:"bytes,2,opt,name=marketplace_id,json=marketplaceId,proto3" json:"marketplace_id,omitempty"`
	CollectionCreator  string `protobuf:"bytes,3,opt,name=collection_creator,json=collectionCreator,proto3" json:"collection_creator,omitempty"`
	CollectionId       string `protobuf:"bytes,4,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	NftId              string `protobuf:"bytes,5,opt,name=nft_id,json=nftId,proto3" json:"nft_id,omitempty"`
}

func (m *QueryGetMarketplaceNftRequest) Reset()         { *m = QueryGetMarketplaceNftRequest{} }
func (m *QueryGetMarketplaceNftRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetMarketplaceNftRequest) ProtoMessage()    {}
func (*QueryGetMarketplaceNftRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{14}
}
func (m *QueryGetMarketplaceNftRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMarketplaceNftRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMarketplaceNftRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMarketplaceNftRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMarketplaceNftRequest.Merge(m, src)
}
func (m *QueryGetMarketplaceNftRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMarketplaceNftRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMarketplaceNftRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMarketplaceNftRequest proto.InternalMessageInfo

func (m *QueryGetMarketplaceNftRequest) GetMarketplaceCreator() string {
	if m != nil {
		return m.MarketplaceCreator
	}
	return ""
}

func (m *QueryGetMarketplaceNftRequest) GetMarketplaceId() string {
	if m != nil {
		return m.MarketplaceId
	}
	return ""
}

func (m *QueryGetMarketplaceNftRequest) GetCollectionCreator() string {
	if m != nil {
		return m.CollectionCreator
	}
	return ""
}

func (m *QueryGetMarketplaceNftRequest) GetCollectionId() string {
	if m != nil {
		return m.CollectionId
	}
	return ""
}

func (m *QueryGetMarketplaceNftRequest) GetNftId() string {
	if m != nil {
		return m.NftId
	}
	return ""
}

type QueryGetMarketplaceNftResponse struct {
	MarketplaceCreator string       `protobuf:"bytes,1,opt,name=marketplace_creator,json=marketplaceCreator,proto3" json:"marketplace_creator,omitempty"`
	MarketplaceId      string       `protobuf:"bytes,2,opt,name=marketplace_id,json=marketplaceId,proto3" json:"marketplace_id,omitempty"`
	CollectionCreator  string       `protobuf:"bytes,3,opt,name=collection_creator,json=collectionCreator,proto3" json:"collection_creator,omitempty"`
	CollectionId       string       `protobuf:"bytes,4,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	NftId              string       `protobuf:"bytes,5,opt,name=nft_id,json=nftId,proto3" json:"nft_id,omitempty"`
	ForSale            bool         `protobuf:"varint,6,opt,name=for_sale,json=forSale,proto3" json:"for_sale,omitempty"`
	InitiallySold      bool         `protobuf:"varint,7,opt,name=initially_sold,json=initiallySold,proto3" json:"initially_sold,omitempty"`
	MinPrice           *types1.Coin `protobuf:"bytes,8,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
	Creator            string       `protobuf:"bytes,9,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *QueryGetMarketplaceNftResponse) Reset()         { *m = QueryGetMarketplaceNftResponse{} }
func (m *QueryGetMarketplaceNftResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetMarketplaceNftResponse) ProtoMessage()    {}
func (*QueryGetMarketplaceNftResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f1bc025c6dc4b4a, []int{15}
}
func (m *QueryGetMarketplaceNftResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMarketplaceNftResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMarketplaceNftResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMarketplaceNftResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMarketplaceNftResponse.Merge(m, src)
}
func (m *QueryGetMarketplaceNftResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMarketplaceNftResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMarketplaceNftResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMarketplaceNftResponse proto.InternalMessageInfo

func (m *QueryGetMarketplaceNftResponse) GetMarketplaceCreator() string {
	if m != nil {
		return m.MarketplaceCreator
	}
	return ""
}

func (m *QueryGetMarketplaceNftResponse) GetMarketplaceId() string {
	if m != nil {
		return m.MarketplaceId
	}
	return ""
}

func (m *QueryGetMarketplaceNftResponse) GetCollectionCreator() string {
	if m != nil {
		return m.CollectionCreator
	}
	return ""
}

func (m *QueryGetMarketplaceNftResponse) GetCollectionId() string {
	if m != nil {
		return m.CollectionId
	}
	return ""
}

func (m *QueryGetMarketplaceNftResponse) GetNftId() string {
	if m != nil {
		return m.NftId
	}
	return ""
}

func (m *QueryGetMarketplaceNftResponse) GetForSale() bool {
	if m != nil {
		return m.ForSale
	}
	return false
}

func (m *QueryGetMarketplaceNftResponse) GetInitiallySold() bool {
	if m != nil {
		return m.InitiallySold
	}
	return false
}

func (m *QueryGetMarketplaceNftResponse) GetMinPrice() *types1.Coin {
	if m != nil {
		return m.MinPrice
	}
	return nil
}

func (m *QueryGetMarketplaceNftResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*QueryAddressRequest)(nil), "LimeChain.mantrachain.marketplace.v1.QueryAddressRequest")
	proto.RegisterType((*QueryAddressResponse)(nil), "LimeChain.mantrachain.marketplace.v1.QueryAddressResponse")
	proto.RegisterType((*QueryGetAllMarketplaceCollectionsRequest)(nil), "LimeChain.mantrachain.marketplace.v1.QueryGetAllMarketplaceCollectionsRequest")
	proto.RegisterType((*QueryGetAllMarketplaceCollectionsResponse)(nil), "LimeChain.mantrachain.marketplace.v1.QueryGetAllMarketplaceCollectionsResponse")
	proto.RegisterType((*QueryGetMarketplacesByCreatorRequest)(nil), "LimeChain.mantrachain.marketplace.v1.QueryGetMarketplacesByCreatorRequest")
	proto.RegisterType((*QueryGetMarketplacesByCreatorResponse)(nil), "LimeChain.mantrachain.marketplace.v1.QueryGetMarketplacesByCreatorResponse")
	proto.RegisterType((*QueryGetAllMarketplacesRequest)(nil), "LimeChain.mantrachain.marketplace.v1.QueryGetAllMarketplacesRequest")
	proto.RegisterType((*QueryGetAllMarketplacesResponse)(nil), "LimeChain.mantrachain.marketplace.v1.QueryGetAllMarketplacesResponse")
	proto.RegisterType((*QueryParamsRequest)(nil), "LimeChain.mantrachain.marketplace.v1.QueryParamsRequest")
	proto.RegisterType((*QueryParamsResponse)(nil), "LimeChain.mantrachain.marketplace.v1.QueryParamsResponse")
	proto.RegisterType((*QueryGetMarketplaceRequest)(nil), "LimeChain.mantrachain.marketplace.v1.QueryGetMarketplaceRequest")
	proto.RegisterType((*QueryGetMarketplaceResponse)(nil), "LimeChain.mantrachain.marketplace.v1.QueryGetMarketplaceResponse")
	proto.RegisterType((*QueryGetMarketplaceCollectionRequest)(nil), "LimeChain.mantrachain.marketplace.v1.QueryGetMarketplaceCollectionRequest")
	proto.RegisterType((*QueryGetMarketplaceCollectionResponse)(nil), "LimeChain.mantrachain.marketplace.v1.QueryGetMarketplaceCollectionResponse")
	proto.RegisterType((*QueryGetMarketplaceNftRequest)(nil), "LimeChain.mantrachain.marketplace.v1.QueryGetMarketplaceNftRequest")
	proto.RegisterType((*QueryGetMarketplaceNftResponse)(nil), "LimeChain.mantrachain.marketplace.v1.QueryGetMarketplaceNftResponse")
}

func init() { proto.RegisterFile("marketplace/v1/query.proto", fileDescriptor_3f1bc025c6dc4b4a) }

var fileDescriptor_3f1bc025c6dc4b4a = []byte{
	// 1412 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0xcf, 0x73, 0xdb, 0x44,
	0x14, 0x8e, 0x9c, 0xc4, 0x8e, 0x9f, 0xdb, 0x00, 0xdb, 0xa4, 0x28, 0x2e, 0x75, 0x33, 0x6a, 0xd3,
	0x86, 0x4e, 0x63, 0xd1, 0x00, 0xa5, 0xf4, 0x44, 0x1a, 0xda, 0x4e, 0xfa, 0xc3, 0x49, 0xd5, 0x81,
	0x19, 0x3a, 0xcc, 0x78, 0x36, 0xd2, 0xda, 0xdd, 0x89, 0xb4, 0xeb, 0x4a, 0x72, 0x8a, 0x1b, 0x72,
	0xe1, 0xc4, 0x91, 0x99, 0x9e, 0x38, 0xf4, 0xc0, 0x9d, 0x1b, 0x47, 0x8e, 0xcc, 0x30, 0x1d, 0x4e,
	0x05, 0x2e, 0x9c, 0x80, 0x49, 0xf9, 0x07, 0x38, 0x71, 0x84, 0xd1, 0x6a, 0x65, 0x49, 0x8e, 0xf3,
	0xc3, 0x76, 0xca, 0x4c, 0x6e, 0xd2, 0xd3, 0xbe, 0x6f, 0xdf, 0xf7, 0xed, 0x7b, 0x6f, 0x77, 0x05,
	0x45, 0x07, 0xbb, 0x6b, 0xc4, 0x6f, 0xd8, 0xd8, 0x24, 0xfa, 0xfa, 0x45, 0xfd, 0x61, 0x93, 0xb8,
	0xad, 0x72, 0xc3, 0xe5, 0x3e, 0x47, 0x67, 0x6e, 0x53, 0x87, 0x2c, 0x3e, 0xc0, 0x94, 0x95, 0x1d,
	0xcc, 0x7c, 0x17, 0x9b, 0xf2, 0xb9, 0xed, 0x51, 0x5e, 0xbf, 0x58, 0x2c, 0x99, 0xdc, 0x73, 0xb8,
	0xa7, 0xaf, 0x62, 0x2f, 0x40, 0x58, 0x25, 0x3e, 0xbe, 0xa8, 0x9b, 0x9c, 0xb2, 0x10, 0xa5, 0x38,
	0x55, 0xe7, 0xbc, 0x6e, 0x13, 0x5d, 0xbc, 0xad, 0x36, 0x6b, 0x3a, 0x66, 0x72, 0x82, 0xe2, 0x44,
	0x9d, 0xd7, 0xb9, 0x78, 0xd4, 0x83, 0x27, 0x69, 0x7d, 0x43, 0x3a, 0xe0, 0x06, 0xd5, 0x31, 0x63,
	0xdc, 0xc7, 0x3e, 0xe5, 0xcc, 0x93, 0x5f, 0x4f, 0x74, 0x04, 0xdc, 0xc0, 0x2e, 0x76, 0x76, 0xfa,
	0x68, 0x72, 0xc7, 0xe1, 0x51, 0x20, 0xe7, 0x93, 0x81, 0x0a, 0x9e, 0xed, 0x70, 0x1b, 0xb8, 0x4e,
	0x99, 0x98, 0x26, 0x1c, 0xab, 0x4d, 0xc2, 0xb1, 0xbb, 0xc1, 0x88, 0x05, 0xcb, 0x72, 0x89, 0xe7,
	0x19, 0xe4, 0x61, 0x93, 0x78, 0xbe, 0xf6, 0x16, 0x4c, 0xa4, 0xcd, 0x5e, 0x83, 0x33, 0x8f, 0x20,
	0x15, 0x72, 0x38, 0x34, 0xa9, 0xca, 0xb4, 0x32, 0x9b, 0x37, 0xa2, 0x57, 0xed, 0x27, 0x05, 0x66,
	0x85, 0xcb, 0x0d, 0xe2, 0x2f, 0xd8, 0xf6, 0x9d, 0x38, 0xbe, 0x45, 0x6e, 0xdb, 0xc4, 0x14, 0xd4,
	0x24, 0x3c, 0xd2, 0xe1, 0x58, 0x82, 0x40, 0xd5, 0x74, 0x09, 0xf6, 0xb9, 0x2b, 0x21, 0x51, 0xe2,
	0xd3, 0x62, 0xf8, 0x05, 0xcd, 0xc0, 0x78, 0xd2, 0x81, 0x5a, 0x6a, 0x46, 0x8c, 0x3d, 0x9a, 0xb0,
	0x2e, 0x59, 0xe8, 0x3a, 0x40, 0xcc, 0x50, 0x1d, 0x9e, 0x56, 0x66, 0x0b, 0xf3, 0x67, 0xcb, 0xa1,
	0x1c, 0xe5, 0x40, 0x8e, 0x72, 0xb8, 0xec, 0x52, 0x8e, 0xf2, 0x0a, 0xae, 0x13, 0x19, 0x93, 0x91,
	0xf0, 0xd4, 0xbe, 0xcf, 0xc0, 0x9b, 0xfb, 0x20, 0x23, 0x45, 0x79, 0x59, 0x6c, 0x1c, 0x28, 0x98,
	0xf1, 0x74, 0xea, 0xf0, 0xf4, 0xf0, 0x6c, 0x61, 0xfe, 0x56, 0x79, 0x3f, 0xc9, 0x5a, 0x8e, 0xa2,
	0xef, 0x1a, 0x7a, 0x14, 0xb9, 0x91, 0xc4, 0x47, 0x37, 0x52, 0xe2, 0x8d, 0x08, 0xf1, 0xce, 0xed,
	0x29, 0x9e, 0x44, 0x4a, 0xaa, 0xf7, 0xa5, 0x02, 0x67, 0xba, 0xcc, 0xef, 0x5d, 0x6d, 0x49, 0x01,
	0xa2, 0x34, 0x50, 0x21, 0x97, 0x16, 0x2b, 0x7a, 0xed, 0x58, 0xc8, 0x4c, 0xdf, 0x0b, 0xf9, 0xb7,
	0x02, 0x33, 0x7b, 0x84, 0x12, 0x67, 0xf6, 0x0e, 0xb1, 0x10, 0x38, 0x92, 0x10, 0xd7, 0x53, 0x33,
	0x62, 0x1d, 0x16, 0xfa, 0x5e, 0x87, 0xb6, 0x66, 0x29, 0xd8, 0x0e, 0xf9, 0x87, 0xfb, 0x97, 0xff,
	0x01, 0x94, 0xba, 0xe7, 0x6e, 0xbb, 0xfc, 0xd2, 0xea, 0x2a, 0x7d, 0xab, 0xfb, 0xb3, 0x02, 0xa7,
	0x76, 0x9c, 0x4a, 0xea, 0xda, 0xa9, 0x9e, 0xf2, 0x7f, 0xa8, 0x97, 0xe9, 0x5f, 0xbd, 0x09, 0x40,
	0x62, 0xd6, 0x15, 0xd1, 0x6e, 0xa3, 0x7e, 0x88, 0x65, 0x9b, 0x8c, 0xac, 0x92, 0xdc, 0x4d, 0xc8,
	0x86, 0x6d, 0x59, 0x8a, 0x78, 0x61, 0x7f, 0xb4, 0x42, 0x94, 0xab, 0x23, 0xcf, 0x7e, 0x3f, 0x35,
	0x64, 0x48, 0x04, 0xed, 0x3a, 0x14, 0xbb, 0xd2, 0xdd, 0xab, 0x54, 0xc6, 0x21, 0xd3, 0x6e, 0x20,
	0x19, 0x6a, 0x69, 0xdf, 0x8d, 0xc0, 0x89, 0x5d, 0x74, 0x93, 0xe3, 0x95, 0x68, 0x3c, 0x42, 0x30,
	0xc2, 0xb0, 0x43, 0x24, 0x82, 0x78, 0x46, 0xd3, 0x50, 0xb0, 0x88, 0x67, 0xba, 0xb4, 0xd1, 0x4e,
	0xc6, 0xbc, 0x91, 0x34, 0xa1, 0x57, 0x61, 0xb8, 0xe9, 0xda, 0xa2, 0x4b, 0xe4, 0x8d, 0xe0, 0x11,
	0x4d, 0xc0, 0x28, 0x7f, 0xc4, 0x88, 0xab, 0x8e, 0x0a, 0x5b, 0xf8, 0x92, 0x8c, 0x3b, 0x9b, 0x8e,
	0xfb, 0x38, 0x64, 0x79, 0x83, 0x30, 0x62, 0xa9, 0xb9, 0x69, 0x65, 0x76, 0xcc, 0x90, 0x6f, 0xe8,
	0x2e, 0xe4, 0x78, 0x23, 0xec, 0x78, 0x63, 0x22, 0x57, 0xde, 0xdb, 0x9f, 0xa8, 0x09, 0xae, 0xcb,
	0xc2, 0xdf, 0x88, 0x70, 0xd0, 0x7d, 0x00, 0xec, 0xfb, 0x2e, 0x5d, 0x6d, 0xfa, 0xc4, 0x53, 0xf3,
	0x02, 0xf5, 0x4a, 0xcf, 0xa8, 0x0b, 0x11, 0x84, 0x91, 0x40, 0x43, 0x15, 0xc8, 0x52, 0x07, 0xd7,
	0x89, 0xa7, 0x82, 0xc0, 0xbd, 0xd4, 0x33, 0xee, 0x52, 0xe0, 0x6e, 0x48, 0x14, 0x74, 0x0b, 0x46,
	0x6d, 0xca, 0xd6, 0x3c, 0xb5, 0x20, 0xe0, 0xde, 0xed, 0x19, 0xee, 0x36, 0x65, 0x6b, 0x46, 0x88,
	0x81, 0x66, 0x61, 0xc4, 0xc2, 0x3e, 0x56, 0x8f, 0x88, 0xec, 0x9c, 0x28, 0x87, 0x07, 0x8e, 0x72,
	0x74, 0x42, 0x29, 0x2f, 0xb0, 0x96, 0x21, 0x46, 0x68, 0xbf, 0x74, 0xef, 0xd9, 0xc9, 0x3d, 0xe3,
	0xe5, 0x6e, 0xdd, 0x73, 0x80, 0xe2, 0xcd, 0xa8, 0x0d, 0x1b, 0x66, 0xde, 0x6b, 0xf1, 0x97, 0x08,
	0xf5, 0x34, 0x1c, 0x4d, 0x0c, 0xa7, 0x96, 0xcc, 0xc4, 0x23, 0xb1, 0x71, 0xc9, 0xd2, 0xfe, 0x1d,
	0xed, 0xda, 0xfd, 0xb7, 0x6f, 0x84, 0x87, 0x89, 0x15, 0xfa, 0x14, 0x2e, 0x50, 0x46, 0x7d, 0x8a,
	0x6d, 0xbb, 0x55, 0x65, 0x35, 0xbf, 0x9a, 0x70, 0x11, 0x45, 0x17, 0x18, 0xbd, 0x6a, 0x8d, 0xbb,
	0x55, 0x0f, 0xdb, 0x44, 0xd4, 0xe3, 0x98, 0x71, 0xb6, 0xed, 0x53, 0xa9, 0xf9, 0xb1, 0x02, 0xcb,
	0x81, 0x43, 0xa5, 0xe6, 0x7b, 0xd7, 0xb9, 0x7b, 0x0f, 0xdb, 0x04, 0xb5, 0x60, 0x6e, 0x3f, 0xe8,
	0x0e, 0x65, 0xd5, 0x86, 0x4b, 0x4d, 0x22, 0xca, 0xba, 0x30, 0x3f, 0x95, 0xea, 0xb5, 0x51, 0x97,
	0x5d, 0xe4, 0x94, 0x19, 0xe7, 0xf6, 0x98, 0xf9, 0x0e, 0x65, 0x2b, 0x01, 0x12, 0x5a, 0x83, 0x49,
	0x81, 0x4d, 0xb0, 0xcb, 0x28, 0xab, 0x7b, 0x55, 0xce, 0x42, 0x06, 0x39, 0x51, 0x0a, 0x97, 0x7b,
	0x2e, 0x85, 0x6b, 0x21, 0x90, 0x81, 0x02, 0x58, 0xf9, 0xe2, 0x2d, 0x33, 0xc1, 0xf3, 0x31, 0x9c,
	0xdc, 0x36, 0x59, 0x8b, 0x12, 0xdb, 0xaa, 0xba, 0xe4, 0x11, 0x76, 0x2d, 0xb5, 0x32, 0xe0, 0xa4,
	0x53, 0xe9, 0x49, 0x3f, 0x09, 0xb0, 0x0d, 0x01, 0x8d, 0x2a, 0x70, 0x26, 0xa5, 0xb1, 0x57, 0x5d,
	0xc7, 0x4d, 0xdb, 0xaf, 0xda, 0xdc, 0x5c, 0xab, 0x36, 0x88, 0x6b, 0x12, 0xe6, 0xe3, 0x3a, 0x51,
	0xf3, 0x62, 0xf5, 0xa7, 0x93, 0xfa, 0x79, 0x1f, 0x07, 0x23, 0x6f, 0x73, 0x73, 0x6d, 0xa5, 0x3d,
	0x2e, 0xd9, 0x64, 0x21, 0xd5, 0x64, 0xb5, 0x2d, 0x05, 0x4e, 0x76, 0xa9, 0x80, 0x4a, 0xcd, 0x3f,
	0x84, 0xf5, 0x8c, 0x26, 0x21, 0x1b, 0x64, 0x24, 0xb5, 0xa2, 0x3d, 0x86, 0xd5, 0xfc, 0x25, 0x4b,
	0xfb, 0x27, 0x13, 0x9f, 0x78, 0x3a, 0x49, 0x1e, 0xc2, 0xfa, 0xee, 0xce, 0x12, 0x4d, 0xc1, 0x58,
	0xbb, 0xa4, 0xb3, 0xa2, 0xa4, 0x73, 0x35, 0x59, 0xb3, 0x33, 0x30, 0x1e, 0xe7, 0x93, 0xc7, 0xed,
	0x68, 0x4b, 0x3d, 0xda, 0xb6, 0xde, 0xe3, 0xb6, 0x85, 0x2e, 0x41, 0x3e, 0x2e, 0xdb, 0xb1, 0xbd,
	0xca, 0x76, 0xcc, 0x89, 0xea, 0x32, 0x91, 0x5e, 0xf9, 0x54, 0x7a, 0xcd, 0x3f, 0x1d, 0x87, 0x51,
	0xa1, 0x3c, 0x7a, 0xaa, 0x40, 0x36, 0x3c, 0xd6, 0xa0, 0xcb, 0x3d, 0x9c, 0xed, 0x52, 0xa7, 0xac,
	0xe2, 0xfb, 0x7d, 0x78, 0x86, 0x0b, 0xac, 0x95, 0xbe, 0xf8, 0xf5, 0xaf, 0x27, 0x19, 0x15, 0x1d,
	0xd7, 0xbb, 0x5e, 0x9b, 0xd1, 0x37, 0x0a, 0xe4, 0xe4, 0x65, 0x16, 0xf5, 0x32, 0x4d, 0xfa, 0x5e,
	0x5c, 0xbc, 0xd2, 0x8f, 0xab, 0x0c, 0xf1, 0x94, 0x08, 0x71, 0x0a, 0xbd, 0xde, 0x19, 0xa2, 0xbc,
	0x42, 0xa3, 0x1f, 0x15, 0x28, 0x24, 0xf2, 0x17, 0x7d, 0x30, 0xc0, 0x21, 0x39, 0x0c, 0x77, 0xf0,
	0x63, 0xb6, 0x36, 0x2f, 0xa2, 0xbe, 0x80, 0xce, 0x77, 0x46, 0x9d, 0x7c, 0xdd, 0x90, 0x09, 0xb1,
	0xa9, 0x6f, 0x50, 0x6b, 0x13, 0x7d, 0x9b, 0x81, 0xc9, 0xae, 0xfb, 0x2d, 0xba, 0x79, 0x20, 0xb7,
	0xd7, 0x90, 0xdc, 0x41, 0xde, 0x84, 0xb5, 0xc7, 0x82, 0xa6, 0x8f, 0xdc, 0x5d, 0x68, 0xce, 0xc5,
	0x65, 0xaa, 0x6f, 0x74, 0x69, 0x27, 0x9b, 0x69, 0x2b, 0xb5, 0x36, 0xf5, 0x8d, 0xed, 0xdd, 0x21,
	0x6d, 0x0c, 0xe4, 0xfa, 0x3a, 0x03, 0xe3, 0xe9, 0xbe, 0x85, 0x16, 0xfb, 0xe6, 0x16, 0xb7, 0xf6,
	0xe2, 0x87, 0x83, 0x81, 0x48, 0x65, 0x3e, 0x17, 0xca, 0xac, 0x23, 0x7f, 0x37, 0x65, 0x58, 0xcd,
	0x3f, 0x48, 0x49, 0xf4, 0x8d, 0xb0, 0x03, 0x6e, 0xa2, 0x3f, 0x94, 0x54, 0x2a, 0xc5, 0x17, 0xf7,
	0x01, 0x52, 0x69, 0xdb, 0x8f, 0x88, 0x01, 0x52, 0x69, 0xfb, 0x9f, 0x04, 0x6d, 0x4e, 0x08, 0x76,
	0x0e, 0xcd, 0xec, 0xab, 0x62, 0xd0, 0x0f, 0x0a, 0xbc, 0xd2, 0x71, 0x79, 0x46, 0x3d, 0xae, 0x5c,
	0xf7, 0x6b, 0x7e, 0xf1, 0xda, 0x80, 0x28, 0x92, 0xcf, 0x69, 0xc1, 0xe7, 0x24, 0x3a, 0xb1, 0x0b,
	0x1f, 0xf4, 0x24, 0x03, 0x53, 0x3b, 0xfe, 0x29, 0x43, 0x95, 0x41, 0x22, 0xd9, 0xfe, 0xff, 0xb0,
	0xb8, 0x7c, 0x60, 0x78, 0x92, 0xe3, 0x47, 0x82, 0xe3, 0x32, 0xba, 0x73, 0xa0, 0xe5, 0x7f, 0xb5,
	0xf2, 0x6c, 0xab, 0xa4, 0x3c, 0xdf, 0x2a, 0x29, 0x7f, 0x6e, 0x95, 0x94, 0xaf, 0x5e, 0x94, 0x86,
	0x9e, 0xbf, 0x28, 0x0d, 0xfd, 0xf6, 0xa2, 0x34, 0x74, 0xff, 0x9d, 0x3a, 0xf5, 0x1f, 0x34, 0x57,
	0xcb, 0x26, 0x77, 0xf4, 0x36, 0x17, 0x3d, 0xc1, 0x45, 0xff, 0x2c, 0x15, 0x8a, 0xdf, 0x6a, 0x10,
	0x6f, 0x35, 0x2b, 0x6e, 0x6e, 0x6f, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0x42, 0xd0, 0x8d, 0xc7,
	0xcd, 0x16, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Parameters queries the parameters of the module.
	Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error)
	Address(ctx context.Context, in *QueryAddressRequest, opts ...grpc.CallOption) (*QueryAddressResponse, error)
	Marketplace(ctx context.Context, in *QueryGetMarketplaceRequest, opts ...grpc.CallOption) (*QueryGetMarketplaceResponse, error)
	MarketplaceCollection(ctx context.Context, in *QueryGetMarketplaceCollectionRequest, opts ...grpc.CallOption) (*QueryGetMarketplaceCollectionResponse, error)
	MarketplaceNft(ctx context.Context, in *QueryGetMarketplaceNftRequest, opts ...grpc.CallOption) (*QueryGetMarketplaceNftResponse, error)
	MarketplacesByCreator(ctx context.Context, in *QueryGetMarketplacesByCreatorRequest, opts ...grpc.CallOption) (*QueryGetMarketplacesByCreatorResponse, error)
	AllMarketplaces(ctx context.Context, in *QueryGetAllMarketplacesRequest, opts ...grpc.CallOption) (*QueryGetAllMarketplacesResponse, error)
	AllMarketplaceCollections(ctx context.Context, in *QueryGetAllMarketplaceCollectionsRequest, opts ...grpc.CallOption) (*QueryGetAllMarketplaceCollectionsResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error) {
	out := new(QueryParamsResponse)
	err := c.cc.Invoke(ctx, "/LimeChain.mantrachain.marketplace.v1.Query/Params", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Address(ctx context.Context, in *QueryAddressRequest, opts ...grpc.CallOption) (*QueryAddressResponse, error) {
	out := new(QueryAddressResponse)
	err := c.cc.Invoke(ctx, "/LimeChain.mantrachain.marketplace.v1.Query/Address", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Marketplace(ctx context.Context, in *QueryGetMarketplaceRequest, opts ...grpc.CallOption) (*QueryGetMarketplaceResponse, error) {
	out := new(QueryGetMarketplaceResponse)
	err := c.cc.Invoke(ctx, "/LimeChain.mantrachain.marketplace.v1.Query/Marketplace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) MarketplaceCollection(ctx context.Context, in *QueryGetMarketplaceCollectionRequest, opts ...grpc.CallOption) (*QueryGetMarketplaceCollectionResponse, error) {
	out := new(QueryGetMarketplaceCollectionResponse)
	err := c.cc.Invoke(ctx, "/LimeChain.mantrachain.marketplace.v1.Query/MarketplaceCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) MarketplaceNft(ctx context.Context, in *QueryGetMarketplaceNftRequest, opts ...grpc.CallOption) (*QueryGetMarketplaceNftResponse, error) {
	out := new(QueryGetMarketplaceNftResponse)
	err := c.cc.Invoke(ctx, "/LimeChain.mantrachain.marketplace.v1.Query/MarketplaceNft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) MarketplacesByCreator(ctx context.Context, in *QueryGetMarketplacesByCreatorRequest, opts ...grpc.CallOption) (*QueryGetMarketplacesByCreatorResponse, error) {
	out := new(QueryGetMarketplacesByCreatorResponse)
	err := c.cc.Invoke(ctx, "/LimeChain.mantrachain.marketplace.v1.Query/MarketplacesByCreator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) AllMarketplaces(ctx context.Context, in *QueryGetAllMarketplacesRequest, opts ...grpc.CallOption) (*QueryGetAllMarketplacesResponse, error) {
	out := new(QueryGetAllMarketplacesResponse)
	err := c.cc.Invoke(ctx, "/LimeChain.mantrachain.marketplace.v1.Query/AllMarketplaces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) AllMarketplaceCollections(ctx context.Context, in *QueryGetAllMarketplaceCollectionsRequest, opts ...grpc.CallOption) (*QueryGetAllMarketplaceCollectionsResponse, error) {
	out := new(QueryGetAllMarketplaceCollectionsResponse)
	err := c.cc.Invoke(ctx, "/LimeChain.mantrachain.marketplace.v1.Query/AllMarketplaceCollections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Parameters queries the parameters of the module.
	Params(context.Context, *QueryParamsRequest) (*QueryParamsResponse, error)
	Address(context.Context, *QueryAddressRequest) (*QueryAddressResponse, error)
	Marketplace(context.Context, *QueryGetMarketplaceRequest) (*QueryGetMarketplaceResponse, error)
	MarketplaceCollection(context.Context, *QueryGetMarketplaceCollectionRequest) (*QueryGetMarketplaceCollectionResponse, error)
	MarketplaceNft(context.Context, *QueryGetMarketplaceNftRequest) (*QueryGetMarketplaceNftResponse, error)
	MarketplacesByCreator(context.Context, *QueryGetMarketplacesByCreatorRequest) (*QueryGetMarketplacesByCreatorResponse, error)
	AllMarketplaces(context.Context, *QueryGetAllMarketplacesRequest) (*QueryGetAllMarketplacesResponse, error)
	AllMarketplaceCollections(context.Context, *QueryGetAllMarketplaceCollectionsRequest) (*QueryGetAllMarketplaceCollectionsResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Params(ctx context.Context, req *QueryParamsRequest) (*QueryParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Params not implemented")
}
func (*UnimplementedQueryServer) Address(ctx context.Context, req *QueryAddressRequest) (*QueryAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Address not implemented")
}
func (*UnimplementedQueryServer) Marketplace(ctx context.Context, req *QueryGetMarketplaceRequest) (*QueryGetMarketplaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Marketplace not implemented")
}
func (*UnimplementedQueryServer) MarketplaceCollection(ctx context.Context, req *QueryGetMarketplaceCollectionRequest) (*QueryGetMarketplaceCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarketplaceCollection not implemented")
}
func (*UnimplementedQueryServer) MarketplaceNft(ctx context.Context, req *QueryGetMarketplaceNftRequest) (*QueryGetMarketplaceNftResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarketplaceNft not implemented")
}
func (*UnimplementedQueryServer) MarketplacesByCreator(ctx context.Context, req *QueryGetMarketplacesByCreatorRequest) (*QueryGetMarketplacesByCreatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarketplacesByCreator not implemented")
}
func (*UnimplementedQueryServer) AllMarketplaces(ctx context.Context, req *QueryGetAllMarketplacesRequest) (*QueryGetAllMarketplacesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllMarketplaces not implemented")
}
func (*UnimplementedQueryServer) AllMarketplaceCollections(ctx context.Context, req *QueryGetAllMarketplaceCollectionsRequest) (*QueryGetAllMarketplaceCollectionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllMarketplaceCollections not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Params_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Params(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LimeChain.mantrachain.marketplace.v1.Query/Params",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Params(ctx, req.(*QueryParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Address_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Address(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LimeChain.mantrachain.marketplace.v1.Query/Address",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Address(ctx, req.(*QueryAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Marketplace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetMarketplaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Marketplace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LimeChain.mantrachain.marketplace.v1.Query/Marketplace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Marketplace(ctx, req.(*QueryGetMarketplaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_MarketplaceCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetMarketplaceCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).MarketplaceCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LimeChain.mantrachain.marketplace.v1.Query/MarketplaceCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).MarketplaceCollection(ctx, req.(*QueryGetMarketplaceCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_MarketplaceNft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetMarketplaceNftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).MarketplaceNft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LimeChain.mantrachain.marketplace.v1.Query/MarketplaceNft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).MarketplaceNft(ctx, req.(*QueryGetMarketplaceNftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_MarketplacesByCreator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetMarketplacesByCreatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).MarketplacesByCreator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LimeChain.mantrachain.marketplace.v1.Query/MarketplacesByCreator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).MarketplacesByCreator(ctx, req.(*QueryGetMarketplacesByCreatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_AllMarketplaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetAllMarketplacesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).AllMarketplaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LimeChain.mantrachain.marketplace.v1.Query/AllMarketplaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).AllMarketplaces(ctx, req.(*QueryGetAllMarketplacesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_AllMarketplaceCollections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetAllMarketplaceCollectionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).AllMarketplaceCollections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LimeChain.mantrachain.marketplace.v1.Query/AllMarketplaceCollections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).AllMarketplaceCollections(ctx, req.(*QueryGetAllMarketplaceCollectionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "LimeChain.mantrachain.marketplace.v1.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Params",
			Handler:    _Query_Params_Handler,
		},
		{
			MethodName: "Address",
			Handler:    _Query_Address_Handler,
		},
		{
			MethodName: "Marketplace",
			Handler:    _Query_Marketplace_Handler,
		},
		{
			MethodName: "MarketplaceCollection",
			Handler:    _Query_MarketplaceCollection_Handler,
		},
		{
			MethodName: "MarketplaceNft",
			Handler:    _Query_MarketplaceNft_Handler,
		},
		{
			MethodName: "MarketplacesByCreator",
			Handler:    _Query_MarketplacesByCreator_Handler,
		},
		{
			MethodName: "AllMarketplaces",
			Handler:    _Query_AllMarketplaces_Handler,
		},
		{
			MethodName: "AllMarketplaceCollections",
			Handler:    _Query_AllMarketplaceCollections_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "marketplace/v1/query.proto",
}

func (m *QueryAddressRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAddressRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAddressRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAllMarketplaceCollectionsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAllMarketplaceCollectionsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAllMarketplaceCollectionsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MarketplaceId) > 0 {
		i -= len(m.MarketplaceId)
		copy(dAtA[i:], m.MarketplaceId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MarketplaceId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MarketplaceCreator) > 0 {
		i -= len(m.MarketplaceCreator)
		copy(dAtA[i:], m.MarketplaceCreator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MarketplaceCreator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAllMarketplaceCollectionsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAllMarketplaceCollectionsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAllMarketplaceCollectionsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Collections) > 0 {
		for iNdEx := len(m.Collections) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Collections[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.MarketplaceId) > 0 {
		i -= len(m.MarketplaceId)
		copy(dAtA[i:], m.MarketplaceId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MarketplaceId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MarketplaceCreator) > 0 {
		i -= len(m.MarketplaceCreator)
		copy(dAtA[i:], m.MarketplaceCreator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MarketplaceCreator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetMarketplacesByCreatorRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMarketplacesByCreatorRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMarketplacesByCreatorRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetMarketplacesByCreatorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMarketplacesByCreatorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMarketplacesByCreatorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Marketplaces) > 0 {
		for iNdEx := len(m.Marketplaces) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Marketplaces[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAllMarketplacesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAllMarketplacesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAllMarketplacesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAllMarketplacesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAllMarketplacesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAllMarketplacesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Marketplaces) > 0 {
		for iNdEx := len(m.Marketplaces) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Marketplaces[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryGetMarketplaceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMarketplaceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMarketplaceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetMarketplaceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMarketplaceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMarketplaceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if len(m.Links) > 0 {
		for iNdEx := len(m.Links) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Links[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x5a
		}
	}
	if len(m.Images) > 0 {
		for iNdEx := len(m.Images) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Images[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x52
		}
	}
	if len(m.Attributes) > 0 {
		for iNdEx := len(m.Attributes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Attributes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.Options) > 0 {
		for iNdEx := len(m.Options) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Options[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if m.Opened {
		i--
		if m.Opened {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetMarketplaceCollectionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMarketplaceCollectionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMarketplaceCollectionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CollectionId) > 0 {
		i -= len(m.CollectionId)
		copy(dAtA[i:], m.CollectionId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.CollectionId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CollectionCreator) > 0 {
		i -= len(m.CollectionCreator)
		copy(dAtA[i:], m.CollectionCreator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.CollectionCreator)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MarketplaceId) > 0 {
		i -= len(m.MarketplaceId)
		copy(dAtA[i:], m.MarketplaceId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MarketplaceId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MarketplaceCreator) > 0 {
		i -= len(m.MarketplaceCreator)
		copy(dAtA[i:], m.MarketplaceCreator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MarketplaceCreator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetMarketplaceCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMarketplaceCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMarketplaceCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NftsEarningsOnYieldReward) > 0 {
		for iNdEx := len(m.NftsEarningsOnYieldReward) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NftsEarningsOnYieldReward[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4
			i--
			dAtA[i] = 0xf2
		}
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.InitiallyNftsVaultLockPercentage) > 0 {
		i -= len(m.InitiallyNftsVaultLockPercentage)
		copy(dAtA[i:], m.InitiallyNftsVaultLockPercentage)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.InitiallyNftsVaultLockPercentage)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.NftsEarningsOnSale) > 0 {
		for iNdEx := len(m.NftsEarningsOnSale) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NftsEarningsOnSale[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.InitiallyNftCollectionOwnerNftsMinPrice != nil {
		{
			size, err := m.InitiallyNftCollectionOwnerNftsMinPrice.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.InitiallyNftCollectionOwnerNftsForSale {
		i--
		if m.InitiallyNftCollectionOwnerNftsForSale {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.CollectionId) > 0 {
		i -= len(m.CollectionId)
		copy(dAtA[i:], m.CollectionId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.CollectionId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CollectionCreator) > 0 {
		i -= len(m.CollectionCreator)
		copy(dAtA[i:], m.CollectionCreator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.CollectionCreator)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MarketplaceId) > 0 {
		i -= len(m.MarketplaceId)
		copy(dAtA[i:], m.MarketplaceId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MarketplaceId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MarketplaceCreator) > 0 {
		i -= len(m.MarketplaceCreator)
		copy(dAtA[i:], m.MarketplaceCreator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MarketplaceCreator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetMarketplaceNftRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMarketplaceNftRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMarketplaceNftRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NftId) > 0 {
		i -= len(m.NftId)
		copy(dAtA[i:], m.NftId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.NftId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CollectionId) > 0 {
		i -= len(m.CollectionId)
		copy(dAtA[i:], m.CollectionId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.CollectionId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CollectionCreator) > 0 {
		i -= len(m.CollectionCreator)
		copy(dAtA[i:], m.CollectionCreator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.CollectionCreator)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MarketplaceId) > 0 {
		i -= len(m.MarketplaceId)
		copy(dAtA[i:], m.MarketplaceId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MarketplaceId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MarketplaceCreator) > 0 {
		i -= len(m.MarketplaceCreator)
		copy(dAtA[i:], m.MarketplaceCreator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MarketplaceCreator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetMarketplaceNftResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMarketplaceNftResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMarketplaceNftResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x4a
	}
	if m.MinPrice != nil {
		{
			size, err := m.MinPrice.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.InitiallySold {
		i--
		if m.InitiallySold {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.ForSale {
		i--
		if m.ForSale {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.NftId) > 0 {
		i -= len(m.NftId)
		copy(dAtA[i:], m.NftId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.NftId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CollectionId) > 0 {
		i -= len(m.CollectionId)
		copy(dAtA[i:], m.CollectionId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.CollectionId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CollectionCreator) > 0 {
		i -= len(m.CollectionCreator)
		copy(dAtA[i:], m.CollectionCreator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.CollectionCreator)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MarketplaceId) > 0 {
		i -= len(m.MarketplaceId)
		copy(dAtA[i:], m.MarketplaceId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MarketplaceId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MarketplaceCreator) > 0 {
		i -= len(m.MarketplaceCreator)
		copy(dAtA[i:], m.MarketplaceCreator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MarketplaceCreator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryAddressRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAllMarketplaceCollectionsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MarketplaceCreator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.MarketplaceId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAllMarketplaceCollectionsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MarketplaceCreator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.MarketplaceId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if len(m.Collections) > 0 {
		for _, e := range m.Collections {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetMarketplacesByCreatorRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetMarketplacesByCreatorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if len(m.Marketplaces) > 0 {
		for _, e := range m.Marketplaces {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAllMarketplacesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAllMarketplacesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Marketplaces) > 0 {
		for _, e := range m.Marketplaces {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryGetMarketplaceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetMarketplaceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.Opened {
		n += 2
	}
	if len(m.Options) > 0 {
		for _, e := range m.Options {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if len(m.Attributes) > 0 {
		for _, e := range m.Attributes {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if len(m.Images) > 0 {
		for _, e := range m.Images {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if len(m.Links) > 0 {
		for _, e := range m.Links {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetMarketplaceCollectionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MarketplaceCreator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.MarketplaceId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.CollectionCreator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.CollectionId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetMarketplaceCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MarketplaceCreator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.MarketplaceId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.CollectionCreator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.CollectionId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.InitiallyNftCollectionOwnerNftsForSale {
		n += 2
	}
	if m.InitiallyNftCollectionOwnerNftsMinPrice != nil {
		l = m.InitiallyNftCollectionOwnerNftsMinPrice.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	if len(m.NftsEarningsOnSale) > 0 {
		for _, e := range m.NftsEarningsOnSale {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	l = len(m.InitiallyNftsVaultLockPercentage)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if len(m.NftsEarningsOnYieldReward) > 0 {
		for _, e := range m.NftsEarningsOnYieldReward {
			l = e.Size()
			n += 2 + l + sovQuery(uint64(l))
		}
	}
	return n
}

func (m *QueryGetMarketplaceNftRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MarketplaceCreator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.MarketplaceId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.CollectionCreator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.CollectionId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.NftId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetMarketplaceNftResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MarketplaceCreator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.MarketplaceId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.CollectionCreator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.CollectionId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.NftId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.ForSale {
		n += 2
	}
	if m.InitiallySold {
		n += 2
	}
	if m.MinPrice != nil {
		l = m.MinPrice.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryAddressRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAddressRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAddressRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAllMarketplaceCollectionsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAllMarketplaceCollectionsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAllMarketplaceCollectionsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAllMarketplaceCollectionsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAllMarketplaceCollectionsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAllMarketplaceCollectionsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Collections", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Collections = append(m.Collections, &QueryGetMarketplaceCollectionResponse{})
			if err := m.Collections[len(m.Collections)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMarketplacesByCreatorRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMarketplacesByCreatorRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMarketplacesByCreatorRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMarketplacesByCreatorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMarketplacesByCreatorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMarketplacesByCreatorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Marketplaces", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Marketplaces = append(m.Marketplaces, &QueryGetMarketplaceResponse{})
			if err := m.Marketplaces[len(m.Marketplaces)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAllMarketplacesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAllMarketplacesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAllMarketplacesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAllMarketplacesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAllMarketplacesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAllMarketplacesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Marketplaces", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Marketplaces = append(m.Marketplaces, &QueryGetMarketplaceResponse{})
			if err := m.Marketplaces[len(m.Marketplaces)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMarketplaceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMarketplaceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMarketplaceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMarketplaceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMarketplaceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMarketplaceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Opened", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Opened = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Options", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Options = append(m.Options, &MarketplaceOption{})
			if err := m.Options[len(m.Options)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attributes = append(m.Attributes, &MarketplaceAttribute{})
			if err := m.Attributes[len(m.Attributes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Images", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Images = append(m.Images, &MarketplaceImage{})
			if err := m.Images[len(m.Images)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Links", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Links = append(m.Links, &MarketplaceLink{})
			if err := m.Links[len(m.Links)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &types.Any{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMarketplaceCollectionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMarketplaceCollectionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMarketplaceCollectionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMarketplaceCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMarketplaceCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMarketplaceCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitiallyNftCollectionOwnerNftsForSale", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InitiallyNftCollectionOwnerNftsForSale = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitiallyNftCollectionOwnerNftsMinPrice", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InitiallyNftCollectionOwnerNftsMinPrice == nil {
				m.InitiallyNftCollectionOwnerNftsMinPrice = &types1.Coin{}
			}
			if err := m.InitiallyNftCollectionOwnerNftsMinPrice.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftsEarningsOnSale", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftsEarningsOnSale = append(m.NftsEarningsOnSale, &MarketplaceEarning{})
			if err := m.NftsEarningsOnSale[len(m.NftsEarningsOnSale)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitiallyNftsVaultLockPercentage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InitiallyNftsVaultLockPercentage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 78:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftsEarningsOnYieldReward", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftsEarningsOnYieldReward = append(m.NftsEarningsOnYieldReward, &MarketplaceEarning{})
			if err := m.NftsEarningsOnYieldReward[len(m.NftsEarningsOnYieldReward)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMarketplaceNftRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMarketplaceNftRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMarketplaceNftRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMarketplaceNftResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMarketplaceNftResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMarketplaceNftResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForSale", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ForSale = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitiallySold", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InitiallySold = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinPrice", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MinPrice == nil {
				m.MinPrice = &types1.Coin{}
			}
			if err := m.MinPrice.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
