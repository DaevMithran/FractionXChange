// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: marketplace/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgBuyNft struct {
	Creator            string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MarketplaceCreator string `protobuf:"bytes,2,opt,name=marketplace_creator,json=marketplaceCreator,proto3" json:"marketplace_creator,omitempty"`
	MarketplaceId      string `protobuf:"bytes,3,opt,name=marketplace_id,json=marketplaceId,proto3" json:"marketplace_id,omitempty"`
	CollectionCreator  string `protobuf:"bytes,4,opt,name=collection_creator,json=collectionCreator,proto3" json:"collection_creator,omitempty"`
	CollectionId       string `protobuf:"bytes,5,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	NftId              string `protobuf:"bytes,6,opt,name=nft_id,json=nftId,proto3" json:"nft_id,omitempty"`
}

func (m *MsgBuyNft) Reset()         { *m = MsgBuyNft{} }
func (m *MsgBuyNft) String() string { return proto.CompactTextString(m) }
func (*MsgBuyNft) ProtoMessage()    {}
func (*MsgBuyNft) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd2162eda376e37c, []int{0}
}
func (m *MsgBuyNft) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyNft) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyNft.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyNft) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyNft.Merge(m, src)
}
func (m *MsgBuyNft) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyNft) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyNft.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyNft proto.InternalMessageInfo

func (m *MsgBuyNft) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgBuyNft) GetMarketplaceCreator() string {
	if m != nil {
		return m.MarketplaceCreator
	}
	return ""
}

func (m *MsgBuyNft) GetMarketplaceId() string {
	if m != nil {
		return m.MarketplaceId
	}
	return ""
}

func (m *MsgBuyNft) GetCollectionCreator() string {
	if m != nil {
		return m.CollectionCreator
	}
	return ""
}

func (m *MsgBuyNft) GetCollectionId() string {
	if m != nil {
		return m.CollectionId
	}
	return ""
}

func (m *MsgBuyNft) GetNftId() string {
	if m != nil {
		return m.NftId
	}
	return ""
}

type MsgBuyNftResponse struct {
	MarketplaceCreator string `protobuf:"bytes,1,opt,name=marketplace_creator,json=marketplaceCreator,proto3" json:"marketplace_creator,omitempty"`
	MarketplaceId      string `protobuf:"bytes,2,opt,name=marketplace_id,json=marketplaceId,proto3" json:"marketplace_id,omitempty"`
	CollectionCreator  string `protobuf:"bytes,3,opt,name=collection_creator,json=collectionCreator,proto3" json:"collection_creator,omitempty"`
	CollectionId       string `protobuf:"bytes,4,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	NftId              string `protobuf:"bytes,5,opt,name=nft_id,json=nftId,proto3" json:"nft_id,omitempty"`
	Owner              string `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
	Receiver           string `protobuf:"bytes,7,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Staked             bool   `protobuf:"varint,8,opt,name=staked,proto3" json:"staked,omitempty"`
}

func (m *MsgBuyNftResponse) Reset()         { *m = MsgBuyNftResponse{} }
func (m *MsgBuyNftResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBuyNftResponse) ProtoMessage()    {}
func (*MsgBuyNftResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd2162eda376e37c, []int{1}
}
func (m *MsgBuyNftResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyNftResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyNftResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyNftResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyNftResponse.Merge(m, src)
}
func (m *MsgBuyNftResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyNftResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyNftResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyNftResponse proto.InternalMessageInfo

func (m *MsgBuyNftResponse) GetMarketplaceCreator() string {
	if m != nil {
		return m.MarketplaceCreator
	}
	return ""
}

func (m *MsgBuyNftResponse) GetMarketplaceId() string {
	if m != nil {
		return m.MarketplaceId
	}
	return ""
}

func (m *MsgBuyNftResponse) GetCollectionCreator() string {
	if m != nil {
		return m.CollectionCreator
	}
	return ""
}

func (m *MsgBuyNftResponse) GetCollectionId() string {
	if m != nil {
		return m.CollectionId
	}
	return ""
}

func (m *MsgBuyNftResponse) GetNftId() string {
	if m != nil {
		return m.NftId
	}
	return ""
}

func (m *MsgBuyNftResponse) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgBuyNftResponse) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *MsgBuyNftResponse) GetStaked() bool {
	if m != nil {
		return m.Staked
	}
	return false
}

type MsgImportCollection struct {
	Creator            string                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MarketplaceCreator string                 `protobuf:"bytes,2,opt,name=marketplace_creator,json=marketplaceCreator,proto3" json:"marketplace_creator,omitempty"`
	MarketplaceId      string                 `protobuf:"bytes,3,opt,name=marketplace_id,json=marketplaceId,proto3" json:"marketplace_id,omitempty"`
	CollectionCreator  string                 `protobuf:"bytes,4,opt,name=collection_creator,json=collectionCreator,proto3" json:"collection_creator,omitempty"`
	CollectionId       string                 `protobuf:"bytes,5,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	Settings           *MsgCollectionSettings `protobuf:"bytes,6,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (m *MsgImportCollection) Reset()         { *m = MsgImportCollection{} }
func (m *MsgImportCollection) String() string { return proto.CompactTextString(m) }
func (*MsgImportCollection) ProtoMessage()    {}
func (*MsgImportCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd2162eda376e37c, []int{2}
}
func (m *MsgImportCollection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgImportCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgImportCollection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgImportCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgImportCollection.Merge(m, src)
}
func (m *MsgImportCollection) XXX_Size() int {
	return m.Size()
}
func (m *MsgImportCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgImportCollection.DiscardUnknown(m)
}

var xxx_messageInfo_MsgImportCollection proto.InternalMessageInfo

func (m *MsgImportCollection) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgImportCollection) GetMarketplaceCreator() string {
	if m != nil {
		return m.MarketplaceCreator
	}
	return ""
}

func (m *MsgImportCollection) GetMarketplaceId() string {
	if m != nil {
		return m.MarketplaceId
	}
	return ""
}

func (m *MsgImportCollection) GetCollectionCreator() string {
	if m != nil {
		return m.CollectionCreator
	}
	return ""
}

func (m *MsgImportCollection) GetCollectionId() string {
	if m != nil {
		return m.CollectionId
	}
	return ""
}

func (m *MsgImportCollection) GetSettings() *MsgCollectionSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type MsgCollectionSettings struct {
	InitiallyCollectionOwnerNftsForSale  bool                                    `protobuf:"varint,1,opt,name=initially_collection_owner_nfts_for_sale,json=initiallyCollectionOwnerNftsForSale,proto3" json:"initially_collection_owner_nfts_for_sale,omitempty"`
	InitiallyCollectionOwnerNftsMinPrice string                                  `protobuf:"bytes,2,opt,name=initially_collection_owner_nfts_min_price,json=initiallyCollectionOwnerNftsMinPrice,proto3" json:"initially_collection_owner_nfts_min_price,omitempty"`
	NftsEarningsOnSale                   []*MarketplaceEarning                   `protobuf:"bytes,3,rep,name=nfts_earnings_on_sale,json=nftsEarningsOnSale,proto3" json:"nfts_earnings_on_sale,omitempty"`
	NftsEarningsOnYieldReward            []*MarketplaceEarning                   `protobuf:"bytes,4,rep,name=nfts_earnings_on_yield_reward,json=nftsEarningsOnYieldReward,proto3" json:"nfts_earnings_on_yield_reward,omitempty"`
	InitiallyNftsVaultLockPercentage     *github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,5,opt,name=initially_nfts_vault_lock_percentage,json=initiallyNftsVaultLockPercentage,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"initially_nfts_vault_lock_percentage,omitempty" yaml:"initially_nfts_vault_lock_percentage"`
}

func (m *MsgCollectionSettings) Reset()         { *m = MsgCollectionSettings{} }
func (m *MsgCollectionSettings) String() string { return proto.CompactTextString(m) }
func (*MsgCollectionSettings) ProtoMessage()    {}
func (*MsgCollectionSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd2162eda376e37c, []int{3}
}
func (m *MsgCollectionSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCollectionSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCollectionSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCollectionSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCollectionSettings.Merge(m, src)
}
func (m *MsgCollectionSettings) XXX_Size() int {
	return m.Size()
}
func (m *MsgCollectionSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCollectionSettings.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCollectionSettings proto.InternalMessageInfo

func (m *MsgCollectionSettings) GetInitiallyCollectionOwnerNftsForSale() bool {
	if m != nil {
		return m.InitiallyCollectionOwnerNftsForSale
	}
	return false
}

func (m *MsgCollectionSettings) GetInitiallyCollectionOwnerNftsMinPrice() string {
	if m != nil {
		return m.InitiallyCollectionOwnerNftsMinPrice
	}
	return ""
}

func (m *MsgCollectionSettings) GetNftsEarningsOnSale() []*MarketplaceEarning {
	if m != nil {
		return m.NftsEarningsOnSale
	}
	return nil
}

func (m *MsgCollectionSettings) GetNftsEarningsOnYieldReward() []*MarketplaceEarning {
	if m != nil {
		return m.NftsEarningsOnYieldReward
	}
	return nil
}

type MsgImportCollectionResponse struct {
	MarketplaceId    string `protobuf:"bytes,1,opt,name=marketplace_id,json=marketplaceId,proto3" json:"marketplace_id,omitempty"`
	MarketplaceOwner string `protobuf:"bytes,2,opt,name=marketplace_owner,json=marketplaceOwner,proto3" json:"marketplace_owner,omitempty"`
	CollectionId     string `protobuf:"bytes,3,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	CollectionOwner  string `protobuf:"bytes,4,opt,name=collection_owner,json=collectionOwner,proto3" json:"collection_owner,omitempty"`
}

func (m *MsgImportCollectionResponse) Reset()         { *m = MsgImportCollectionResponse{} }
func (m *MsgImportCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgImportCollectionResponse) ProtoMessage()    {}
func (*MsgImportCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd2162eda376e37c, []int{4}
}
func (m *MsgImportCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgImportCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgImportCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgImportCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgImportCollectionResponse.Merge(m, src)
}
func (m *MsgImportCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgImportCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgImportCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgImportCollectionResponse proto.InternalMessageInfo

func (m *MsgImportCollectionResponse) GetMarketplaceId() string {
	if m != nil {
		return m.MarketplaceId
	}
	return ""
}

func (m *MsgImportCollectionResponse) GetMarketplaceOwner() string {
	if m != nil {
		return m.MarketplaceOwner
	}
	return ""
}

func (m *MsgImportCollectionResponse) GetCollectionId() string {
	if m != nil {
		return m.CollectionId
	}
	return ""
}

func (m *MsgImportCollectionResponse) GetCollectionOwner() string {
	if m != nil {
		return m.CollectionOwner
	}
	return ""
}

type MsgRegisterMarketplace struct {
	Creator     string                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Marketplace *MsgMarketplaceMetadata `protobuf:"bytes,2,opt,name=marketplace,proto3" json:"marketplace,omitempty"`
}

func (m *MsgRegisterMarketplace) Reset()         { *m = MsgRegisterMarketplace{} }
func (m *MsgRegisterMarketplace) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterMarketplace) ProtoMessage()    {}
func (*MsgRegisterMarketplace) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd2162eda376e37c, []int{5}
}
func (m *MsgRegisterMarketplace) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterMarketplace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterMarketplace.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterMarketplace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterMarketplace.Merge(m, src)
}
func (m *MsgRegisterMarketplace) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterMarketplace) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterMarketplace.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterMarketplace proto.InternalMessageInfo

func (m *MsgRegisterMarketplace) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRegisterMarketplace) GetMarketplace() *MsgMarketplaceMetadata {
	if m != nil {
		return m.Marketplace
	}
	return nil
}

type MsgMarketplaceMetadata struct {
	Id          string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url         string                  `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Description string                  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Opened      bool                    `protobuf:"varint,5,opt,name=opened,proto3" json:"opened,omitempty"`
	Options     []*MarketplaceOption    `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty"`
	Attributes  []*MarketplaceAttribute `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Images      []*MarketplaceImage     `protobuf:"bytes,8,rep,name=images,proto3" json:"images,omitempty"`
	Links       []*MarketplaceLink      `protobuf:"bytes,9,rep,name=links,proto3" json:"links,omitempty"`
	Data        *types.Any              `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *MsgMarketplaceMetadata) Reset()         { *m = MsgMarketplaceMetadata{} }
func (m *MsgMarketplaceMetadata) String() string { return proto.CompactTextString(m) }
func (*MsgMarketplaceMetadata) ProtoMessage()    {}
func (*MsgMarketplaceMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd2162eda376e37c, []int{6}
}
func (m *MsgMarketplaceMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketplaceMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketplaceMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketplaceMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketplaceMetadata.Merge(m, src)
}
func (m *MsgMarketplaceMetadata) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketplaceMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketplaceMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketplaceMetadata proto.InternalMessageInfo

func (m *MsgMarketplaceMetadata) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgMarketplaceMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgMarketplaceMetadata) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *MsgMarketplaceMetadata) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgMarketplaceMetadata) GetOpened() bool {
	if m != nil {
		return m.Opened
	}
	return false
}

func (m *MsgMarketplaceMetadata) GetOptions() []*MarketplaceOption {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *MsgMarketplaceMetadata) GetAttributes() []*MarketplaceAttribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *MsgMarketplaceMetadata) GetImages() []*MarketplaceImage {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *MsgMarketplaceMetadata) GetLinks() []*MarketplaceLink {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *MsgMarketplaceMetadata) GetData() *types.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type MsgRegisterMarketplaceResponse struct {
	MarketplaceCreator string `protobuf:"bytes,1,opt,name=marketplace_creator,json=marketplaceCreator,proto3" json:"marketplace_creator,omitempty"`
	MarketplaceId      string `protobuf:"bytes,2,opt,name=marketplace_id,json=marketplaceId,proto3" json:"marketplace_id,omitempty"`
}

func (m *MsgRegisterMarketplaceResponse) Reset()         { *m = MsgRegisterMarketplaceResponse{} }
func (m *MsgRegisterMarketplaceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterMarketplaceResponse) ProtoMessage()    {}
func (*MsgRegisterMarketplaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd2162eda376e37c, []int{7}
}
func (m *MsgRegisterMarketplaceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterMarketplaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterMarketplaceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterMarketplaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterMarketplaceResponse.Merge(m, src)
}
func (m *MsgRegisterMarketplaceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterMarketplaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterMarketplaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterMarketplaceResponse proto.InternalMessageInfo

func (m *MsgRegisterMarketplaceResponse) GetMarketplaceCreator() string {
	if m != nil {
		return m.MarketplaceCreator
	}
	return ""
}

func (m *MsgRegisterMarketplaceResponse) GetMarketplaceId() string {
	if m != nil {
		return m.MarketplaceId
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgBuyNft)(nil), "LimeChain.mantrachain.marketplace.v1.MsgBuyNft")
	proto.RegisterType((*MsgBuyNftResponse)(nil), "LimeChain.mantrachain.marketplace.v1.MsgBuyNftResponse")
	proto.RegisterType((*MsgImportCollection)(nil), "LimeChain.mantrachain.marketplace.v1.MsgImportCollection")
	proto.RegisterType((*MsgCollectionSettings)(nil), "LimeChain.mantrachain.marketplace.v1.MsgCollectionSettings")
	proto.RegisterType((*MsgImportCollectionResponse)(nil), "LimeChain.mantrachain.marketplace.v1.MsgImportCollectionResponse")
	proto.RegisterType((*MsgRegisterMarketplace)(nil), "LimeChain.mantrachain.marketplace.v1.MsgRegisterMarketplace")
	proto.RegisterType((*MsgMarketplaceMetadata)(nil), "LimeChain.mantrachain.marketplace.v1.MsgMarketplaceMetadata")
	proto.RegisterType((*MsgRegisterMarketplaceResponse)(nil), "LimeChain.mantrachain.marketplace.v1.MsgRegisterMarketplaceResponse")
}

func init() { proto.RegisterFile("marketplace/v1/tx.proto", fileDescriptor_fd2162eda376e37c) }

var fileDescriptor_fd2162eda376e37c = []byte{
	// 996 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x96, 0x4f, 0x6f, 0x1b, 0xc5,
	0x1b, 0xc7, 0xb3, 0xfe, 0x17, 0xe7, 0xf1, 0xaf, 0xfd, 0x25, 0x93, 0xa4, 0x6c, 0x5d, 0xe1, 0x58,
	0x6e, 0x41, 0xae, 0xaa, 0xee, 0xaa, 0xe1, 0x4f, 0xa1, 0x70, 0x49, 0x02, 0x48, 0x16, 0x71, 0x52,
	0xb6, 0x82, 0x8a, 0x4a, 0xb0, 0x9a, 0xec, 0x8e, 0xb7, 0x23, 0xef, 0xce, 0x58, 0x33, 0xe3, 0x34,
	0xe6, 0x55, 0x54, 0xdc, 0xb8, 0x71, 0xe4, 0xc2, 0x8d, 0x37, 0xc0, 0xad, 0xc7, 0x1e, 0x11, 0x87,
	0xa8, 0x4a, 0x2e, 0x9c, 0x79, 0x01, 0x08, 0xed, 0xec, 0x7a, 0xbd, 0x4d, 0x4c, 0xb0, 0xa9, 0xb8,
	0x70, 0xf2, 0xcc, 0xce, 0xf7, 0xf9, 0x3c, 0xf3, 0x3c, 0xf3, 0x3c, 0xe3, 0x81, 0xd7, 0x22, 0x2c,
	0xfa, 0x44, 0x0d, 0x42, 0xec, 0x11, 0xfb, 0xf0, 0x8e, 0xad, 0x8e, 0xac, 0x81, 0xe0, 0x8a, 0xa3,
	0x1b, 0xbb, 0x34, 0x22, 0x3b, 0x8f, 0x31, 0x65, 0x56, 0x84, 0x99, 0x12, 0xd8, 0x4b, 0xc7, 0x99,
	0xdc, 0x3a, 0xbc, 0x53, 0xbf, 0x1a, 0x70, 0x1e, 0x84, 0xc4, 0xd6, 0x36, 0x07, 0xc3, 0x9e, 0x8d,
	0xd9, 0x28, 0x01, 0xd4, 0xd7, 0x02, 0x1e, 0x70, 0x3d, 0xb4, 0xe3, 0x51, 0xfa, 0xf5, 0xda, 0x19,
	0x7f, 0x1e, 0x8f, 0x22, 0xce, 0x92, 0xc5, 0xd6, 0x6f, 0x06, 0x2c, 0x75, 0x65, 0xb0, 0x3d, 0x1c,
	0xed, 0xf5, 0x14, 0x32, 0x61, 0xd1, 0x13, 0x04, 0x2b, 0x2e, 0x4c, 0xa3, 0x69, 0xb4, 0x97, 0x9c,
	0xf1, 0x14, 0xd9, 0xb0, 0x9a, 0xc3, 0xb8, 0x63, 0x55, 0x41, 0xab, 0x50, 0x6e, 0x69, 0x27, 0x35,
	0x78, 0x03, 0x2e, 0xe7, 0x0d, 0xa8, 0x6f, 0x16, 0xb5, 0xf6, 0x52, 0xee, 0x6b, 0xc7, 0x47, 0xb7,
	0x01, 0x79, 0x3c, 0x0c, 0x89, 0xa7, 0x28, 0x67, 0x19, 0xb6, 0xa4, 0xa5, 0x2b, 0x93, 0x95, 0x31,
	0xf5, 0x3a, 0x5c, 0xca, 0xc9, 0xa9, 0x6f, 0x96, 0xb5, 0xf2, 0x7f, 0x93, 0x8f, 0x1d, 0x1f, 0xad,
	0x43, 0x85, 0xf5, 0x54, 0xbc, 0x5a, 0xd1, 0xab, 0x65, 0xd6, 0x53, 0x1d, 0xbf, 0xf5, 0x7d, 0x01,
	0x56, 0xb2, 0x50, 0x1d, 0x22, 0x07, 0x9c, 0x49, 0xf2, 0x57, 0x81, 0x19, 0x73, 0x04, 0x56, 0x98,
	0x3d, 0xb0, 0xe2, 0xcc, 0x81, 0x95, 0x2e, 0x0c, 0xac, 0x9c, 0x0b, 0x0c, 0xad, 0x41, 0x99, 0x3f,
	0x61, 0x44, 0x8c, 0xc3, 0xd5, 0x13, 0x54, 0x87, 0xaa, 0x20, 0x1e, 0xa1, 0x87, 0x44, 0x98, 0x8b,
	0x7a, 0x21, 0x9b, 0xa3, 0x2b, 0x50, 0x91, 0x0a, 0xf7, 0x89, 0x6f, 0x56, 0x9b, 0x46, 0xbb, 0xea,
	0xa4, 0xb3, 0xd6, 0x4f, 0x05, 0x58, 0xed, 0xca, 0xa0, 0x13, 0x0d, 0xb8, 0x50, 0x3b, 0x99, 0xeb,
	0xff, 0x48, 0x5d, 0x3c, 0x84, 0xaa, 0x24, 0x4a, 0x51, 0x16, 0x48, 0x9d, 0xaa, 0xda, 0xe6, 0x07,
	0xd6, 0x2c, 0x2d, 0x67, 0x75, 0x65, 0x30, 0x49, 0xc6, 0x83, 0x14, 0xe1, 0x64, 0xb0, 0xd6, 0x8b,
	0x12, 0xac, 0x4f, 0xd5, 0xa0, 0xcf, 0xa1, 0x4d, 0x19, 0x55, 0x14, 0x87, 0xe1, 0xc8, 0xcd, 0xed,
	0x50, 0x1f, 0x91, 0xcb, 0x7a, 0x4a, 0xba, 0x3d, 0x2e, 0x5c, 0x89, 0x43, 0xa2, 0x33, 0x5b, 0x75,
	0xae, 0x67, 0xfa, 0x09, 0x6e, 0x3f, 0x56, 0xef, 0xf5, 0x94, 0xfc, 0x84, 0x8b, 0x07, 0x38, 0x24,
	0xe8, 0x21, 0xdc, 0xfc, 0x3b, 0x6c, 0x44, 0x99, 0x3b, 0x10, 0xd4, 0x23, 0xe9, 0x59, 0xdc, 0xb8,
	0x88, 0xdb, 0xa5, 0xec, 0x7e, 0xac, 0x45, 0x7d, 0x58, 0xd7, 0xd6, 0x04, 0x0b, 0x16, 0x07, 0xe0,
	0x72, 0x96, 0x6c, 0xae, 0xd8, 0x2c, 0xb6, 0x6b, 0x9b, 0xef, 0xcd, 0x98, 0xaf, 0xc9, 0xf4, 0xe3,
	0x04, 0xe4, 0xa0, 0x18, 0x9b, 0x4e, 0xe4, 0x3e, 0xd3, 0x51, 0x7c, 0x03, 0xaf, 0x9f, 0x73, 0x36,
	0xa2, 0x24, 0xf4, 0x5d, 0x41, 0x9e, 0x60, 0x11, 0xf7, 0xc0, 0xab, 0x39, 0xbd, 0xfa, 0xb2, 0xd3,
	0x2f, 0x63, 0xb6, 0xa3, 0xd1, 0xe8, 0x47, 0x03, 0x26, 0x19, 0x49, 0x32, 0x76, 0x88, 0x87, 0xa1,
	0x72, 0x43, 0xee, 0xf5, 0xdd, 0x01, 0x11, 0x1e, 0x61, 0x0a, 0x07, 0x24, 0x29, 0xa4, 0xed, 0xaf,
	0x9e, 0x1d, 0x6f, 0x18, 0xbf, 0x1e, 0x6f, 0xbc, 0x19, 0x50, 0xf5, 0x78, 0x78, 0x60, 0x79, 0x3c,
	0xb2, 0x3d, 0x2e, 0x23, 0x2e, 0xd3, 0x9f, 0xdb, 0xd2, 0xef, 0xdb, 0x6a, 0x34, 0x20, 0xd2, 0xea,
	0x30, 0xf5, 0xfb, 0xf1, 0xc6, 0xad, 0x11, 0x8e, 0xc2, 0x7b, 0xad, 0x59, 0x7c, 0xb4, 0x9c, 0x66,
	0x26, 0x8b, 0x4f, 0xe3, 0x8b, 0x58, 0xb4, 0xcb, 0xbd, 0xfe, 0xfd, 0x89, 0xe4, 0x67, 0x03, 0xae,
	0x4d, 0xe9, 0xcc, 0xec, 0x1a, 0x3b, 0xdf, 0x56, 0xc6, 0xb4, 0xb6, 0xba, 0x05, 0x2b, 0x79, 0x59,
	0x72, 0x6d, 0x24, 0x05, 0xb2, 0x9c, 0x5b, 0xd0, 0x85, 0x71, 0xbe, 0xa9, 0x8a, 0x53, 0x9a, 0xea,
	0x26, 0x2c, 0x9f, 0x2d, 0xc0, 0xb4, 0x4d, 0xff, 0xef, 0xbd, 0x5c, 0x68, 0xad, 0x6f, 0x0d, 0xb8,
	0xd2, 0x95, 0x81, 0x43, 0x02, 0x2a, 0x15, 0x11, 0xb9, 0x03, 0xbb, 0xe0, 0x82, 0xf9, 0x1a, 0x6a,
	0xb9, 0x8d, 0xe9, 0xbd, 0xd6, 0x36, 0x3f, 0x9c, 0xb9, 0x6f, 0x73, 0x4e, 0xba, 0x44, 0x61, 0x1f,
	0x2b, 0xec, 0xe4, 0x81, 0xad, 0x3f, 0x8a, 0x7a, 0x53, 0x53, 0x74, 0xe8, 0x32, 0x14, 0xb2, 0x3c,
	0x16, 0xa8, 0x8f, 0x10, 0x94, 0x18, 0x8e, 0xc6, 0x0d, 0xa5, 0xc7, 0x68, 0x19, 0x8a, 0x43, 0x11,
	0xa6, 0x99, 0x89, 0x87, 0xa8, 0x09, 0x35, 0x9f, 0x48, 0x4f, 0xd0, 0x41, 0x1c, 0x79, 0x9a, 0x8b,
	0xfc, 0xa7, 0xf8, 0xf6, 0xe5, 0x03, 0xc2, 0x48, 0x72, 0x4b, 0x55, 0x9d, 0x74, 0x86, 0x3e, 0x83,
	0x45, 0xae, 0x15, 0xf1, 0xf5, 0x14, 0x57, 0xfe, 0xdd, 0xb9, 0x2b, 0x7f, 0x5f, 0xdb, 0x3b, 0x63,
	0x0e, 0x7a, 0x04, 0x80, 0x95, 0x12, 0xf4, 0x60, 0xa8, 0x88, 0x34, 0x17, 0x35, 0xf5, 0xde, 0xdc,
	0xd4, 0xad, 0x31, 0xc2, 0xc9, 0xd1, 0xd0, 0x1e, 0x54, 0x68, 0x84, 0x03, 0x22, 0xcd, 0xaa, 0xe6,
	0xbe, 0x3b, 0x37, 0xb7, 0x13, 0x9b, 0x3b, 0x29, 0x05, 0x7d, 0x0a, 0xe5, 0x90, 0xb2, 0xbe, 0x34,
	0x97, 0x34, 0xee, 0x9d, 0xb9, 0x71, 0xbb, 0x94, 0xf5, 0x9d, 0x84, 0x81, 0xda, 0x50, 0x8a, 0xcf,
	0xd0, 0x04, 0x5d, 0x2f, 0x6b, 0x56, 0xf2, 0x68, 0xb2, 0xc6, 0x8f, 0x26, 0x6b, 0x8b, 0x8d, 0x1c,
	0xad, 0x68, 0x1d, 0x41, 0x63, 0x7a, 0x51, 0xfe, 0xdb, 0x4f, 0x84, 0xcd, 0x1f, 0x8a, 0x50, 0xec,
	0xca, 0x00, 0x7d, 0x67, 0xc0, 0xea, 0xb4, 0xa6, 0x98, 0xbd, 0xca, 0xa7, 0x58, 0xd7, 0x3f, 0x7a,
	0x15, 0xeb, 0x2c, 0xf6, 0xa7, 0x06, 0x2c, 0x9f, 0x7b, 0x0e, 0xbc, 0x3f, 0x33, 0xfa, 0xac, 0x69,
	0x7d, 0xeb, 0x1f, 0x9b, 0x66, 0x5b, 0x12, 0x50, 0x49, 0x9f, 0xab, 0xf6, 0xcc, 0xb0, 0xc4, 0xa0,
	0x7e, 0x77, 0x4e, 0x83, 0xb1, 0xcf, 0xed, 0xbd, 0x67, 0x27, 0x0d, 0xe3, 0xf9, 0x49, 0xc3, 0x78,
	0x71, 0xd2, 0x30, 0x9e, 0x9e, 0x36, 0x16, 0x9e, 0x9f, 0x36, 0x16, 0x7e, 0x39, 0x6d, 0x2c, 0x3c,
	0x7a, 0x3b, 0xf7, 0x8f, 0x90, 0xc1, 0xed, 0x1c, 0xdc, 0x3e, 0xb2, 0xf3, 0x0f, 0x70, 0xfd, 0x1f,
	0x71, 0x50, 0xd1, 0x85, 0xf8, 0xd6, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xca, 0x2c, 0xc8, 0xe2,
	0x0c, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	RegisterMarketplace(ctx context.Context, in *MsgRegisterMarketplace, opts ...grpc.CallOption) (*MsgRegisterMarketplaceResponse, error)
	ImportCollection(ctx context.Context, in *MsgImportCollection, opts ...grpc.CallOption) (*MsgImportCollectionResponse, error)
	BuyNft(ctx context.Context, in *MsgBuyNft, opts ...grpc.CallOption) (*MsgBuyNftResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) RegisterMarketplace(ctx context.Context, in *MsgRegisterMarketplace, opts ...grpc.CallOption) (*MsgRegisterMarketplaceResponse, error) {
	out := new(MsgRegisterMarketplaceResponse)
	err := c.cc.Invoke(ctx, "/LimeChain.mantrachain.marketplace.v1.Msg/RegisterMarketplace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ImportCollection(ctx context.Context, in *MsgImportCollection, opts ...grpc.CallOption) (*MsgImportCollectionResponse, error) {
	out := new(MsgImportCollectionResponse)
	err := c.cc.Invoke(ctx, "/LimeChain.mantrachain.marketplace.v1.Msg/ImportCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BuyNft(ctx context.Context, in *MsgBuyNft, opts ...grpc.CallOption) (*MsgBuyNftResponse, error) {
	out := new(MsgBuyNftResponse)
	err := c.cc.Invoke(ctx, "/LimeChain.mantrachain.marketplace.v1.Msg/BuyNft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	RegisterMarketplace(context.Context, *MsgRegisterMarketplace) (*MsgRegisterMarketplaceResponse, error)
	ImportCollection(context.Context, *MsgImportCollection) (*MsgImportCollectionResponse, error)
	BuyNft(context.Context, *MsgBuyNft) (*MsgBuyNftResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) RegisterMarketplace(ctx context.Context, req *MsgRegisterMarketplace) (*MsgRegisterMarketplaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterMarketplace not implemented")
}
func (*UnimplementedMsgServer) ImportCollection(ctx context.Context, req *MsgImportCollection) (*MsgImportCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportCollection not implemented")
}
func (*UnimplementedMsgServer) BuyNft(ctx context.Context, req *MsgBuyNft) (*MsgBuyNftResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyNft not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_RegisterMarketplace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterMarketplace)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterMarketplace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LimeChain.mantrachain.marketplace.v1.Msg/RegisterMarketplace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterMarketplace(ctx, req.(*MsgRegisterMarketplace))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ImportCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgImportCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ImportCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LimeChain.mantrachain.marketplace.v1.Msg/ImportCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ImportCollection(ctx, req.(*MsgImportCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BuyNft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBuyNft)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BuyNft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LimeChain.mantrachain.marketplace.v1.Msg/BuyNft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BuyNft(ctx, req.(*MsgBuyNft))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "LimeChain.mantrachain.marketplace.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterMarketplace",
			Handler:    _Msg_RegisterMarketplace_Handler,
		},
		{
			MethodName: "ImportCollection",
			Handler:    _Msg_ImportCollection_Handler,
		},
		{
			MethodName: "BuyNft",
			Handler:    _Msg_BuyNft_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "marketplace/v1/tx.proto",
}

func (m *MsgBuyNft) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyNft) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyNft) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NftId) > 0 {
		i -= len(m.NftId)
		copy(dAtA[i:], m.NftId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NftId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CollectionId) > 0 {
		i -= len(m.CollectionId)
		copy(dAtA[i:], m.CollectionId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CollectionId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CollectionCreator) > 0 {
		i -= len(m.CollectionCreator)
		copy(dAtA[i:], m.CollectionCreator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CollectionCreator)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.MarketplaceId) > 0 {
		i -= len(m.MarketplaceId)
		copy(dAtA[i:], m.MarketplaceId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketplaceId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MarketplaceCreator) > 0 {
		i -= len(m.MarketplaceCreator)
		copy(dAtA[i:], m.MarketplaceCreator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketplaceCreator)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBuyNftResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyNftResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyNftResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Staked {
		i--
		if m.Staked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.NftId) > 0 {
		i -= len(m.NftId)
		copy(dAtA[i:], m.NftId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NftId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CollectionId) > 0 {
		i -= len(m.CollectionId)
		copy(dAtA[i:], m.CollectionId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CollectionId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CollectionCreator) > 0 {
		i -= len(m.CollectionCreator)
		copy(dAtA[i:], m.CollectionCreator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CollectionCreator)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MarketplaceId) > 0 {
		i -= len(m.MarketplaceId)
		copy(dAtA[i:], m.MarketplaceId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketplaceId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MarketplaceCreator) > 0 {
		i -= len(m.MarketplaceCreator)
		copy(dAtA[i:], m.MarketplaceCreator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketplaceCreator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgImportCollection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgImportCollection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgImportCollection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.CollectionId) > 0 {
		i -= len(m.CollectionId)
		copy(dAtA[i:], m.CollectionId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CollectionId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CollectionCreator) > 0 {
		i -= len(m.CollectionCreator)
		copy(dAtA[i:], m.CollectionCreator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CollectionCreator)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.MarketplaceId) > 0 {
		i -= len(m.MarketplaceId)
		copy(dAtA[i:], m.MarketplaceId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketplaceId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MarketplaceCreator) > 0 {
		i -= len(m.MarketplaceCreator)
		copy(dAtA[i:], m.MarketplaceCreator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketplaceCreator)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCollectionSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCollectionSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCollectionSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.InitiallyNftsVaultLockPercentage != nil {
		{
			size := m.InitiallyNftsVaultLockPercentage.Size()
			i -= size
			if _, err := m.InitiallyNftsVaultLockPercentage.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.NftsEarningsOnYieldReward) > 0 {
		for iNdEx := len(m.NftsEarningsOnYieldReward) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NftsEarningsOnYieldReward[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.NftsEarningsOnSale) > 0 {
		for iNdEx := len(m.NftsEarningsOnSale) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NftsEarningsOnSale[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.InitiallyCollectionOwnerNftsMinPrice) > 0 {
		i -= len(m.InitiallyCollectionOwnerNftsMinPrice)
		copy(dAtA[i:], m.InitiallyCollectionOwnerNftsMinPrice)
		i = encodeVarintTx(dAtA, i, uint64(len(m.InitiallyCollectionOwnerNftsMinPrice)))
		i--
		dAtA[i] = 0x12
	}
	if m.InitiallyCollectionOwnerNftsForSale {
		i--
		if m.InitiallyCollectionOwnerNftsForSale {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgImportCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgImportCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgImportCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CollectionOwner) > 0 {
		i -= len(m.CollectionOwner)
		copy(dAtA[i:], m.CollectionOwner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CollectionOwner)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CollectionId) > 0 {
		i -= len(m.CollectionId)
		copy(dAtA[i:], m.CollectionId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CollectionId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MarketplaceOwner) > 0 {
		i -= len(m.MarketplaceOwner)
		copy(dAtA[i:], m.MarketplaceOwner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketplaceOwner)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MarketplaceId) > 0 {
		i -= len(m.MarketplaceId)
		copy(dAtA[i:], m.MarketplaceId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketplaceId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterMarketplace) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterMarketplace) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterMarketplace) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Marketplace != nil {
		{
			size, err := m.Marketplace.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMarketplaceMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketplaceMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketplaceMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if len(m.Links) > 0 {
		for iNdEx := len(m.Links) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Links[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.Images) > 0 {
		for iNdEx := len(m.Images) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Images[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.Attributes) > 0 {
		for iNdEx := len(m.Attributes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Attributes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.Options) > 0 {
		for iNdEx := len(m.Options) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Options[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if m.Opened {
		i--
		if m.Opened {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterMarketplaceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterMarketplaceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterMarketplaceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MarketplaceId) > 0 {
		i -= len(m.MarketplaceId)
		copy(dAtA[i:], m.MarketplaceId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketplaceId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MarketplaceCreator) > 0 {
		i -= len(m.MarketplaceCreator)
		copy(dAtA[i:], m.MarketplaceCreator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketplaceCreator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgBuyNft) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MarketplaceCreator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MarketplaceId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CollectionCreator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CollectionId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NftId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgBuyNftResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MarketplaceCreator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MarketplaceId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CollectionCreator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CollectionId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NftId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Staked {
		n += 2
	}
	return n
}

func (m *MsgImportCollection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MarketplaceCreator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MarketplaceId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CollectionCreator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CollectionId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCollectionSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InitiallyCollectionOwnerNftsForSale {
		n += 2
	}
	l = len(m.InitiallyCollectionOwnerNftsMinPrice)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.NftsEarningsOnSale) > 0 {
		for _, e := range m.NftsEarningsOnSale {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.NftsEarningsOnYieldReward) > 0 {
		for _, e := range m.NftsEarningsOnYieldReward {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.InitiallyNftsVaultLockPercentage != nil {
		l = m.InitiallyNftsVaultLockPercentage.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgImportCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MarketplaceId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MarketplaceOwner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CollectionId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CollectionOwner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterMarketplace) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Marketplace != nil {
		l = m.Marketplace.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMarketplaceMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Opened {
		n += 2
	}
	if len(m.Options) > 0 {
		for _, e := range m.Options {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Attributes) > 0 {
		for _, e := range m.Attributes {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Images) > 0 {
		for _, e := range m.Images {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Links) > 0 {
		for _, e := range m.Links {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterMarketplaceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MarketplaceCreator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MarketplaceId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgBuyNft) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyNft: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyNft: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyNftResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyNftResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyNftResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Staked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Staked = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgImportCollection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgImportCollection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgImportCollection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &MsgCollectionSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCollectionSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCollectionSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCollectionSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitiallyCollectionOwnerNftsForSale", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InitiallyCollectionOwnerNftsForSale = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitiallyCollectionOwnerNftsMinPrice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InitiallyCollectionOwnerNftsMinPrice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftsEarningsOnSale", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftsEarningsOnSale = append(m.NftsEarningsOnSale, &MarketplaceEarning{})
			if err := m.NftsEarningsOnSale[len(m.NftsEarningsOnSale)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftsEarningsOnYieldReward", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftsEarningsOnYieldReward = append(m.NftsEarningsOnYieldReward, &MarketplaceEarning{})
			if err := m.NftsEarningsOnYieldReward[len(m.NftsEarningsOnYieldReward)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitiallyNftsVaultLockPercentage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_cosmos_cosmos_sdk_types.Int
			m.InitiallyNftsVaultLockPercentage = &v
			if err := m.InitiallyNftsVaultLockPercentage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgImportCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgImportCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgImportCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceOwner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceOwner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionOwner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionOwner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterMarketplace) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterMarketplace: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterMarketplace: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Marketplace", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Marketplace == nil {
				m.Marketplace = &MsgMarketplaceMetadata{}
			}
			if err := m.Marketplace.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketplaceMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketplaceMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketplaceMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Opened", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Opened = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Options", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Options = append(m.Options, &MarketplaceOption{})
			if err := m.Options[len(m.Options)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attributes = append(m.Attributes, &MarketplaceAttribute{})
			if err := m.Attributes[len(m.Attributes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Images", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Images = append(m.Images, &MarketplaceImage{})
			if err := m.Images[len(m.Images)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Links", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Links = append(m.Links, &MarketplaceLink{})
			if err := m.Links[len(m.Links)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &types.Any{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterMarketplaceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterMarketplaceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterMarketplaceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceCreator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceCreator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketplaceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
